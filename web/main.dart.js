// Generated by dart2js (, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.8.2.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded. The loadPriority argument is an arbitrary argument
//    string forwarded from the 'dart2js:load-priority' pragma option.
// dartDeferredLibraryMultiLoader(uris, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of every URI in `uris`,
//    and call successCallback. If it fails to do so, it should call
//    errorCallback with an error. The loadId argument is the deferred import
//    that resulted in this uri being loaded. The loadPriority argument is an
//    arbitrary argument string forwarded from the 'dart2js:load-priority'
//    pragma option.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key)) {
        to[key] = from[key];
      }
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(Object.getPrototypeOf(object) && Object.getPrototypeOf(object).p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        Object.setPrototypeOf(cls.prototype, sup.prototype);
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++) {
      inherit(classes[i], sup);
    }
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        holder[name] = initializer();
      }
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel) {
          A.throwLateFieldADI(name);
        }
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.$flags = 7;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i) {
      convertToFastObject(arrayOfObjects[i]);
    }
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number") {
      funType += typesOffset;
    }
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      var t1 = A._setArrayType(allocation, $E._eval$1("JSArray<0>"));
      t1.$flags = 1;
      return t1;
    },
    JSArray__compareAny(a, b) {
      var t1 = type$.Comparable_dynamic;
      return J.compareTo$1$ns(t1._as(a), t1._as(b));
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = string.charCodeAt(index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var t1, index0, codeUnit;
      for (t1 = string.length; index > 0; index = index0) {
        index0 = index - 1;
        if (!(index0 < t1))
          return A.ioore(string, index0);
        codeUnit = string.charCodeAt(index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$_innerHtml$x(receiver, value) {
      return J.getInterceptor$x(receiver).set$_innerHtml(receiver, value);
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$attributes$x(receiver) {
      return J.getInterceptor$x(receiver).get$attributes(receiver);
    },
    get$entries$x(receiver) {
      return J.getInterceptor$x(receiver).get$entries(receiver);
    },
    get$first$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$keys$x(receiver) {
      return J.getInterceptor$x(receiver).get$keys(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$lengthInBytes$x(receiver) {
      return J.getInterceptor$x(receiver).get$lengthInBytes(receiver);
    },
    get$line$z(receiver) {
      return J.getInterceptor$z(receiver).get$line(receiver);
    },
    get$message$z(receiver) {
      return J.getInterceptor$z(receiver).get$message(receiver);
    },
    get$offset$z(receiver) {
      return J.getInterceptor$z(receiver).get$offset(receiver);
    },
    get$parent$z(receiver) {
      return J.getInterceptor$z(receiver).get$parent(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$single$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$single(receiver);
    },
    get$source$z(receiver) {
      return J.getInterceptor$z(receiver).get$source(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (Array.isArray(receiver) || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    _clearChildren$0$x(receiver) {
      return J.getInterceptor$x(receiver)._clearChildren$0(receiver);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addAll$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);
    },
    allMatches$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    allMatches$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).allMatches$2(receiver, a0, a1);
    },
    asUint8List$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).asUint8List$2(receiver, a0, a1);
    },
    cast$1$0$ax(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    contains$1$asx(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    containsKey$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).containsKey$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    endsWith$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).endsWith$1(receiver, a0);
    },
    forEach$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    map$2$1$ax(receiver, a0, $T1, $T2) {
      return J.getInterceptor$ax(receiver).map$2$1(receiver, a0, $T1, $T2);
    },
    matchAsPrefix$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
    },
    remove$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    remove$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
    },
    setRange$4$ax(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$ax(receiver).setRange$4(receiver, a0, a1, a2, a3);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    sort$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
    },
    take$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    toList$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toLowerCase$0$s(receiver) {
      return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    where$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).where$1(receiver, a0);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JavaScriptBigInt: function JavaScriptBigInt() {
    },
    JavaScriptSymbol: function JavaScriptSymbol() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _.__interceptors$_length = t1;
      _._index = 0;
      _.__interceptors$_current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  A = {JS_CONST: function JS_CONST() {
    },
    HttpServer_bind(address, port, backlog, shared) {
      return A._HttpServer_bind(address, port, backlog, false, true);
    },
    HttpException$(message, uri) {
      return new A.HttpException(message, uri);
    },
    HttpDate_format(date) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10,
        d = date.toUtc$0(),
        t1 = A.Primitives_getWeekday(d) - 1;
      if (!(t1 >= 0 && t1 < 7))
        return A.ioore(B.List_VDu, t1);
      t1 = B.List_VDu[t1];
      t2 = A.Primitives_getDay(d) <= 9 ? "0" : "";
      t3 = B.JSInt_methods.toString$0(A.Primitives_getDay(d));
      t4 = A.Primitives_getMonth(d) - 1;
      if (!(t4 >= 0 && t4 < 12))
        return A.ioore(B.List_2Rn, t4);
      t4 = B.List_2Rn[t4];
      t5 = B.JSInt_methods.toString$0(A.Primitives_getYear(d));
      t6 = A.Primitives_getHours(d) <= 9 ? " 0" : " ";
      t7 = B.JSInt_methods.toString$0(A.Primitives_getHours(d));
      t8 = A.Primitives_getMinutes(d) <= 9 ? ":0" : ":";
      t9 = B.JSInt_methods.toString$0(A.Primitives_getMinutes(d));
      t10 = A.Primitives_getSeconds(d) <= 9 ? ":0" : ":";
      t10 = "" + t1 + ", " + t2 + t3 + " " + t4 + " " + t5 + t6 + t7 + t8 + t9 + t10 + B.JSInt_methods.toString$0(A.Primitives_getSeconds(d)) + " GMT";
      return t10.charCodeAt(0) == 0 ? t10 : t10;
    },
    _HttpHeaders$(protocolVersion, defaultPortForScheme, initialHeaders) {
      var t1 = new A._HttpHeaders(A.HashMap_HashMap(null, null, null, type$.String, type$.List_String), protocolVersion);
      t1._HttpHeaders$3$defaultPortForScheme$initialHeaders(protocolVersion, defaultPortForScheme, initialHeaders);
      return t1;
    },
    _HttpHeaders__validateField(field) {
      var t1, i, t2;
      for (t1 = field.length, i = 0; i < t1; ++i) {
        t2 = field.charCodeAt(i);
        if (!(t2 > 31 && t2 < 128 && !B.List_H5v[t2]))
          throw A.wrapException(A.FormatException$("Invalid HTTP header field name: " + B.C_JsonCodec.encode$1(field), field, i));
      }
      return field.toLowerCase();
    },
    _HttpHeaders__validateValue(value) {
      var t1, i, t2;
      if (typeof value != "string")
        return value;
      for (t1 = value.length, i = 0; i < t1; ++i) {
        t2 = value.charCodeAt(i);
        if (!(t2 > 31 && t2 < 128 || t2 === 9))
          throw A.wrapException(A.FormatException$("Invalid HTTP header field value: " + B.C_JsonCodec.encode$1(value), value, i));
      }
      return value;
    },
    _HeaderValue__isToken(token) {
      var i, codeUnit,
        t1 = token.length;
      if (t1 === 0)
        return false;
      for (i = 0; i < t1; ++i) {
        codeUnit = token.charCodeAt(i);
        if (codeUnit <= 32 || codeUnit >= 127 || B.JSString_methods.contains$1('"(),/:;<=>?@[]{}', token[i]))
          return false;
      }
      return true;
    },
    _ContentType$(primaryType, subType, charset, parameters) {
      var t1 = new A._ContentType(primaryType, subType, "");
      t1._HeaderValue$2("", B.Map_empty0);
      t1._ContentType$4(primaryType, subType, charset, parameters);
      return t1;
    },
    _Cookie__validateName(newName) {
      var t1, i, codeUnit;
      for (t1 = newName.length, i = 0; i < t1; ++i) {
        codeUnit = newName.charCodeAt(i);
        if (codeUnit <= 32 || codeUnit >= 127 || B.JSArray_methods.contains$1(B.List_bhA, newName[i]))
          throw A.wrapException(A.FormatException$("Invalid character in cookie name, code unit: '" + codeUnit + "'", newName, i));
      }
      return newName;
    },
    _Cookie__validateValue(newValue) {
      var start, i, codeUnit, t1,
        end = newValue.length;
      if (2 <= end && newValue.charCodeAt(0) === 34 && newValue.charCodeAt(end - 1) === 34) {
        --end;
        start = 1;
      } else
        start = 0;
      for (i = start; i < end; ++i) {
        codeUnit = newValue.charCodeAt(i);
        t1 = true;
        if (codeUnit !== 33)
          if (!(codeUnit >= 35 && codeUnit <= 43))
            if (!(codeUnit >= 45 && codeUnit <= 58))
              if (!(codeUnit >= 60 && codeUnit <= 91))
                t1 = codeUnit >= 93 && codeUnit <= 126;
        if (!t1)
          throw A.wrapException(A.FormatException$("Invalid character in cookie value, code unit: '" + codeUnit + "'", newValue, i));
      }
      return newValue;
    },
    _CopyingBytesBuilder__pow2roundup(x) {
      --x;
      x |= B.JSInt_methods._shrOtherPositive$1(x, 1);
      x |= x >>> 2;
      x |= x >>> 4;
      x |= x >>> 8;
      return ((x | x >>> 16) >>> 0) + 1;
    },
    _HttpRequest$(response, _incoming, _httpServer, _httpConnection) {
      var t1 = new A._HttpRequest(response, _httpServer, _httpConnection, _incoming);
      t1._HttpRequest$4(response, _incoming, _httpServer, _httpConnection);
      return t1;
    },
    _HttpConnection$(_socket, _httpServer) {
      var t1 = new A._HttpConnection(_socket, _httpServer, A._HttpParser$_(true), 0);
      t1._HttpConnection$2(_socket, _httpServer);
      return t1;
    },
    _HttpServer_bind(address, port, backlog, v6Only, shared) {
      return A.ServerSocket_bind(address, port, backlog, true, false).then$1$1(new A._HttpServer_bind_closure(), type$.HttpServer);
    },
    _HttpServer$_(_serverSocket, _closeServer) {
      var t2, _null = null,
        defaultResponseHeaders = A._HttpHeaders$("1.1", 80, _null),
        t1 = $.$get$ContentType_text();
      if (!defaultResponseHeaders._mutable)
        A.throwExpression(A.HttpException$("HTTP headers are not mutable", _null));
      defaultResponseHeaders.__http$_headers.$indexSet(0, "content-type", A._setArrayType([t1.toString$0(0)], type$.JSArray_String));
      defaultResponseHeaders.$set$2(0, "X-Frame-Options", "SAMEORIGIN");
      defaultResponseHeaders.$set$2(0, "X-Content-Type-Options", "nosniff");
      defaultResponseHeaders.$set$2(0, "X-XSS-Protection", "1; mode=block");
      t1 = type$.LinkedList__HttpConnection;
      t2 = A.StreamController_StreamController(_null, _null, _null, _null, true, type$.HttpRequest);
      t1 = new A._HttpServer(defaultResponseHeaders, _serverSocket, true, new A.LinkedList(t1), new A.LinkedList(t1), t2, 0);
      t2.set$onCancel(0, t1.get$close(t1));
      t1.set$idleTimeout(B.Duration_120000000);
      $._HttpServer__servers.$indexSet(0, t1.get$_serviceId(), t1);
      return t1;
    },
    _HttpConnectionInfo_create(socket) {
      var exception;
      try {
        socket.get$remoteAddress();
        socket.get$remotePort();
        socket.get$port(0);
        return void 1;
      } catch (exception) {
      }
      return null;
    },
    _HttpParser$_(_requestParser) {
      var _null = null,
        t1 = type$.JSArray_int;
      t1 = new A._HttpParser(true, A._setArrayType([], t1), A._setArrayType([], t1), A._setArrayType([], t1), A._setArrayType([], t1), A.StreamController_StreamController(_null, _null, _null, _null, true, type$._HttpIncoming));
      t1._HttpParser$_$1(true);
      return t1;
    },
    _HttpParser__removeTrailingSpaces(value) {
      var t1,
        $length = value.length;
      while (true) {
        if ($length > 0) {
          t1 = value[$length - 1];
          t1 = t1 === 32 || t1 === 9;
        } else
          t1 = false;
        if (!t1)
          break;
        --$length;
      }
      B.JSArray_methods.set$length(value, $length);
    },
    _HttpParser__tokenizeFieldValue(headerValue) {
      var t1, start, index, t2,
        tokens = A._setArrayType([], type$.JSArray_String);
      for (t1 = headerValue.length, start = 0, index = 0; index < t1;) {
        t2 = headerValue[index];
        if (t2 === ",") {
          B.JSArray_methods.add$1(tokens, B.JSString_methods.substring$2(headerValue, start, index));
          start = index + 1;
        } else if (t2 === " " || t2 === "\t")
          ++start;
        ++index;
      }
      B.JSArray_methods.add$1(tokens, B.JSString_methods.substring$2(headerValue, start, index));
      return tokens;
    },
    _HttpParser__caseInsensitiveCompare(expected, value) {
      var i, t4,
        t1 = expected._string,
        t2 = t1.length,
        t3 = J.getInterceptor$asx(value);
      if (t2 !== t3.get$length(value))
        return false;
      for (i = 0; i < t2; ++i) {
        t4 = t3.$index(value, i);
        if ((t4 - 65 & 127) < 26)
          t4 = (t4 | 32) >>> 0;
        if (t1.charCodeAt(i) !== t4)
          return false;
      }
      return true;
    },
    HttpException: function HttpException(t0, t1) {
      this.message = t0;
      this.uri = t1;
    },
    _HttpHeaders: function _HttpHeaders(t0, t1) {
      var _ = this;
      _.__http$_headers = t0;
      _._originalHeaderNames = null;
      _.protocolVersion = t1;
      _._mutable = true;
      _._contentLength = -1;
      _._persistentConnection = true;
      _._chunkedTransferEncoding = false;
      _.__http$_port = _.__http$_host = null;
    },
    _HttpHeaders_closure: function _HttpHeaders_closure(t0) {
      this.$this = t0;
    },
    _HttpHeaders_forEach_closure: function _HttpHeaders_forEach_closure(t0, t1) {
      this.$this = t0;
      this.action = t1;
    },
    _HttpHeaders__build_closure: function _HttpHeaders__build_closure(t0, t1, t2) {
      this.$this = t0;
      this.ignoreHeader = t1;
      this.builder = t2;
    },
    _HttpHeaders_toString_closure: function _HttpHeaders_toString_closure(t0, t1) {
      this.$this = t0;
      this.sb = t1;
    },
    _HttpHeaders__parseCookies_parseCookieString: function _HttpHeaders__parseCookies_parseCookieString(t0) {
      this.cookies = t0;
    },
    _HttpHeaders__parseCookies_parseCookieString_done: function _HttpHeaders__parseCookies_parseCookieString_done(t0, t1) {
      this._box_0 = t0;
      this.s = t1;
    },
    _HttpHeaders__parseCookies_parseCookieString_skipWS: function _HttpHeaders__parseCookies_parseCookieString_skipWS(t0, t1, t2) {
      this._box_0 = t0;
      this.done = t1;
      this.s = t2;
    },
    _HttpHeaders__parseCookies_parseCookieString_parseName: function _HttpHeaders__parseCookies_parseCookieString_parseName(t0, t1, t2) {
      this._box_0 = t0;
      this.done = t1;
      this.s = t2;
    },
    _HttpHeaders__parseCookies_parseCookieString_parseValue: function _HttpHeaders__parseCookies_parseCookieString_parseValue(t0, t1, t2) {
      this._box_0 = t0;
      this.done = t1;
      this.s = t2;
    },
    _HttpHeaders__parseCookies_parseCookieString_expect: function _HttpHeaders__parseCookies_parseCookieString_expect(t0, t1, t2) {
      this._box_0 = t0;
      this.done = t1;
      this.s = t2;
    },
    _HeaderValue: function _HeaderValue() {
    },
    _HeaderValue_toString_closure: function _HeaderValue_toString_closure(t0) {
      this.sb = t0;
    },
    _ContentType: function _ContentType(t0, t1, t2) {
      var _ = this;
      _._primaryType = t0;
      _._subType = t1;
      _.__http$_value = t2;
      _._unmodifiableParameters = _._parameters = null;
    },
    _ContentType_emptyIfNull: function _ContentType_emptyIfNull() {
    },
    _ContentType_closure: function _ContentType_closure(t0) {
      this.parameterMap = t0;
    },
    _Cookie: function _Cookie(t0, t1) {
      var _ = this;
      _.__http$_name = t0;
      _.__http$_value = t1;
      _._path = null;
      _.httpOnly = true;
    },
    _ServiceObject: function _ServiceObject() {
    },
    _CopyingBytesBuilder: function _CopyingBytesBuilder(t0) {
      this.__http$_length = 0;
      this.__http$_buffer = t0;
    },
    _HttpIncoming: function _HttpIncoming(t0, t1, t2) {
      var _ = this;
      _._dataCompleter = t0;
      _.__http$_stream = t1;
      _.fullBodyRead = false;
      _.headers = t2;
      _.uri = _.method = _.statusCode = null;
      _.hasSubscriber = false;
    },
    _HttpIncoming_listen_closure: function _HttpIncoming_listen_closure(t0) {
      this.$this = t0;
    },
    _HttpIncoming_listen_closure0: function _HttpIncoming_listen_closure0() {
    },
    _HttpInboundMessage: function _HttpInboundMessage() {
    },
    _HttpRequest: function _HttpRequest(t0, t1, t2, t3) {
      var _ = this;
      _.response = t0;
      _._httpServer = t1;
      _._httpConnection = t2;
      _._requestedUri = _._session = null;
      _._incoming = t3;
      _._cookies = null;
    },
    _HttpRequest_closure: function _HttpRequest_closure() {
    },
    _HttpRequest_closure0: function _HttpRequest_closure0() {
    },
    _StreamSinkImpl: function _StreamSinkImpl() {
    },
    _StreamSinkImpl_addStream_targetAddStream: function _StreamSinkImpl_addStream_targetAddStream(t0, t1) {
      this.$this = t0;
      this.stream = t1;
    },
    _StreamSinkImpl_addStream_targetAddStream_closure: function _StreamSinkImpl_addStream_targetAddStream_closure(t0) {
      this.$this = t0;
    },
    _StreamSinkImpl_addStream_closure: function _StreamSinkImpl_addStream_closure(t0) {
      this.targetAddStream = t0;
    },
    _StreamSinkImpl__controller_closure: function _StreamSinkImpl__controller_closure(t0) {
      this.$this = t0;
    },
    _StreamSinkImpl__controller_closure0: function _StreamSinkImpl__controller_closure0(t0) {
      this.$this = t0;
    },
    _IOSinkImpl: function _IOSinkImpl() {
    },
    _HttpOutboundMessage: function _HttpOutboundMessage() {
    },
    _HttpResponse: function _HttpResponse(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._statusCode = 200;
      _._deadlineTimer = _._httpRequest = _._cookies = null;
      _._encodingSet = false;
      _._bufferOutput = true;
      _.__http$_uri = t0;
      _._outgoing = t1;
      _.headers = t2;
      _._encoding = t3;
      _._profileData = t4;
      _._target = t5;
      _._doneCompleter = t6;
      _._controllerCompleter = _._controllerInstance = null;
      _._hasError = _._isBound = _.__http$_isClosed = false;
    },
    _HttpResponse_detachSocket_closure: function _HttpResponse_detachSocket_closure() {
    },
    _HttpResponse__writeHeader_closure: function _HttpResponse__writeHeader_closure(t0) {
      this.$this = t0;
    },
    _HttpOutgoing: function _HttpOutgoing(t0, t1) {
      var _ = this;
      _._doneCompleter = t0;
      _.socket = t1;
      _.headersWritten = _.ignoreBody = false;
      _.__http$_buffer = null;
      _.__http$_length = 0;
      _._closeFuture = null;
      _.chunked = false;
      _._pendingChunkedFooter = 0;
      _.contentLength = null;
      _._bytesWritten = 0;
      _._gzip = false;
      _._gzipBuffer = _._gzipAdd = _._gzipSink = null;
      _._gzipBufferLength = 0;
      _._socketError = false;
      _.outbound = null;
    },
    _HttpOutgoing_writeHeaders_closure: function _HttpOutgoing_writeHeaders_closure() {
    },
    _HttpOutgoing_writeHeaders_closure0: function _HttpOutgoing_writeHeaders_closure0(t0) {
      this.response = t0;
    },
    _HttpOutgoing_addStream_closure: function _HttpOutgoing_addStream_closure() {
    },
    _HttpOutgoing_addStream_closure0: function _HttpOutgoing_addStream_closure0(t0) {
      this.$this = t0;
    },
    _HttpOutgoing_addStream_onData: function _HttpOutgoing_addStream_onData(t0, t1) {
      this.$this = t0;
      this.controller = t1;
    },
    _HttpOutgoing_addStream_closure1: function _HttpOutgoing_addStream_closure1(t0) {
      this.$this = t0;
    },
    _HttpOutgoing_addStream_closure2: function _HttpOutgoing_addStream_closure2(t0) {
      this.$this = t0;
    },
    _HttpOutgoing_close_finalize: function _HttpOutgoing_close_finalize(t0, t1) {
      this.$this = t0;
      this.outbound = t1;
    },
    _HttpOutgoing_close_finalize_closure: function _HttpOutgoing_close_finalize_closure(t0, t1) {
      this.$this = t0;
      this.outbound = t1;
    },
    _HttpOutgoing_close_finalize_closure0: function _HttpOutgoing_close_finalize_closure0(t0, t1) {
      this.$this = t0;
      this.outbound = t1;
    },
    _HttpConnection: function _HttpConnection(t0, t1, t2, t3) {
      var _ = this;
      _._socket = t0;
      _._httpServer = t1;
      _._httpParser = t2;
      _.__http$_state = 1;
      _.__http$_subscription = null;
      _._idleMark = false;
      _._streamFuture = null;
      _._ServiceObject___serviceId = t3;
      _._collection$_previous = _._collection$_next = _._list = null;
    },
    _HttpConnection_closure: function _HttpConnection_closure(t0) {
      this.$this = t0;
    },
    _HttpConnection__closure: function _HttpConnection__closure(t0) {
      this.$this = t0;
    },
    _HttpConnection__closure0: function _HttpConnection__closure0(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.response = t1;
      _.request = t2;
      _.incoming = t3;
    },
    _HttpConnection__closure1: function _HttpConnection__closure1(t0) {
      this.$this = t0;
    },
    _HttpConnection_closure0: function _HttpConnection_closure0(t0) {
      this.$this = t0;
    },
    _HttpConnection_closure1: function _HttpConnection_closure1(t0) {
      this.$this = t0;
    },
    _HttpConnection_detachSocket_closure: function _HttpConnection_detachSocket_closure(t0, t1) {
      this.$this = t0;
      this.detachedIncoming = t1;
    },
    _HttpServer: function _HttpServer(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.defaultResponseHeaders = t0;
      _._sessionManagerInstance = _._idleTimer = null;
      _.closed = false;
      _._serverSocket = t1;
      _._closeServer = t2;
      _._activeConnections = t3;
      _._idleConnections = t4;
      _.__http$_controller = t5;
      _._ServiceObject___serviceId = t6;
    },
    _HttpServer_bind_closure: function _HttpServer_bind_closure() {
    },
    _HttpServer_idleTimeout_closure: function _HttpServer_idleTimeout_closure(t0) {
      this.$this = t0;
    },
    _HttpServer_listen_closure: function _HttpServer_listen_closure(t0) {
      this.$this = t0;
    },
    _HttpServer_listen_closure0: function _HttpServer_listen_closure0(t0) {
      this.$this = t0;
    },
    _DetachedSocket: function _DetachedSocket(t0, t1) {
      this._incoming = t0;
      this._socket = t1;
    },
    _HttpDetachedStreamSubscription: function _HttpDetachedStreamSubscription(t0, t1, t2) {
      var _ = this;
      _.__http$_subscription = t0;
      _._injectData = t1;
      _._userOnData = t2;
      _._scheduled = _._isCanceled = false;
      _._pauseCount = 1;
    },
    _HttpDetachedStreamSubscription__maybeScheduleData_closure: function _HttpDetachedStreamSubscription__maybeScheduleData_closure(t0) {
      this.$this = t0;
    },
    _HttpDetachedIncoming: function _HttpDetachedIncoming(t0, t1) {
      this.__http$_subscription = t0;
      this._bufferedData = t1;
    },
    _HttpParser: function _HttpParser(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._parserCalled = false;
      _.__http$_buffer = null;
      _.__http$_index = -1;
      _._requestParser = t0;
      _.__http$_state = 0;
      _._httpVersionIndex = null;
      _._statusCodeLength = _._statusCode = _._messageType = 0;
      _.__http$_method = t1;
      _._uriOrReasonPhrase = t2;
      _._headerField = t3;
      _._headerValue = t4;
      _._httpVersion = _._headersReceivedSize = 0;
      _._transferLength = -1;
      _._noMessageBody = _._chunked = _._connectionUpgrade = false;
      _._remainingContent = -1;
      _._transferEncoding = _._contentLength = false;
      _._socketSubscription = _._incoming = _.__http$_headers = null;
      _._paused = true;
      _._bodyPaused = false;
      _.__http$_controller = t5;
      _._bodyController = null;
    },
    _HttpParser$__closure: function _HttpParser$__closure(t0) {
      this.$this = t0;
    },
    _HttpParser$__closure0: function _HttpParser$__closure0(t0) {
      this.$this = t0;
    },
    _HttpParser$__closure1: function _HttpParser$__closure1(t0) {
      this.$this = t0;
    },
    _HttpParser$__closure2: function _HttpParser$__closure2(t0) {
      this.$this = t0;
    },
    _HttpParser__createIncoming_closure: function _HttpParser__createIncoming_closure(t0, t1) {
      this.$this = t0;
      this.incoming = t1;
    },
    _HttpParser__createIncoming_closure0: function _HttpParser__createIncoming_closure0(t0, t1) {
      this.$this = t0;
      this.incoming = t1;
    },
    _HttpParser__createIncoming_closure1: function _HttpParser__createIncoming_closure1(t0, t1) {
      this.$this = t0;
      this.incoming = t1;
    },
    _HttpParser__createIncoming_closure2: function _HttpParser__createIncoming_closure2(t0, t1) {
      this.$this = t0;
      this.incoming = t1;
    },
    _HttpSessionManager: function _HttpSessionManager(t0) {
      this._sessions = t0;
      this._timer = null;
    },
    __HttpConnection_LinkedListEntry__ServiceObject: function __HttpConnection_LinkedListEntry__ServiceObject() {
    },
    __HttpServer_Stream__ServiceObject: function __HttpServer_Stream__ServiceObject() {
    },
    CastIterable_CastIterable(source, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldADI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has been assigned during initialization.");
    },
    LateError$fieldNI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    LateError$fieldAI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has already been initialized.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    isToStringVisiting(object) {
      var t1, i;
      for (t1 = $.toStringVisiting.length, i = 0; i < t1; ++i)
        if (object === $.toStringVisiting[i])
          return true;
      return false;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      A.ArgumentError_checkNotNull(takeCount, _s9_, type$.int);
      A.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new A.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_, type$.int);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_, type$.int);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooMany() {
      return new A.StateError("Too many elements");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    Sort__doSort(a, left, right, compare, $E) {
      if (right - left <= 32)
        A.Sort__insertionSort(a, left, right, compare, $E);
      else
        A.Sort__dualPivotQuicksort(a, left, right, compare, $E);
    },
    Sort__insertionSort(a, left, right, compare, $E) {
      var i, t1, el, j, t2, j0;
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (j > left) {
            t2 = compare.call$2(t1.$index(a, j - 1), el);
            if (typeof t2 !== "number")
              return t2.$gt();
            t2 = t2 > 0;
          } else
            t2 = false;
          if (!t2)
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort(a, left, right, compare, $E) {
      var t0, less, great, pivots_are_equal, k, ak, comp, great0, less0,
        sixth = B.JSInt_methods._tdivFast$1(right - left + 1, 6),
        index1 = left + sixth,
        index5 = right - sixth,
        index3 = B.JSInt_methods._tdivFast$1(left + right, 2),
        index2 = index3 - sixth,
        index4 = index3 + sixth,
        t1 = J.getInterceptor$asx(a),
        el1 = t1.$index(a, index1),
        el2 = t1.$index(a, index2),
        el3 = t1.$index(a, index3),
        el4 = t1.$index(a, index4),
        el5 = t1.$index(a, index5),
        t2 = compare.call$2(el1, el2);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t2 = compare.call$2(el1, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el1, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      t2 = compare.call$2(el3, el4);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      t2 = compare.call$2(el2, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el2, el3);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      t2 = compare.call$2(el4, el5);
      if (typeof t2 !== "number")
        return t2.$gt();
      if (t2 > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      pivots_are_equal = J.$eq$(compare.call$2(el2, el4), 0);
      if (pivots_are_equal)
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          if (comp === 0)
            continue;
          if (comp < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              if (comp > 0) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
      else
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) > 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) > 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      A.Sort__doSort(a, left, less - 2, compare, $E);
      A.Sort__doSort(a, great + 2, right, compare, $E);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) === 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) === 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) === 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        A.Sort__doSort(a, less, great, compare, $E);
      } else
        A.Sort__doSort(a, less, great, compare, $E);
    },
    CastStream: function CastStream(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastStreamSubscription: function CastStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._source = t0;
      _.__internal$_zone = t1;
      _._handleError = _._handleData = null;
      _.$ti = t2;
    },
    _BytesBuilder: function _BytesBuilder(t0) {
      this.__internal$_length = 0;
      this._chunks = t0;
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    _CastListBase_sort_closure: function _CastListBase_sort_closure(t0, t1) {
      this.$this = t0;
      this.compare = t1;
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2, t3) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _.__internal$_current = null;
      _.$ti = t3;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipWhileIterator: function SkipWhileIterator(t0, t1, t2) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._hasSkipped = false;
      _.$ti = t2;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator(t0) {
      this.$ti = t0;
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    Symbol: function Symbol(t0) {
      this.__internal$_name = t0;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    ConstantMap_ConstantMap$from(other, $K, $V) {
      var allStrings, k, object, index, index0, values, map,
        t1 = A._instanceType(other),
        keys = A.List_List$from(new A.LinkedHashMapKeysIterable(other, t1._eval$1("LinkedHashMapKeysIterable<1>")), true, $K),
        t2 = keys.length,
        _i = 0;
      while (true) {
        if (!(_i < t2)) {
          allStrings = true;
          break;
        }
        k = keys[_i];
        if (typeof k != "string" || "__proto__" === k) {
          allStrings = false;
          break;
        }
        ++_i;
      }
      if (allStrings) {
        object = {};
        for (index = 0, _i = 0; _i < keys.length; keys.length === t2 || (0, A.throwConcurrentModificationError)(keys), ++_i, index = index0) {
          k = keys[_i];
          $V._as(other.$index(0, k));
          index0 = index + 1;
          object[k] = index;
        }
        values = A.List_List$from(new A.LinkedHashMapValuesIterable(other, t1._eval$1("LinkedHashMapValuesIterable<2>")), true, $V);
        map = new A.ConstantStringMap(object, values, $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantStringMap<1,2>"));
        map.$keys = keys;
        return map;
      }
      return new A.ConstantMapView(A.LinkedHashMap_LinkedHashMap$from(other, $K, $V), $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantMapView<1,2>"));
    },
    ConstantMap__throwUnmodifiable() {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      if (3 >= match.length)
        return A.ioore(match, 3);
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((digitsPart.charCodeAt(i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_objectTypeName(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_safeToString(object) {
      if (object == null || typeof object == "number" || A._isBool(object))
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      if (object instanceof A.Closure)
        return object.toString$0(0);
      if (object instanceof A._Record)
        return object._toString$1(true);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Primitives_currentUri() {
      if (!!self.location)
        return self.location.href;
      return null;
    },
    Primitives__fromCharCodeApply(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints(codePoints) {
      var t1, _i, i,
        a = A._setArrayType([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, A.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i <= 65535)
          B.JSArray_methods.add$1(a, i);
        else if (i <= 1114111) {
          B.JSArray_methods.add$1(a, 55296 + (B.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          B.JSArray_methods.add$1(a, 56320 + (i & 1023));
        } else
          throw A.wrapException(A.argumentErrorValue(i));
      }
      return A.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i < 0)
          throw A.wrapException(A.argumentErrorValue(i));
        if (i > 65535)
          return A.Primitives_stringFromCodePoints(charCodes);
      }
      return A.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._core$_value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : A.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : A.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : A.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : A.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : A.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_getWeekday(receiver) {
      return B.JSInt_methods.$mod((receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCDay() + 0 : A.Primitives_lazyAsJsDate(receiver).getDay() + 0) + 6, 7) + 1;
    },
    Primitives_extractStackTrace(error) {
      var jsError = error.$thrownJsError;
      if (jsError == null)
        return null;
      return A.getTraceFromException(jsError);
    },
    Primitives_trySetStackTrace(error, stackTrace) {
      var jsError;
      if (error.$thrownJsError == null) {
        jsError = new Error();
        A.initializeExceptionWrapper(error, jsError);
        error.$thrownJsError = jsError;
        jsError.stack = stackTrace.toString$0(0);
      }
    },
    iae(argument) {
      throw A.wrapException(A.argumentErrorValue(argument));
    },
    ioore(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = A._asInt(J.get$length$asx(indexable));
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, null, _s5_);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start < 0 || start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    wrapException(ex) {
      return A.initializeExceptionWrapper(ex, new Error());
    },
    initializeExceptionWrapper(ex, wrapper) {
      var t1;
      if (ex == null)
        ex = new A.TypeError();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex, wrapper) {
      throw A.initializeExceptionWrapper(ex, wrapper == null ? new Error() : wrapper);
    },
    throwUnsupportedOperation(o, operation, verb) {
      var wrapper;
      if (operation == null)
        operation = 0;
      if (verb == null)
        verb = 0;
      wrapper = Error();
      A.throwExpression(A._diagnoseUnsupportedOperation(o, operation, verb), wrapper);
    },
    _diagnoseUnsupportedOperation(o, encodedOperation, encodedVerb) {
      var operation, table, tableLength, index, verb, object, flags, article, adjective;
      if (typeof encodedOperation == "string")
        operation = encodedOperation;
      else {
        table = "[]=;add;removeWhere;retainWhere;removeRange;setRange;setInt8;setInt16;setInt32;setUint8;setUint16;setUint32;setFloat32;setFloat64".split(";");
        tableLength = table.length;
        index = encodedOperation;
        if (index > tableLength) {
          encodedVerb = index / tableLength | 0;
          index %= tableLength;
        }
        operation = table[index];
      }
      verb = typeof encodedVerb == "string" ? encodedVerb : "modify;remove from;add to".split(";")[encodedVerb];
      object = type$.List_dynamic._is(o) ? "list" : "ByteData";
      flags = o.$flags | 0;
      article = "a ";
      if ((flags & 4) !== 0)
        adjective = "constant ";
      else if ((flags & 2) !== 0) {
        adjective = "unmodifiable ";
        article = "an ";
      } else
        adjective = (flags & 1) !== 0 ? "fixed-length " : "";
      return new A.UnsupportedError("'" + operation + "': Cannot " + verb + " " + article + adjective + object);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      var t1;
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace) {
        t1 = ex.dartException;
        return A.saveStackTrace(ex, t1 == null ? type$.Object._as(t1) : t1);
      }
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              A.S(message);
              return A.saveStackTrace(ex, new A.NullError());
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
          } else if (nullCall.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefCall.matchTypeError$1(message) != null || undefLiteralCall.matchTypeError$1(message) != null || nullProperty.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefProperty.matchTypeError$1(message) != null || undefLiteralProperty.matchTypeError$1(message) != null) {
            A._asString(message);
            return A.saveStackTrace(ex, new A.NullError());
          }
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, null, null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      trace = new A._StackTrace(exception);
      if (typeof exception === "object")
        exception.$cachedTrace = trace;
      return trace;
    },
    objectHashCode(object) {
      if (object == null)
        return J.get$hashCode$(object);
      if (typeof object == "object")
        return A.Primitives_objectHashCode(object);
      return J.get$hashCode$(object);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    _invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (A._asInt(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = A.convertDartClosureToJSUncached(closure, arity);
      closure.$identity = $function;
      return $function;
    },
    convertDartClosureToJSUncached(closure, arity) {
      var entry;
      switch (arity) {
        case 0:
          entry = closure.call$0;
          break;
        case 1:
          entry = closure.call$1;
          break;
        case 2:
          entry = closure.call$2;
          break;
        case 3:
          entry = closure.call$3;
          break;
        case 4:
          entry = closure.call$4;
          break;
        default:
          entry = null;
      }
      if (entry != null)
        return entry.bind(closure);
      return function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A._invokeClosure);
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      $constructor = isStatic ? function static_tear_off() {
        this.$initialize();
      } : function tear_off(a, b) {
        this.$initialize(a, b);
      };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunction(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunction(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      return A.Closure_cspForwardCall($function.length, needsDirectAccess, stubName, $function);
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var names, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        t1 = Object.getOwnPropertyNames(template);
      t1.$flags = 1;
      names = t1;
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = A._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (Array.isArray(transformers))
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    createRecordTypePredicate(shape, fieldRtis) {
      var $length = fieldRtis.length,
        $function = init.rttc["" + $length + ";" + shape];
      if ($function == null)
        return null;
      if ($length === 0)
        return $function;
      if ($length === $function.length)
        return $function.apply(null, fieldRtis);
      return $function(fieldRtis);
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, extraFlags) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + extraFlags);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1;
      if (typeof other == "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else if (other instanceof A.JSSyntaxRegExp) {
        t1 = B.JSString_methods.substring$1(receiver, startIndex);
        return other._nativeRegExp.test(t1);
      } else
        return !J.allMatches$1$s(other, B.JSString_methods.substring$1(receiver, startIndex)).get$isEmpty(0);
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    stringReplaceFirstRE(receiver, regexp, replacement, startIndex) {
      var match = regexp._execGlobal$2(receiver, startIndex);
      if (match == null)
        return receiver;
      return A.stringReplaceRangeUnchecked(receiver, match._match.index, match.get$end(0), replacement);
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var nativeRegexp;
      if (typeof pattern == "string")
        return A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      if (pattern instanceof A.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, A.escapeReplacement(replacement));
      }
      return A.stringReplaceAllGeneral(receiver, pattern, replacement);
    },
    stringReplaceAllGeneral(receiver, pattern, replacement) {
      var t1, startIndex, t2, match;
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), startIndex = 0, t2 = ""; t1.moveNext$0();) {
        match = t1.get$current(t1);
        t2 = t2 + receiver.substring(startIndex, match.get$start(match)) + replacement;
        startIndex = match.get$end(match);
      }
      t1 = t2 + receiver.substring(startIndex);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (receiver.indexOf(pattern, 0) < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    _stringIdentity(string) {
      return string;
    },
    stringReplaceAllFuncUnchecked(receiver, pattern, onMatch, onNonMatch) {
      var t1, t2, startIndex, t3, match, t4, t5;
      for (t1 = pattern.allMatches$1(0, receiver), t1 = new A._AllMatchesIterator(t1._re, t1.__js_helper$_string, t1.__js_helper$_start), t2 = type$.RegExpMatch, startIndex = 0, t3 = ""; t1.moveNext$0();) {
        match = t1.__js_helper$_current;
        if (match == null)
          match = t2._as(match);
        t4 = match._match;
        t5 = t4.index;
        t3 = t3 + A.S(A._stringIdentity(B.JSString_methods.substring$2(receiver, startIndex, t5))) + A.S(onMatch.call$1(match));
        startIndex = t5 + t4[0].length;
      }
      t1 = t3 + A.S(A._stringIdentity(B.JSString_methods.substring$1(receiver, startIndex)));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceFirstUnchecked(receiver, pattern, replacement, startIndex) {
      var index, t1, matches, match;
      if (typeof pattern == "string") {
        index = receiver.indexOf(pattern, startIndex);
        if (index < 0)
          return receiver;
        return A.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
      }
      if (pattern instanceof A.JSSyntaxRegExp)
        return startIndex === 0 ? receiver.replace(pattern._nativeRegExp, A.escapeReplacement(replacement)) : A.stringReplaceFirstRE(receiver, pattern, replacement, startIndex);
      t1 = J.allMatches$2$s(pattern, receiver, startIndex);
      matches = t1.get$iterator(t1);
      if (!matches.moveNext$0())
        return receiver;
      match = matches.get$current(matches);
      return B.JSString_methods.replaceRange$3(receiver, match.get$start(match), match.get$end(match), replacement);
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    _Record_2: function _Record_2(t0, t1) {
      this._0 = t0;
      this._1 = t1;
    },
    _Record_2_attributes_children: function _Record_2_attributes_children(t0, t1) {
      this._0 = t0;
      this._1 = t1;
    },
    _Record_3: function _Record_3(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantMap_map_closure: function ConstantMap_map_closure(t0, t1, t2) {
      this.$this = t0;
      this.transform = t1;
      this.result = t2;
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2) {
      this._jsIndex = t0;
      this._values = t1;
      this.$ti = t2;
    },
    _KeysOrValues: function _KeysOrValues(t0, t1) {
      this._elements = t0;
      this.$ti = t1;
    },
    _KeysOrValuesOrElementsIterator: function _KeysOrValuesOrElementsIterator(t0, t1, t2) {
      var _ = this;
      _._elements = t0;
      _._length = t1;
      _.__js_helper$_index = 0;
      _.__js_helper$_current = null;
      _.$ti = t2;
    },
    ConstantSet: function ConstantSet() {
    },
    ConstantStringSet: function ConstantStringSet(t0, t1, t2) {
      this._jsIndex = t0;
      this._length = t1;
      this.$ti = t2;
    },
    Instantiation: function Instantiation() {
    },
    Instantiation1: function Instantiation1(t0, t1) {
      this._genericClosure = t0;
      this.$ti = t1;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError() {
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _._length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeysIterable: function LinkedHashMapKeysIterable(t0, t1) {
      this.__js_helper$_map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_map = t0;
      _._modifications = t1;
      _._cell = t2;
      _.__js_helper$_current = null;
      _.$ti = t3;
    },
    LinkedHashMapValuesIterable: function LinkedHashMapValuesIterable(t0, t1) {
      this.__js_helper$_map = t0;
      this.$ti = t1;
    },
    LinkedHashMapValueIterator: function LinkedHashMapValueIterator(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_map = t0;
      _._modifications = t1;
      _._cell = t2;
      _.__js_helper$_current = null;
      _.$ti = t3;
    },
    LinkedHashMapEntriesIterable: function LinkedHashMapEntriesIterable(t0, t1) {
      this.__js_helper$_map = t0;
      this.$ti = t1;
    },
    LinkedHashMapEntryIterator: function LinkedHashMapEntryIterator(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_map = t0;
      _._modifications = t1;
      _._cell = t2;
      _.__js_helper$_current = null;
      _.$ti = t3;
    },
    JsIdentityLinkedHashMap: function JsIdentityLinkedHashMap(t0) {
      var _ = this;
      _._length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    _Record: function _Record() {
    },
    _Record2: function _Record2() {
    },
    _Record3: function _Record3() {
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._hasCapturesCache = _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {
      this._re = t0;
      this.__js_helper$_string = t1;
      this.__js_helper$_start = t2;
    },
    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._regExp = t0;
      _.__js_helper$_string = t1;
      _._nextIndex = t2;
      _.__js_helper$_current = null;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldNI(fieldName) {
      throw A.initializeExceptionWrapper(A.LateError$fieldNI(fieldName), new Error());
    },
    throwLateFieldAI(fieldName) {
      throw A.initializeExceptionWrapper(A.LateError$fieldAI(fieldName), new Error());
    },
    throwLateFieldADI(fieldName) {
      throw A.initializeExceptionWrapper(A.LateError$fieldADI(fieldName), new Error());
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1.__late_helper$_value = t1;
    },
    _Cell: function _Cell(t0) {
      this.__late_helper$_name = t0;
      this.__late_helper$_value = null;
    },
    _ensureNativeList(list) {
      var t1, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = A.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
      for (i = 0; i < t1.get$length(list); ++i)
        B.JSArray_methods.$indexSet(result, i, t1.$index(list, i));
      return result;
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint8List_NativeUint8List($length) {
      return new Uint8Array($length);
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      var t1 = new Uint8Array(buffer, offsetInBytes, $length);
      return t1;
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        if (end == null)
          t1 = start > $length;
        else
          t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      if (end == null)
        return $length;
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    _UnmodifiableNativeByteBufferView: function _UnmodifiableNativeByteBufferView(t0) {
      this._data = t0;
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    instantiatedGenericFunctionType(genericFunctionRti, instantiationRti) {
      var t1, cache, key, probe, rti;
      if (genericFunctionRti == null)
        return null;
      t1 = instantiationRti._rest;
      cache = genericFunctionRti._bindCache;
      if (cache == null)
        cache = genericFunctionRti._bindCache = new Map();
      key = instantiationRti._canonicalRecipe;
      probe = cache.get(key);
      if (probe != null)
        return probe;
      rti = A._substitute(init.typeUniverse, genericFunctionRti._primary, t1, 0);
      cache.set(key, rti);
      return rti;
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, t1, fields, substitutedFields, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 8:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 9:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 10:
          t1 = rti._primary;
          fields = rti._rest;
          substitutedFields = A._substituteArray(universe, fields, typeArguments, depth);
          if (substitutedFields === fields)
            return rti;
          return A._Universe__lookupRecordRti(universe, t1, substitutedFields);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      if (object instanceof A.Object)
        return A._instanceType(object);
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? Object.getPrototypeOf(Object.getPrototypeOf(instance)).constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeTypeOfDartObject(object) {
      return A.createRuntimeType(A._instanceType(object));
    },
    getRuntimeTypeOfClosure(closure) {
      var rti = A.closureFunctionType(closure);
      return A.createRuntimeType(rti == null ? A.instanceType(closure) : rti);
    },
    _structuralTypeOf(object) {
      var functionRti;
      if (object instanceof A._Record)
        return object._getRti$0();
      functionRti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      if (functionRti != null)
        return functionRti;
      if (type$.TrustedGetRuntimeType._is(object))
        return J.get$runtimeType$(object)._rti;
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A.instanceType(object);
    },
    createRuntimeType(rti) {
      var t1 = rti._cachedRuntimeType;
      return t1 == null ? rti._cachedRuntimeType = new A._Type(rti) : t1;
    },
    evaluateRtiForRecord(recordRecipe, valuesList) {
      var bindings, i,
        values = valuesList,
        $length = values.length;
      if ($length === 0)
        return type$.Record_0;
      if (0 >= $length)
        return A.ioore(values, 0);
      bindings = A._Universe_evalInEnvironment(init.typeUniverse, A._structuralTypeOf(values[0]), "@<0>");
      for (i = 1; i < $length; ++i) {
        if (!(i < values.length))
          return A.ioore(values, i);
        bindings = A._Universe_bind(init.typeUniverse, bindings, A._structuralTypeOf(values[i]));
      }
      return A._Universe_evalInEnvironment(init.typeUniverse, bindings, recordRecipe);
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var kind, isFn, $name, predicate, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (A.isTopType(testRti))
        return A._finishIsFn(testRti, object, A._isTop);
      kind = testRti._kind;
      if (kind === 6)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      if (kind === 1)
        return A._finishIsFn(testRti, object, A._isNever);
      if (kind === 7)
        return A._finishIsFn(testRti, object, A._isFutureOr);
      if (testRti === type$.int)
        isFn = A._isInt;
      else if (testRti === type$.double || testRti === type$.num)
        isFn = A._isNum;
      else if (testRti === type$.String)
        isFn = A._isString;
      else
        isFn = testRti === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (kind === 8) {
        $name = testRti._primary;
        if (testRti._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (kind === 10) {
        predicate = A.createRecordTypePredicate(testRti._primary, testRti._rest);
        return A._finishIsFn(testRti, object, predicate == null ? A._isNever : predicate);
      }
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (A.isTopType(testRti))
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else if (A.isNullable(testRti))
        asFn = A._generalNullableAsCheckImplementation;
      if (testRti === type$.int)
        asFn = A._asInt;
      else if (testRti === type$.nullable_int)
        asFn = A._asIntQ;
      else if (testRti === type$.String)
        asFn = A._asString;
      else if (testRti === type$.nullable_String)
        asFn = A._asStringQ;
      else if (testRti === type$.bool)
        asFn = A._asBool;
      else if (testRti === type$.nullable_bool)
        asFn = A._asBoolQ;
      else if (testRti === type$.num)
        asFn = A._asNum;
      else if (testRti === type$.nullable_num)
        asFn = A._asNumQ;
      else if (testRti === type$.double)
        asFn = A._asDouble;
      else if (testRti === type$.nullable_double)
        asFn = A._asDoubleQ;
      testRti._as = asFn;
      return testRti._as(object);
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A.isNullable(testRti);
      return A.isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), testRti);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A.isNullable(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A.isNullable(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var testRti = this;
      if (object == null) {
        if (A.isNullable(testRti))
          return object;
      } else if (testRti._is(object))
        return object;
      throw A.initializeExceptionWrapper(A._errorForAsCheck(object, testRti), new Error());
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null || testRti._is(object))
        return object;
      throw A.initializeExceptionWrapper(A._errorForAsCheck(object, testRti), new Error());
    },
    _errorForAsCheck(object, testRti) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, A._rtiToString(testRti, null)));
    },
    checkTypeBound(type, bound, variable, methodName) {
      if (A.isSubtype(init.typeUniverse, type, bound))
        return type;
      throw A.initializeExceptionWrapper(A._TypeError$fromMessage("The type argument '" + A._rtiToString(type, null) + "' is not a subtype of the type variable bound '" + A._rtiToString(bound, null) + "' of type variable '" + variable + "' in '" + methodName + "'."), new Error());
    },
    _Error_compose(object, checkedTypeDescription) {
      return A.Error_safeToString(object) + ": type '" + A._rtiToString(A._structuralTypeOf(object), null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, type));
    },
    _isFutureOr(object) {
      var testRti = this;
      return testRti._primary._is(object) || A.Rti__getFutureFromFutureOr(init.typeUniverse, testRti)._is(object);
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "Object"), new Error());
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isNever(object) {
      return false;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "bool"), new Error());
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "bool?"), new Error());
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "double"), new Error());
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "double?"), new Error());
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "int"), new Error());
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "int?"), new Error());
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "num"), new Error());
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "num?"), new Error());
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "String"), new Error());
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.initializeExceptionWrapper(A._TypeError__TypeError$forType(object, "String?"), new Error());
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, offset, i, t1, typeParametersText, typeSep, t2, t3, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ", outerContextLength = null;
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null)
          genericContext = A._setArrayType([], type$.JSArray_String);
        else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          t2 = genericContext.length;
          t3 = t2 - 1 - i;
          if (!(t3 >= 0))
            return A.ioore(genericContext, t3);
          typeParametersText = typeParametersText + typeSep + genericContext[t3];
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else
        typeParametersText = "";
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var questionArgument, s, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 11 || argumentKind === 12 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 7)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 8) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 10)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 11)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (!(t1 >= 0 && t1 < t2))
          return A.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, false));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 9 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        t1 = true;
        if (!A.isTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 6)
              t1 = baseKind === 7 && A.isNullable(baseType._primary);
        if (t1)
          return baseType;
        else if (baseKind === 1)
          return type$.Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (A.isTopType(baseType) || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 9) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, end, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              A._Parser_handleTypeArguments(parser, t1);
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(-3);
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, t1);
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              t1.push(source.substring(i, end));
              t1.push(-4);
              t1.push(parser.p);
              parser.p = t1.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 9)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleTypeArguments(parser, stack) {
      var base,
        t1 = parser.u,
        $arguments = A._Parser_collectArray(parser, stack),
        head = stack.pop();
      if (typeof head == "string")
        stack.push(A._Universe__lookupInterfaceRti(t1, head, $arguments));
      else {
        base = A._Parser_toType(t1, parser.e, head);
        switch (base._kind) {
          case 11:
            stack.push(A._Universe__lookupGenericFunctionRti(t1, base, $arguments, parser.n));
            break;
          default:
            stack.push(A._Universe__lookupBindingRti(t1, base, $arguments));
            break;
        }
      }
    },
    _Parser_handleArguments(parser, stack) {
      var requiredPositional, returnType, parameters,
        t1 = parser.u,
        head = stack.pop(),
        optionalPositional = null, named = null;
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            break;
          case -2:
            named = stack.pop();
            break;
          default:
            stack.push(head);
            break;
        }
      else
        stack.push(head);
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = t1.sEA;
          if (named == null)
            named = t1.sEA;
          returnType = A._Parser_toType(t1, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(t1, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(t1, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 9) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 8)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    isSubtype(universe, s, t) {
      var result,
        sCache = s._isSubtypeCache;
      if (sCache == null)
        sCache = s._isSubtypeCache = new Map();
      result = sCache.get(t);
      if (result == null) {
        result = A._isSubtype(universe, s, null, t, null);
        sCache.set(t, result);
      }
      return result;
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var sKind, leftTypeVariable, tKind, t1, t2, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (A.isTopType(t))
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isTopType(s))
        return false;
      if (s._kind === 1)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = type$.Null;
      if (s === t1 || s === type$.JSNull) {
        if (tKind === 7)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === t1 || t === type$.JSNull || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 7)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 6;
      }
      if (sKind === 7) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 6)
        return A._isSubtype(universe, t1, sEnv, t, tEnv) && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 7) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 6)
        return A._isSubtype(universe, s, sEnv, t1, tEnv) || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      t2 = sKind === 10;
      if (t2 && t === type$.Record)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 8) {
        if (tKind !== 8)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      if (t2 && tKind === 10)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      return A._areArgumentsSubtypes(universe, s._rest, null, sEnv, t._rest, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i)
        if (!A._isSubtype(universe, sArgs[i], sEnv, tArgs[i], tEnv))
          return false;
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv))
          return false;
      return true;
    },
    isNullable(t) {
      var kind = t._kind,
        t1 = true;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isTopType(t))
          if (kind !== 6)
            t1 = kind === 7 && A.isNullable(t._primary);
      return t1;
    },
    isTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._isSubtypeCache = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var t1, div, span;
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        t1 = {};
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.Duration_0, type$.void_Function._as(callback));
    },
    Timer__createTimer(duration, callback) {
      var milliseconds = B.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return A._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    Timer__createPeriodicTimer(duration, callback) {
      var milliseconds = B.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return A._TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl(true);
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _TimerImpl$periodic(milliseconds, callback) {
      var t1 = new A._TimerImpl(false);
      t1._TimerImpl$periodic$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      bodyFunction.toString;
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (object instanceof A._Future)
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true) {
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
          }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new A._wrapJsFunctionForAsync_closure($protected), type$.void, type$.int, type$.dynamic);
    },
    _asyncStarHelper(object, bodyFunctionOrErrorCode, controller) {
      var t1, t2, t3,
        _s10_ = "controller";
      if (bodyFunctionOrErrorCode === 0) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeWithValue$1(null);
        else {
          t1 = controller.___AsyncStarStreamController_controller_A;
          t1 === $ && A.throwLateFieldNI(_s10_);
          t1.close$0(0);
        }
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        t1 = controller.cancelationFuture;
        if (t1 != null) {
          t2 = A.unwrapException(object);
          t3 = A.getTraceFromException(object);
          t1._completeErrorObject$1(new A.AsyncError(t2, t3));
        } else {
          t1 = A.unwrapException(object);
          t2 = A.getTraceFromException(object);
          t3 = controller.___AsyncStarStreamController_controller_A;
          t3 === $ && A.throwLateFieldNI(_s10_);
          t3.addError$2(t1, t2);
          controller.___AsyncStarStreamController_controller_A.close$0(0);
        }
        return;
      }
      type$.void_Function_int_dynamic._as(bodyFunctionOrErrorCode);
      if (object instanceof A._IterationMarker) {
        if (controller.cancelationFuture != null) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          t1 = object.value;
          t2 = controller.___AsyncStarStreamController_controller_A;
          t2 === $ && A.throwLateFieldNI(_s10_);
          t2.add$1(0, controller.$ti._precomputed1._as(t1));
          A.scheduleMicrotask(new A._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));
          return;
        } else if (t1 === 1) {
          t1 = controller.$ti._eval$1("Stream<1>")._as(type$.Stream_dynamic._as(object.value));
          t2 = controller.___AsyncStarStreamController_controller_A;
          t2 === $ && A.throwLateFieldNI(_s10_);
          t2.addStream$2$cancelOnError(0, t1, false).then$1$1(new A._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode), type$.Null);
          return;
        }
      }
      A._awaitOnObject(object, bodyFunctionOrErrorCode);
    },
    _streamOfController(controller) {
      var t1 = controller.___AsyncStarStreamController_controller_A;
      t1 === $ && A.throwLateFieldNI("controller");
      return new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>"));
    },
    _AsyncStarStreamController$(body, $T) {
      var t1 = new A._AsyncStarStreamController($T._eval$1("_AsyncStarStreamController<0>"));
      t1._AsyncStarStreamController$1(body, $T);
      return t1;
    },
    _makeAsyncStarStreamController(body, $T) {
      body.toString;
      return A._AsyncStarStreamController$(body, $T);
    },
    _IterationMarker_yieldStar(values) {
      return new A._IterationMarker(values, 1);
    },
    _IterationMarker_yieldSingle(value) {
      return new A._IterationMarker(value, 0);
    },
    _SyncStarIterator__terminatedBody(_1, _2, _3) {
      return 0;
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B._StringStackTrace_OdL;
    },
    Future_Future$microtask(computation, $T) {
      var result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.scheduleMicrotask(new A.Future_Future$microtask_closure(computation, result));
      return result;
    },
    Future_Future$sync(computation, $T) {
      var error, stackTrace, exception, t1, t2, t3, t4, result = null;
      try {
        result = computation.call$0();
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
        t2 = error;
        t3 = stackTrace;
        t4 = A._interceptError(t2, t3);
        if (t4 == null)
          t2 = new A.AsyncError(t2, t3 == null ? A.AsyncError_defaultStackTrace(t2) : t3);
        else
          t2 = t4;
        t1._asyncCompleteErrorObject$1(t2);
        return t1;
      }
      return $T._eval$1("Future<0>")._is(result) ? result : A._Future$value(result, $T);
    },
    Future_Future$value(value, $T) {
      var t1 = value == null ? $T._as(value) : value,
        t2 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t2._asyncComplete$1(t1);
      return t2;
    },
    _interceptError(error, stackTrace) {
      var replacement, t1, t2,
        zone = $.Zone__current;
      if (zone === B.C__RootZone)
        return null;
      replacement = zone.errorCallback$2(error, stackTrace);
      if (replacement == null)
        return null;
      t1 = replacement.error;
      t2 = replacement.stackTrace;
      if (type$.Error._is(t1))
        A.Primitives_trySetStackTrace(t1, t2);
      return replacement;
    },
    _interceptUserError(error, stackTrace) {
      var replacement;
      if ($.Zone__current !== B.C__RootZone) {
        replacement = A._interceptError(error, stackTrace);
        if (replacement != null)
          return replacement;
      }
      if (stackTrace == null)
        if (type$.Error._is(error)) {
          stackTrace = error.get$stackTrace();
          if (stackTrace == null) {
            A.Primitives_trySetStackTrace(error, B._StringStackTrace_OdL);
            stackTrace = B._StringStackTrace_OdL;
          }
        } else
          stackTrace = B._StringStackTrace_OdL;
      else if (type$.Error._is(error))
        A.Primitives_trySetStackTrace(error, stackTrace);
      return new A.AsyncError(error, stackTrace);
    },
    _Future$value(value, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      $T._as(value);
      t1._state = 8;
      t1._resultOrListeners = value;
      return t1;
    },
    _Future__chainCoreFuture(source, target, sync) {
      var t2, t3, ignoreError, listeners, _box_0 = {},
        t1 = _box_0.source = source;
      for (t2 = type$._Future_dynamic; t3 = t1._state, (t3 & 4) !== 0; t1 = source) {
        source = t2._as(t1._resultOrListeners);
        _box_0.source = source;
      }
      if (t1 === target) {
        t2 = A.StackTrace_current();
        target._asyncCompleteErrorObject$1(new A.AsyncError(new A.ArgumentError(true, t1, null, "Cannot complete a future with itself"), t2));
        return;
      }
      ignoreError = target._state & 1;
      t2 = t1._state = t3 | ignoreError;
      if ((t2 & 24) === 0) {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._state = target._state & 1 | 4;
        target._resultOrListeners = t1;
        t1._prependListeners$1(listeners);
        return;
      }
      if (!sync)
        if (target._resultOrListeners == null)
          t1 = (t2 & 16) === 0 || ignoreError !== 0;
        else
          t1 = false;
      else
        t1 = true;
      if (t1) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(_box_0.source);
        A._Future__propagateToListeners(target, listeners);
        return;
      }
      target._state ^= 2;
      target._zone.scheduleMicrotask$1(new A._Future__chainCoreFuture_closure(_box_0, target));
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, t3, _box_0, t4, t5, hasError, asyncError, nextListener, nextListener0, sourceResult, t6, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$.nullable__FutureListener_dynamic_dynamic; true;) {
        _box_0 = {};
        t4 = t1._state;
        t5 = (t4 & 16) === 0;
        hasError = !t5;
        if (listeners == null) {
          if (hasError && (t4 & 1) === 0) {
            asyncError = t2._as(t1._resultOrListeners);
            t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t4 = _box_1.source;
        sourceResult = t4._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t5) {
          t6 = t1.state;
          t6 = (t6 & 1) !== 0 || (t6 & 15) === 8;
        } else
          t6 = true;
        if (t6) {
          zone = t1.result._zone;
          if (hasError) {
            t1 = t4._zone;
            t1 = !(t1 === zone || t1.get$errorZone() === zone.get$errorZone());
          } else
            t1 = false;
          if (t1) {
            t1 = _box_1.source;
            asyncError = t2._as(t1._resultOrListeners);
            t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = _box_0.listener.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t5) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t1 instanceof A._Future) {
            t4 = _box_0.listener.$ti;
            t4 = t4._eval$1("Future<2>")._is(t1) || !t4._rest[1]._is(t1);
          } else
            t4 = false;
          if (t4) {
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = t3._as(result._resultOrListeners);
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFuture(t1, result, true);
            return;
          }
        }
        result = _box_0.listener.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t4 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t4);
          result._state = 8;
          result._resultOrListeners = t4;
        } else {
          t2._as(t4);
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t4;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      if (type$.dynamic_Function_Object._is(errorHandler))
        return zone.registerUnaryCallback$2$1(errorHandler, type$.dynamic, type$.Object);
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var t1, _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      if (B.C__RootZone === currentZone.get$_scheduleMicrotask().zone)
        t1 = B.C__RootZone.get$errorZone() === currentZone.get$errorZone();
      else
        t1 = false;
      if (t1) {
        A._rootScheduleMicrotask(_null, _null, currentZone, currentZone.registerCallback$1$1(callback, type$.void));
        return;
      }
      t1 = $.Zone__current;
      t1.scheduleMicrotask$1(t1.bindCallbackGuarded$1(callback));
    },
    Stream_Stream$value(value, $T) {
      var _null = null,
        t1 = $T._eval$1("_AsyncStreamController<0>"),
        t2 = new A._AsyncStreamController(_null, _null, _null, _null, t1);
      t2._add$1(0, value);
      t2._closeUnchecked$0();
      return new A._ControllerStream(t2, t1._eval$1("_ControllerStream<1>"));
    },
    Stream_Stream$fromIterable(elements, $T) {
      return new A._MultiStream(new A.Stream_Stream$fromIterable_closure(elements, $T), $T._eval$1("_MultiStream<0>"));
    },
    StreamIterator_StreamIterator(stream, $T) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator($T._eval$1("_StreamIterator<0>"));
    },
    StreamController_StreamController(onCancel, onListen, onPause, onResume, sync, $T) {
      return sync ? new A._SyncStreamController(onListen, onPause, onResume, onCancel, $T._eval$1("_SyncStreamController<0>")) : new A._AsyncStreamController(onListen, onPause, onResume, onCancel, $T._eval$1("_AsyncStreamController<0>"));
    },
    _runGuarded(notificationHandler) {
      var e, s, exception;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        $.Zone__current.handleUncaughtError$2(e, s);
      }
    },
    _AddStreamState_makeErrorHandler(controller) {
      return new A._AddStreamState_makeErrorHandler_closure(controller);
    },
    _BufferingStreamSubscription__registerDataHandler(zone, handleData, $T) {
      var t1 = handleData == null ? A.async___nullDataHandler$closure() : handleData;
      return zone.registerUnaryCallback$2$1(t1, type$.void, $T);
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (handleError == null)
        handleError = A.async___nullErrorHandler$closure();
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);
      if (type$.void_Function_Object._is(handleError))
        return zone.registerUnaryCallback$2$1(handleError, type$.dynamic, type$.Object);
      throw A.wrapException(A.ArgumentError$(string$.handle, null));
    },
    _BufferingStreamSubscription__registerDoneHandler(zone, handleDone) {
      var t1 = handleDone == null ? A.async___nullDoneHandler$closure() : handleDone;
      return zone.registerCallback$1$1(t1, type$.void);
    },
    _nullDataHandler(value) {
    },
    _nullErrorHandler(error, stackTrace) {
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      $.Zone__current.handleUncaughtError$2(error, stackTrace);
    },
    _nullDoneHandler() {
    },
    _runUserCode(userCode, onSuccess, onError, $T) {
      var error, stackTrace, replacement, exception;
      try {
        onSuccess.call$1(userCode.call$0());
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        replacement = A._interceptError(error, stackTrace);
        if (replacement != null)
          onError.call$2(replacement.error, replacement.stackTrace);
        else
          onError.call$2(error, stackTrace);
      }
    },
    _cancelAndError(subscription, future, error) {
      var cancelFuture = subscription.cancel$0(0);
      if (cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(new A._cancelAndError_closure(future, error));
      else
        future._completeErrorObject$1(error);
    },
    _cancelAndErrorClosure(subscription, future) {
      return new A._cancelAndErrorClosure_closure(subscription, future);
    },
    _addErrorWithReplacement(sink, error, stackTrace) {
      var replacement = A._interceptError(error, stackTrace);
      if (replacement != null) {
        error = replacement.error;
        stackTrace = replacement.stackTrace;
      }
      sink._addError$2(error, stackTrace);
    },
    Timer_Timer$periodic(duration, callback) {
      var boundCallback,
        t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return t1.createPeriodicTimer$2(duration, callback);
      boundCallback = t1.bindUnaryCallbackGuarded$1$1(callback, type$.Timer);
      return $.Zone__current.createPeriodicTimer$2(duration, boundCallback);
    },
    ZoneSpecification_ZoneSpecification$from(other, handleUncaughtError) {
      var t1 = handleUncaughtError == null ? other.handleUncaughtError : handleUncaughtError;
      return new A._ZoneSpecification(t1, other.run, other.runUnary, other.runBinary, other.registerCallback, other.registerUnaryCallback, other.registerBinaryCallback, other.errorCallback, other.scheduleMicrotask, other.createTimer, other.createPeriodicTimer, other.print, other.fork);
    },
    _rootHandleUncaughtError($self, $parent, zone, error, stackTrace) {
      A._rootHandleError(error, type$.StackTrace._as(stackTrace));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f, $R) {
      var old, t1;
      type$.nullable_Zone._as($self);
      type$.nullable_ZoneDelegate._as($parent);
      type$.Zone._as(zone);
      $R._eval$1("0()")._as(f);
      t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg, $R, $T) {
      var old, t1;
      type$.nullable_Zone._as($self);
      type$.nullable_ZoneDelegate._as($parent);
      type$.Zone._as(zone);
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old, t1;
      type$.nullable_Zone._as($self);
      type$.nullable_ZoneDelegate._as($parent);
      type$.Zone._as(zone);
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRegisterCallback($self, $parent, zone, f, $R) {
      return $R._eval$1("0()")._as(f);
    },
    _rootRegisterUnaryCallback($self, $parent, zone, f, $R, $T) {
      return $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
    },
    _rootRegisterBinaryCallback($self, $parent, zone, f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    },
    _rootErrorCallback($self, $parent, zone, error, stackTrace) {
      type$.nullable_StackTrace._as(stackTrace);
      return null;
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      var t1, t2;
      type$.void_Function._as(f);
      if (B.C__RootZone !== zone) {
        t1 = B.C__RootZone.get$errorZone();
        t2 = zone.get$errorZone();
        f = t1 !== t2 ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, type$.void);
      }
      A._scheduleAsyncCallback(f);
    },
    _rootCreateTimer($self, $parent, zone, duration, callback) {
      type$.Duration._as(duration);
      type$.void_Function._as(callback);
      return A.Timer__createTimer(duration, B.C__RootZone !== zone ? zone.bindCallback$1$1(callback, type$.void) : callback);
    },
    _rootCreatePeriodicTimer($self, $parent, zone, duration, callback) {
      type$.Duration._as(duration);
      type$.void_Function_Timer._as(callback);
      return A.Timer__createPeriodicTimer(duration, B.C__RootZone !== zone ? zone.bindUnaryCallback$2$1(callback, type$.void, type$.Timer) : callback);
    },
    _rootPrint($self, $parent, zone, line) {
      A.printString(A._asString(line));
    },
    _printToZone(line) {
      $.Zone__current.print$1(0, line);
    },
    _rootFork($self, $parent, zone, specification, zoneValues) {
      var valueMap, t1, handleUncaughtError;
      type$.nullable_ZoneSpecification._as(specification);
      type$.nullable_Map_of_nullable_Object_and_nullable_Object._as(zoneValues);
      $.printToZone = A.async___printToZone$closure();
      valueMap = zone.get$_async$_map();
      t1 = new A._CustomZone(zone.get$_async$_run(), zone.get$_runUnary(), zone.get$_runBinary(), zone.get$_registerCallback(), zone.get$_registerUnaryCallback(), zone.get$_registerBinaryCallback(), zone.get$_errorCallback(), zone.get$_scheduleMicrotask(), zone.get$_createTimer(), zone.get$_createPeriodicTimer(), zone.get$_print(), zone.get$_fork(), zone.get$_handleUncaughtError(), zone, valueMap);
      handleUncaughtError = specification.handleUncaughtError;
      if (handleUncaughtError != null)
        t1._handleUncaughtError = new A._ZoneFunction(t1, handleUncaughtError, type$._ZoneFunction_of_void_Function_Zone_ZoneDelegate_Zone_Object_StackTrace);
      return t1;
    },
    runZonedGuarded(body, onError, $R) {
      var error, stackTrace, t1, exception, _null = null, zoneSpecification = null, zoneValues = null,
        parentZone = $.Zone__current,
        errorHandler = new A.runZonedGuarded_closure(parentZone, onError);
      if (zoneSpecification == null)
        zoneSpecification = new A._ZoneSpecification(errorHandler, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      else
        zoneSpecification = A.ZoneSpecification_ZoneSpecification$from(zoneSpecification, errorHandler);
      try {
        t1 = parentZone.fork$2$specification$zoneValues(zoneSpecification, zoneValues).run$1$1(body, $R);
        return t1;
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        onError.call$2(error, stackTrace);
      }
      return _null;
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl(t0) {
      this._once = t0;
      this._handle = null;
      this._tick = 0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _TimerImpl$periodic_closure: function _TimerImpl$periodic_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.milliseconds = t1;
      _.start = t2;
      _.callback = t3;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _asyncStarHelper_closure: function _asyncStarHelper_closure(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _asyncStarHelper_closure0: function _asyncStarHelper_closure0(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _AsyncStarStreamController: function _AsyncStarStreamController(t0) {
      var _ = this;
      _.___AsyncStarStreamController_controller_A = $;
      _.isSuspended = false;
      _.cancelationFuture = null;
      _.$ti = t0;
    },
    _AsyncStarStreamController__resumeBody: function _AsyncStarStreamController__resumeBody(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController__resumeBody_closure: function _AsyncStarStreamController__resumeBody_closure(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController_closure0: function _AsyncStarStreamController_closure0(t0) {
      this._resumeBody = t0;
    },
    _AsyncStarStreamController_closure1: function _AsyncStarStreamController_closure1(t0, t1) {
      this.$this = t0;
      this._resumeBody = t1;
    },
    _AsyncStarStreamController_closure: function _AsyncStarStreamController_closure(t0, t1) {
      this.$this = t0;
      this.body = t1;
    },
    _AsyncStarStreamController__closure: function _AsyncStarStreamController__closure(t0) {
      this.body = t0;
    },
    _IterationMarker: function _IterationMarker(t0, t1) {
      this.value = t0;
      this.state = t1;
    },
    _SyncStarIterator: function _SyncStarIterator(t0, t1) {
      var _ = this;
      _._async$_body = t0;
      _._suspendedBodies = _._nestedIterator = _._datum = _._async$_current = null;
      _.$ti = t1;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    Future_Future$microtask_closure: function Future_Future$microtask_closure(t0, t1) {
      this.computation = t0;
      this.result = t1;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _SyncCompleter: function _SyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainCoreFuture_closure: function _Future__chainCoreFuture_closure(t0, t1) {
      this._box_0 = t0;
      this.target = t1;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteErrorObject_closure: function _Future__asyncCompleteErrorObject_closure(t0, t1) {
      this.$this = t0;
      this.error = t1;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0, t1) {
      this.joinedResult = t0;
      this.originalSource = t1;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure0: function _Future__propagateToListeners_handleWhenCompleteCallback_closure0(t0) {
      this.joinedResult = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_Stream$fromIterable_closure: function Stream_Stream$fromIterable_closure(t0, t1) {
      this.elements = t0;
      this.T = t1;
    },
    Stream_Stream$fromIterable_closure_next: function Stream_Stream$fromIterable_closure_next(t0, t1, t2) {
      this._box_0 = t0;
      this.controller = t1;
      this.zone = t2;
    },
    Stream_Stream$fromIterable__closure: function Stream_Stream$fromIterable__closure(t0, t1, t2) {
      this._box_0 = t0;
      this.zone = t1;
      this.next = t2;
    },
    Stream_handleError_closure: function Stream_handleError_closure(t0) {
      this.onError = t0;
    },
    Stream_fold_closure: function Stream_fold_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    Stream_fold_closure0: function Stream_fold_closure0(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.combine = t2;
      _.subscription = t3;
      _.result = t4;
      _.S = t5;
    },
    Stream_fold__closure: function Stream_fold__closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.combine = t1;
      _.element = t2;
      _.S = t3;
    },
    Stream_fold__closure0: function Stream_fold__closure0(t0, t1) {
      this._box_0 = t0;
      this.S = t1;
    },
    Stream_forEach_closure: function Stream_forEach_closure(t0) {
      this.future = t0;
    },
    Stream_forEach_closure0: function Stream_forEach_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.action = t1;
      _.subscription = t2;
      _.future = t3;
    },
    Stream_forEach__closure: function Stream_forEach__closure(t0, t1) {
      this.action = t0;
      this.element = t1;
    },
    Stream_forEach__closure0: function Stream_forEach__closure0() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    Stream_toList_closure: function Stream_toList_closure(t0, t1) {
      this.$this = t0;
      this.result = t1;
    },
    Stream_toList_closure0: function Stream_toList_closure0(t0, t1) {
      this.future = t0;
      this.result = t1;
    },
    StreamView: function StreamView() {
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _SyncStreamControllerDispatch: function _SyncStreamControllerDispatch() {
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _SyncStreamController: function _SyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._controller = t0;
      _._async$_onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _StreamSinkWrapper: function _StreamSinkWrapper(t0, t1) {
      this._async$_target = t0;
      this.$ti = t1;
    },
    _AddStreamState: function _AddStreamState() {
    },
    _AddStreamState_makeErrorHandler_closure: function _AddStreamState_makeErrorHandler_closure(t0) {
      this.controller = t0;
    },
    _AddStreamState_cancel_closure: function _AddStreamState_cancel_closure(t0) {
      this.$this = t0;
    },
    _StreamControllerAddStreamState: function _StreamControllerAddStreamState(t0, t1, t2, t3) {
      var _ = this;
      _._varData = t0;
      _.addStreamFuture = t1;
      _.addSubscription = t2;
      _.$ti = t3;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription_asFuture_closure: function _BufferingStreamSubscription_asFuture_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _BufferingStreamSubscription_asFuture_closure0: function _BufferingStreamSubscription_asFuture_closure0(t0, t1) {
      this.$this = t0;
      this.result = t1;
    },
    _BufferingStreamSubscription_asFuture__closure: function _BufferingStreamSubscription_asFuture__closure(t0, t1, t2) {
      this.result = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _BufferingStreamSubscription__sendError_sendError: function _BufferingStreamSubscription__sendError_sendError(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedError: function _DelayedError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents(t0) {
      var _ = this;
      _._state = 0;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _.$ti = t0;
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1) {
      var _ = this;
      _._state = 1;
      _._zone = t0;
      _._onDone = null;
      _.$ti = t1;
    },
    _DoneStreamSubscription_asFuture_closure: function _DoneStreamSubscription_asFuture_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _StreamIterator: function _StreamIterator(t0) {
      this.$ti = t0;
    },
    _EmptyStream: function _EmptyStream(t0) {
      this.$ti = t0;
    },
    _MultiStream: function _MultiStream(t0, t1) {
      this._onListen = t0;
      this.$ti = t1;
    },
    _MultiStream_listen_closure: function _MultiStream_listen_closure(t0, t1) {
      this.$this = t0;
      this.controller = t1;
    },
    _MultiStreamController: function _MultiStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _cancelAndError_closure: function _cancelAndError_closure(t0, t1) {
      this.future = t0;
      this.error = t1;
    },
    _cancelAndErrorClosure_closure: function _cancelAndErrorClosure_closure(t0, t1) {
      this.subscription = t0;
      this.future = t1;
    },
    _ForwardingStream: function _ForwardingStream() {
    },
    _ForwardingStreamSubscription: function _ForwardingStreamSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._async$_stream = t0;
      _._subscription = null;
      _._async$_onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _HandleErrorStream: function _HandleErrorStream(t0, t1, t2, t3) {
      var _ = this;
      _._onError = t0;
      _._test = t1;
      _._async$_source = t2;
      _.$ti = t3;
    },
    _EventSinkWrapper: function _EventSinkWrapper(t0, t1) {
      this._async$_sink = t0;
      this.$ti = t1;
    },
    _SinkTransformerStreamSubscription: function _SinkTransformerStreamSubscription(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.___SinkTransformerStreamSubscription__transformerSink_A = $;
      _._subscription = null;
      _._async$_onData = t0;
      _._onError = t1;
      _._onDone = t2;
      _._zone = t3;
      _._state = t4;
      _._pending = _._cancelFuture = null;
      _.$ti = t5;
    },
    _BoundSinkStream: function _BoundSinkStream(t0, t1, t2) {
      this._sinkMapper = t0;
      this._async$_stream = t1;
      this.$ti = t2;
    },
    _ZoneFunction: function _ZoneFunction(t0, t1, t2) {
      this.zone = t0;
      this.$function = t1;
      this.$ti = t2;
    },
    _ZoneSpecification: function _ZoneSpecification(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.handleUncaughtError = t0;
      _.run = t1;
      _.runUnary = t2;
      _.runBinary = t3;
      _.registerCallback = t4;
      _.registerUnaryCallback = t5;
      _.registerBinaryCallback = t6;
      _.errorCallback = t7;
      _.scheduleMicrotask = t8;
      _.createTimer = t9;
      _.createPeriodicTimer = t10;
      _.print = t11;
      _.fork = t12;
    },
    _ZoneDelegate: function _ZoneDelegate(t0) {
      this._delegationTarget = t0;
    },
    _Zone: function _Zone() {
    },
    _CustomZone: function _CustomZone(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._async$_run = t0;
      _._runUnary = t1;
      _._runBinary = t2;
      _._registerCallback = t3;
      _._registerUnaryCallback = t4;
      _._registerBinaryCallback = t5;
      _._errorCallback = t6;
      _._scheduleMicrotask = t7;
      _._createTimer = t8;
      _._createPeriodicTimer = t9;
      _._print = t10;
      _._fork = t11;
      _._handleUncaughtError = t12;
      _._delegateCache = null;
      _.parent = t13;
      _._async$_map = t14;
    },
    _CustomZone_bindCallback_closure: function _CustomZone_bindCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.registered = t1;
      this.R = t2;
    },
    _CustomZone_bindUnaryCallback_closure: function _CustomZone_bindUnaryCallback_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.registered = t1;
      _.T = t2;
      _.R = t3;
    },
    _CustomZone_bindCallbackGuarded_closure: function _CustomZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.registered = t1;
    },
    _CustomZone_bindUnaryCallbackGuarded_closure: function _CustomZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.registered = t1;
      this.T = t2;
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallback_closure: function _RootZone_bindCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.R = t2;
    },
    _RootZone_bindUnaryCallback_closure: function _RootZone_bindUnaryCallback_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.f = t1;
      _.T = t2;
      _.R = t3;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    runZonedGuarded_closure: function runZonedGuarded_closure(t0, t1) {
      this.parentZone = t0;
      this.onError = t1;
    },
    HashMap_HashMap(equals, hashCode, isValidKey, $K, $V) {
      if (isValidKey == null)
        if (hashCode == null) {
          if (equals == null)
            return new A._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
          hashCode = A.collection___defaultHashCode$closure();
        } else {
          if (A.core__identityHashCode$closure() === hashCode && A.core__identical$closure() === equals)
            return new A._IdentityHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_IdentityHashMap<1,2>"));
          if (equals == null)
            equals = A.collection___defaultEquals$closure();
        }
      else {
        if (hashCode == null)
          hashCode = A.collection___defaultHashCode$closure();
        if (equals == null)
          equals = A.collection___defaultEquals$closure();
      }
      return A._CustomHashMap$(equals, hashCode, isValidKey, $K, $V);
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    _CustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      var t1 = validKey != null ? validKey : new A._CustomHashMap_closure($K);
      return new A._CustomHashMap(_equals, _hashCode, t1, $K._eval$1("@<0>")._bind$1($V)._eval$1("_CustomHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap(equals, hashCode, $K, $V) {
      if (hashCode == null) {
        if (equals == null)
          return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
        hashCode = A.collection___defaultHashCode$closure();
      } else {
        if (A.core__identityHashCode$closure() === hashCode && A.core__identical$closure() === equals)
          return new A.JsIdentityLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsIdentityLinkedHashMap<1,2>"));
        if (equals == null)
          equals = A.collection___defaultEquals$closure();
      }
      return A._LinkedCustomHashMap$(equals, hashCode, null, $K, $V);
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    _LinkedCustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      return new A._LinkedCustomHashMap(_equals, _hashCode, new A._LinkedCustomHashMap_closure($K), $K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedCustomHashMap<1,2>"));
    },
    HashSet_HashSet($E) {
      return new A._HashSet($E._eval$1("_HashSet<0>"));
    },
    _HashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashSet_LinkedHashSet($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$(_set, _modifications, $E) {
      var t1 = new A._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    _defaultEquals(a, b) {
      return J.$eq$(a, b);
    },
    _defaultHashCode(a) {
      return J.get$hashCode$(a);
    },
    HashMap_HashMap$from(other, $K, $V) {
      var result = A.HashMap_HashMap(null, null, null, $K, $V);
      other.forEach$1(0, new A.HashMap_HashMap$from_closure(result, $K, $V));
      return result;
    },
    IterableExtensions_get_firstOrNull(_this, $T) {
      var iterator = J.get$iterator$ax(_this);
      if (iterator.moveNext$0())
        return iterator.get$current(iterator);
      return null;
    },
    IterableExtensions_get_lastOrNull(_this, $T) {
      if (_this.length === 0)
        return null;
      return B.JSArray_methods.get$last(_this);
    },
    LinkedHashMap_LinkedHashMap$from(other, $K, $V) {
      var result = A.LinkedHashMap_LinkedHashMap(null, null, $K, $V);
      other.forEach$1(0, new A.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashMap_LinkedHashMap$of(other, $K, $V) {
      var t1 = A.LinkedHashMap_LinkedHashMap(null, null, $K, $V);
      t1.addAll$1(0, other);
      return t1;
    },
    LinkedHashSet_LinkedHashSet$from(elements, $E) {
      var t1, _i,
        result = A.LinkedHashSet_LinkedHashSet($E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, $E._as(elements[_i]));
      return result;
    },
    ListBase__compareAny(a, b) {
      var t1 = type$.Comparable_dynamic;
      return J.compareTo$1$ns(t1._as(a), t1._as(b));
    },
    MapBase_mapToString(m) {
      var result, t1;
      if (A.isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        t1 = {};
        B.JSArray_methods.add$1($.toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        J.forEach$1$ax(m, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMap_addAll_closure: function _HashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _CustomHashMap: function _CustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t3;
    },
    _CustomHashMap_closure: function _CustomHashMap_closure(t0) {
      this.K = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedCustomHashMap: function _LinkedCustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _._length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t3;
    },
    _LinkedCustomHashMap_closure: function _LinkedCustomHashMap_closure(t0) {
      this.K = t0;
    },
    _HashSet: function _HashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_elements = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashSetIterator: function _HashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_elements = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    UnmodifiableListView: function UnmodifiableListView(t0, t1) {
      this._collection$_source = t0;
      this.$ti = t1;
    },
    HashMap_HashMap$from_closure: function HashMap_HashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    LinkedList: function LinkedList(t0) {
      var _ = this;
      _._collection$_length = _._modificationCount = 0;
      _._collection$_first = null;
      _.$ti = t0;
    },
    _LinkedListIterator: function _LinkedListIterator(t0, t1, t2, t3) {
      var _ = this;
      _._list = t0;
      _._modificationCount = t1;
      _._collection$_current = null;
      _._collection$_next = t2;
      _._visitedFirst = false;
      _.$ti = t3;
    },
    LinkedListEntry: function LinkedListEntry() {
    },
    ListBase: function ListBase() {
    },
    MapBase: function MapBase() {
    },
    MapBase_addAll_closure: function MapBase_addAll_closure(t0) {
      this.$this = t0;
    },
    MapBase_entries_closure: function MapBase_entries_closure(t0) {
      this.$this = t0;
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (!Array.isArray(object))
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    _Utf8Decoder__makeNativeUint8List(codeUnits, start, end) {
      var bytes, t1, i, b,
        $length = end - start;
      if ($length <= 4096)
        bytes = $.$get$_Utf8Decoder__reusableBuffer();
      else
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        if ((b & 255) !== b)
          b = 255;
        bytes[i] = b;
      }
      return bytes;
    },
    _Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$_Utf8Decoder__decoderNonfatal() : $.$get$_Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return A._Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return A._Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, end));
    },
    _Utf8Decoder__useTextDecoder(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
      }
      return null;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    _Base64Encoder_encodeChunk(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var t1, t2, t3, i, byteOr, byte, outputIndex0, t4, t5, outputIndex1,
        bits = state >>> 2,
        expectedChars = 3 - (state & 3);
      for (t1 = J.getInterceptor$asx(bytes), t2 = alphabet.length, t3 = output.$flags | 0, i = start, byteOr = 0; i < end; ++i) {
        byte = t1.$index(bytes, i);
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          t4 = bits >>> 18 & 63;
          if (!(t4 < t2))
            return A.ioore(alphabet, t4);
          t3 & 2 && A.throwUnsupportedOperation(output);
          t5 = output.length;
          if (!(outputIndex < t5))
            return A.ioore(output, outputIndex);
          output[outputIndex] = alphabet.charCodeAt(t4);
          outputIndex = outputIndex0 + 1;
          t4 = bits >>> 12 & 63;
          if (!(t4 < t2))
            return A.ioore(alphabet, t4);
          if (!(outputIndex0 < t5))
            return A.ioore(output, outputIndex0);
          output[outputIndex0] = alphabet.charCodeAt(t4);
          outputIndex0 = outputIndex + 1;
          t4 = bits >>> 6 & 63;
          if (!(t4 < t2))
            return A.ioore(alphabet, t4);
          if (!(outputIndex < t5))
            return A.ioore(output, outputIndex);
          output[outputIndex] = alphabet.charCodeAt(t4);
          outputIndex = outputIndex0 + 1;
          t4 = bits & 63;
          if (!(t4 < t2))
            return A.ioore(alphabet, t4);
          if (!(outputIndex0 < t5))
            return A.ioore(output, outputIndex0);
          output[outputIndex0] = alphabet.charCodeAt(t4);
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (isLast && expectedChars < 3) {
          outputIndex0 = outputIndex + 1;
          outputIndex1 = outputIndex0 + 1;
          if (3 - expectedChars === 1) {
            t1 = bits >>> 2 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            t3 & 2 && A.throwUnsupportedOperation(output);
            t3 = output.length;
            if (!(outputIndex < t3))
              return A.ioore(output, outputIndex);
            output[outputIndex] = alphabet.charCodeAt(t1);
            t1 = bits << 4 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            if (!(outputIndex0 < t3))
              return A.ioore(output, outputIndex0);
            output[outputIndex0] = alphabet.charCodeAt(t1);
            outputIndex = outputIndex1 + 1;
            if (!(outputIndex1 < t3))
              return A.ioore(output, outputIndex1);
            output[outputIndex1] = 61;
            if (!(outputIndex < t3))
              return A.ioore(output, outputIndex);
            output[outputIndex] = 61;
          } else {
            t1 = bits >>> 10 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            t3 & 2 && A.throwUnsupportedOperation(output);
            t3 = output.length;
            if (!(outputIndex < t3))
              return A.ioore(output, outputIndex);
            output[outputIndex] = alphabet.charCodeAt(t1);
            t1 = bits >>> 4 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            if (!(outputIndex0 < t3))
              return A.ioore(output, outputIndex0);
            output[outputIndex0] = alphabet.charCodeAt(t1);
            outputIndex = outputIndex1 + 1;
            t1 = bits << 2 & 63;
            if (!(t1 < t2))
              return A.ioore(alphabet, t1);
            if (!(outputIndex1 < t3))
              return A.ioore(output, outputIndex1);
            output[outputIndex1] = alphabet.charCodeAt(t1);
            if (!(outputIndex < t3))
              return A.ioore(output, outputIndex);
            output[outputIndex] = 61;
          }
          return 0;
        }
        return (bits << 2 | 3 - expectedChars) >>> 0;
      }
      for (i = start; i < end;) {
        byte = t1.$index(bytes, i);
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      throw A.wrapException(A.ArgumentError$value(bytes, "Not a byte value at index " + i + ": 0x" + B.JSInt_methods.toRadixString$1(t1.$index(bytes, i), 16), null));
    },
    Encoding_getByName($name) {
      if ($name == null)
        return null;
      return $.$get$Encoding__nameToEncoding().$index(0, $name.toLowerCase());
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    JsonUtf8Encoder__utf8Encode(string) {
      return null;
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      return new A._JsonStringStringifier(_sink, [], A.convert___defaultToEncodable$closure());
    },
    _JsonStringStringifier_stringify(object, toEncodable, indent) {
      var t1,
        output = new A.StringBuffer("");
      A._JsonStringStringifier_printOn(object, output, toEncodable, indent);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonStringStringifier_printOn(object, output, toEncodable, indent) {
      var stringifier = A._JsonStringStringifier$(output, toEncodable);
      stringifier.writeObject$1(object);
    },
    _JsonUtf8Stringifier$(toEncodable, bufferSize, addChunk) {
      var t1 = new Uint8Array(bufferSize);
      return new A._JsonUtf8Stringifier(bufferSize, addChunk, t1, [], A.convert___defaultToEncodable$closure());
    },
    _JsonUtf8Stringifier_stringify(object, indent, toEncodable, bufferSize, addChunk) {
      var t1, stringifier;
      if (indent != null) {
        t1 = new Uint8Array(bufferSize);
        stringifier = new A._JsonUtf8StringifierPretty(indent, 0, bufferSize, addChunk, t1, [], A.convert___defaultToEncodable$closure());
      } else
        stringifier = A._JsonUtf8Stringifier$(toEncodable, bufferSize, addChunk);
      stringifier.writeObject$1(object);
      t1 = stringifier.index;
      if (t1 > 0)
        stringifier.addChunk.call$3(stringifier.buffer, 0, t1);
      stringifier.buffer = new Uint8Array(0);
      stringifier.index = 0;
    },
    _Latin1DecoderSink__checkValidLatin1(source, start, end) {
      var t1, i, mask;
      for (t1 = J.getInterceptor$asx(source), i = start, mask = 0; i < end; ++i)
        mask = (mask | t1.$index(source, i)) >>> 0;
      if (mask >= 0 && mask <= 255)
        return;
      A._Latin1DecoderSink__reportInvalidLatin1(source, start, end);
    },
    _Latin1DecoderSink__reportInvalidLatin1(source, start, end) {
      var t1, i, char;
      for (t1 = J.getInterceptor$asx(source), i = start; i < end; ++i) {
        char = t1.$index(source, i);
        if (char < 0 || char > 255)
          throw A.wrapException(A.FormatException$("Source contains non-Latin-1 characters.", source, i));
      }
    },
    _Utf8Decoder_errorDescription(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._convert$_data = null;
    },
    _JsonMap_addAll_closure: function _JsonMap_addAll_closure(t0) {
      this.$this = t0;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._convert$_parent = t0;
    },
    _JsonDecoderSink: function _JsonDecoderSink(t0, t1, t2) {
      this._reviver = t0;
      this._convert$_sink = t1;
      this._stringSink = t2;
    },
    _Utf8Decoder__decoder_closure: function _Utf8Decoder__decoder_closure() {
    },
    _Utf8Decoder__decoderNonfatal_closure: function _Utf8Decoder__decoderNonfatal_closure() {
    },
    AsciiCodec: function AsciiCodec() {
    },
    _UnicodeSubsetEncoder: function _UnicodeSubsetEncoder() {
    },
    AsciiEncoder: function AsciiEncoder(t0) {
      this._subsetMask = t0;
    },
    _UnicodeSubsetEncoderSink: function _UnicodeSubsetEncoderSink(t0, t1) {
      this._convert$_sink = t0;
      this._subsetMask = t1;
    },
    _UnicodeSubsetDecoder: function _UnicodeSubsetDecoder() {
    },
    AsciiDecoder: function AsciiDecoder(t0, t1) {
      this._allowInvalid = t0;
      this._subsetMask = t1;
    },
    _ErrorHandlingAsciiDecoderSink: function _ErrorHandlingAsciiDecoderSink(t0) {
      this._utf8Sink = t0;
    },
    _SimpleAsciiDecoderSink: function _SimpleAsciiDecoderSink(t0) {
      this._convert$_sink = t0;
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    _BufferCachingBase64Encoder: function _BufferCachingBase64Encoder(t0) {
      this.bufferCache = null;
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    _Base64EncoderSink: function _Base64EncoderSink() {
    },
    _AsciiBase64EncoderSink: function _AsciiBase64EncoderSink(t0, t1) {
      this._convert$_sink = t0;
      this._encoder = t1;
    },
    _Utf8Base64EncoderSink: function _Utf8Base64EncoderSink(t0, t1) {
      this._convert$_sink = t0;
      this._encoder = t1;
    },
    ByteConversionSink: function ByteConversionSink() {
    },
    _ByteAdapterSink: function _ByteAdapterSink(t0) {
      this._convert$_sink = t0;
    },
    _ByteCallbackSink: function _ByteCallbackSink(t0, t1) {
      this._convert$_callback = t0;
      this._buffer = t1;
      this._bufferIndex = 0;
    },
    ChunkedConversionSink: function ChunkedConversionSink() {
    },
    _ConverterStreamEventSink: function _ConverterStreamEventSink(t0, t1, t2) {
      this._eventSink = t0;
      this._chunkedSink = t1;
      this.$ti = t2;
    },
    Codec: function Codec() {
    },
    _FusedCodec: function _FusedCodec(t0, t1, t2) {
      this._convert$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    Converter: function Converter() {
    },
    Converter_bind_closure: function Converter_bind_closure(t0) {
      this.$this = t0;
    },
    Encoding: function Encoding() {
    },
    Encoding_decodeStream_closure: function Encoding_decodeStream_closure() {
    },
    Encoding_decodeStream_closure0: function Encoding_decodeStream_closure0() {
    },
    HtmlEscapeMode: function HtmlEscapeMode(t0, t1, t2, t3, t4) {
      var _ = this;
      _._convert$_name = t0;
      _.escapeLtGt = t1;
      _.escapeQuot = t2;
      _.escapeApos = t3;
      _.escapeSlash = t4;
    },
    HtmlEscape: function HtmlEscape(t0) {
      this.mode = t0;
    },
    _HtmlEscapeSink: function _HtmlEscapeSink(t0, t1) {
      this._escape = t0;
      this._convert$_sink = t1;
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    _JsonEncoderSink: function _JsonEncoderSink(t0, t1, t2) {
      var _ = this;
      _._indent = t0;
      _._toEncodable = t1;
      _._convert$_sink = t2;
      _._isDone = false;
    },
    _JsonUtf8EncoderSink: function _JsonUtf8EncoderSink(t0, t1, t2, t3) {
      var _ = this;
      _._convert$_sink = t0;
      _._indent = t1;
      _._toEncodable = t2;
      _._bufferSize = t3;
      _._isDone = false;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonPrettyPrintMixin: function _JsonPrettyPrintMixin() {
    },
    _JsonPrettyPrintMixin_writeMap_closure: function _JsonPrettyPrintMixin_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._convert$_sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    _JsonUtf8Stringifier: function _JsonUtf8Stringifier(t0, t1, t2, t3, t4) {
      var _ = this;
      _.bufferSize = t0;
      _.addChunk = t1;
      _.buffer = t2;
      _.index = 0;
      _._seen = t3;
      _._toEncodable = t4;
    },
    _JsonUtf8StringifierPretty: function _JsonUtf8StringifierPretty(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.indent = t0;
      _._JsonPrettyPrintMixin__indentLevel = t1;
      _.bufferSize = t2;
      _.addChunk = t3;
      _.buffer = t4;
      _.index = 0;
      _._seen = t5;
      _._toEncodable = t6;
    },
    Latin1Codec: function Latin1Codec() {
    },
    Latin1Encoder: function Latin1Encoder(t0) {
      this._subsetMask = t0;
    },
    Latin1Decoder: function Latin1Decoder(t0, t1) {
      this._allowInvalid = t0;
      this._subsetMask = t1;
    },
    _Latin1DecoderSink: function _Latin1DecoderSink(t0) {
      this._convert$_sink = t0;
    },
    _Latin1AllowInvalidDecoderSink: function _Latin1AllowInvalidDecoderSink(t0) {
      this._convert$_sink = t0;
    },
    StringConversionSink: function StringConversionSink() {
    },
    _ClosableStringSink: function _ClosableStringSink(t0, t1) {
      this._convert$_callback = t0;
      this._convert$_sink = t1;
    },
    _StringConversionSinkAsStringSinkAdapter: function _StringConversionSinkAsStringSinkAdapter(t0, t1) {
      this._buffer = t0;
      this._chunkedSink = t1;
    },
    _StringSinkConversionSink: function _StringSinkConversionSink() {
    },
    _StringAdapterSink: function _StringAdapterSink(t0) {
      this._convert$_sink = t0;
    },
    _Utf8StringSinkAdapter: function _Utf8StringSinkAdapter(t0, t1, t2) {
      this._decoder = t0;
      this._convert$_sink = t1;
      this._stringSink = t2;
    },
    _Utf8ConversionSink: function _Utf8ConversionSink(t0, t1, t2) {
      this._decoder = t0;
      this._chunkedSink = t1;
      this._buffer = t2;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = this._carry = 0;
      this._buffer = t0;
    },
    _Utf8EncoderSink: function _Utf8EncoderSink(t0, t1) {
      var _ = this;
      _._convert$_sink = t0;
      _._bufferIndex = _._carry = 0;
      _._buffer = t1;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    __JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin: function __JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin() {
    },
    __Utf8EncoderSink__Utf8Encoder_StringConversionSink: function __Utf8EncoderSink__Utf8Encoder_StringConversionSink() {
    },
    identityHashCode(object) {
      return A.objectHashCode(object);
    },
    Expando__checkType(object) {
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    Error__throw(error, stackTrace) {
      error = A.initializeExceptionWrapper(error, new Error());
      if (error == null)
        error = type$.Object._as(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, $E._as(t1.get$current(t1)));
      if (growable)
        return list;
      list.$flags = 1;
      return list;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, t1.get$current(t1));
      return list;
    },
    List_List$unmodifiable(elements, $E) {
      var result = A.List_List$from(elements, false, $E);
      result.$flags = 3;
      return result;
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var t1, t2, maxLength, array, len;
      A.RangeError_checkNotNegative(start, "start");
      t1 = end == null;
      t2 = !t1;
      if (t2) {
        maxLength = end - start;
        if (maxLength < 0)
          throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
        if (maxLength === 0)
          return "";
      }
      if (Array.isArray(charCodes)) {
        array = charCodes;
        len = array.length;
        if (t1)
          end = len;
        return A.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);
      }
      if (type$.NativeUint8List._is(charCodes))
        return A.String__stringFromUint8List(charCodes, start, end);
      if (t2)
        charCodes = J.take$1$ax(charCodes, end);
      if (start > 0)
        charCodes = J.skip$1$ax(charCodes, start);
      t1 = A.List_List$_of(charCodes, type$.int);
      return A.Primitives_stringFromCharCodes(t1);
    },
    String_String$fromCharCode(charCode) {
      return A.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromUint8List(charCodes, start, endOrNull) {
      var len = charCodes.length;
      if (start >= len)
        return "";
      return A.Primitives_stringFromNativeUint8List(charCodes, start, endOrNull == null || endOrNull > len ? len : endOrNull);
    },
    RegExp_RegExp(source, multiLine) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, multiLine, true, false, false, ""));
    },
    identical(a, b) {
      return a == null ? b == null : a === b;
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current(iterator));
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current(iterator));
      }
      return string;
    },
    Uri_base() {
      var cachedUri, uri,
        current = A.Primitives_currentUri();
      if (current == null)
        throw A.wrapException(A.UnsupportedError$("'Uri.base' is not supported"));
      cachedUri = $.Uri__cachedBaseUri;
      if (cachedUri != null && current === $.Uri__cachedBaseString)
        return cachedUri;
      uri = A.Uri_parse(current);
      $.Uri__cachedBaseUri = uri;
      $.Uri__cachedBaseString = current;
      return uri;
    },
    _Uri__uriEncode(canonicalMask, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte,
        _s16_ = "0123456789ABCDEF";
      if (encoding === B.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding();
        t1 = t1._nativeRegExp.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = B.C_Utf8Encoder.convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128 && (string$.x00_____.charCodeAt(byte) & canonicalMask) !== 0)
          t2 += A.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    StackTrace_current() {
      return A.getTraceFromException(new Error());
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Primitives_safeToString(object);
    },
    Error_throwWithStackTrace(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      A.checkNotNullable(stackTrace, "stackTrace", type$.StackTrace);
      A.Error__throw(error, stackTrace);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError$notNull($name) {
      return new A.ArgumentError(false, null, $name, "Must not be null");
    },
    ArgumentError_checkNotNull(argument, $name, $T) {
      return argument;
    },
    RangeError$(message) {
      var _null = null;
      return new A.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval(value, minValue, maxValue, $name) {
      if (value < minValue || value > maxValue)
        throw A.wrapException(A.RangeError$range(value, minValue, maxValue, $name, null));
      return value;
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$(invalidValue, indexable) {
      var t1 = indexable._typed_buffer$_length;
      return new A.IndexError(t1, true, invalidValue, null, "Index out of range");
    },
    IndexError$withLength(invalidValue, $length, indexable, message, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Iterable_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A.isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.add$1($.toStringVisiting, iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Iterable_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A.isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      B.JSArray_methods.add$1($.toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $.toStringVisiting.length)
          return A.ioore($.toStringVisiting, -1);
        $.toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = J.get$iterator$ax(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current(it));
        B.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current(it);
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            B.JSArray_methods.add$1(parts, A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          if (0 >= parts.length)
            return A.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current(it);
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current(it);
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return A.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              B.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        B.JSArray_methods.add$1(parts, elision);
      B.JSArray_methods.add$1(parts, penultimateString);
      B.JSArray_methods.add$1(parts, ultimateString);
    },
    Map_Map$fromEntries(entries, $K, $V) {
      var t1 = A.LinkedHashMap_LinkedHashMap$_empty($K, $V);
      t1.addEntries$1(t1, entries);
      return t1;
    },
    Object_hash(object1, object2, object3, object4, object5, object6, object7, object8, object9) {
      var t1;
      if (B.C_SentinelValue === object3) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2));
      }
      if (B.C_SentinelValue === object4) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3));
      }
      if (B.C_SentinelValue === object5) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4));
      }
      if (B.C_SentinelValue === object6) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5));
      }
      if (B.C_SentinelValue === object7) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6));
      }
      if (B.C_SentinelValue === object8) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7));
      }
      if (B.C_SentinelValue === object9) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8));
      }
      t1 = J.get$hashCode$(object1);
      object2 = J.get$hashCode$(object2);
      object3 = J.get$hashCode$(object3);
      object4 = J.get$hashCode$(object4);
      object5 = J.get$hashCode$(object5);
      object6 = J.get$hashCode$(object6);
      object7 = J.get$hashCode$(object7);
      object8 = J.get$hashCode$(object8);
      object9 = J.get$hashCode$(object9);
      object9 = A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9));
      return object9;
    },
    Object_hashAll(objects) {
      var t1, _i,
        hash = $.$get$_hashSeed();
      for (t1 = objects.length, _i = 0; _i < objects.length; objects.length === t1 || (0, A.throwConcurrentModificationError)(objects), ++_i)
        hash = A.SystemHash_combine(hash, J.get$hashCode$(objects[_i]));
      return A.SystemHash_finish(hash);
    },
    print(object) {
      var toZone = $.printToZone;
      if (toZone == null)
        A.printString(object);
      else
        toZone.call$1(object);
    },
    Uri_Uri$dataFromString($content) {
      var t1, _null = null,
        buffer = new A.StringBuffer(""),
        indices = A._setArrayType([-1], type$.JSArray_int);
      A.UriData__writeUri(_null, _null, _null, buffer, indices);
      B.JSArray_methods.add$1(indices, buffer._contents.length);
      buffer._contents += ",";
      A.UriData__uriEncodeBytes(256, B.C_AsciiCodec.encode$1($content), buffer);
      t1 = buffer._contents;
      return new A.UriData(t1.charCodeAt(0) == 0 ? t1 : t1, indices, _null).get$uri();
    },
    Uri_parse(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, port, userInfoStart, userInfo, host, portNumber, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        if (4 >= end)
          return A.ioore(uri, 4);
        delta = ((uri.charCodeAt(4) ^ 58) * 3 | uri.charCodeAt(0) ^ 100 | uri.charCodeAt(1) ^ 97 | uri.charCodeAt(2) ^ 116 | uri.charCodeAt(3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(end < end ? B.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      B.JSArray_methods.$indexSet(indices, 0, 0);
      B.JSArray_methods.$indexSet(indices, 1, -1);
      B.JSArray_methods.$indexSet(indices, 2, -1);
      B.JSArray_methods.$indexSet(indices, 7, -1);
      B.JSArray_methods.$indexSet(indices, 3, 0);
      B.JSArray_methods.$indexSet(indices, 4, 0);
      B.JSArray_methods.$indexSet(indices, 5, end);
      B.JSArray_methods.$indexSet(indices, 6, end);
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        B.JSArray_methods.$indexSet(indices, 7, end);
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      scheme = _null;
      if (isSimple) {
        isSimple = false;
        if (!(hostStart > schemeEnd + 3)) {
          t1 = portStart > 0;
          if (!(t1 && portStart + 1 === pathStart)) {
            if (!B.JSString_methods.startsWith$2(uri, "\\", pathStart))
              if (hostStart > 0)
                t2 = B.JSString_methods.startsWith$2(uri, "\\", hostStart - 1) || B.JSString_methods.startsWith$2(uri, "\\", hostStart - 2);
              else
                t2 = false;
            else
              t2 = true;
            if (!t2) {
              if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
                t2 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
              else
                t2 = true;
              if (!t2)
                if (schemeEnd === 4) {
                  if (B.JSString_methods.startsWith$2(uri, "file", 0)) {
                    if (hostStart <= 0) {
                      if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                        schemeAuth = "file:///";
                        delta = 3;
                      } else {
                        schemeAuth = "file://";
                        delta = 2;
                      }
                      uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                      queryStart += delta;
                      fragmentStart += delta;
                      end = uri.length;
                      hostStart = 7;
                      portStart = 7;
                      pathStart = 7;
                    } else if (pathStart === queryStart) {
                      ++fragmentStart;
                      queryStart0 = queryStart + 1;
                      uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                      ++end;
                      queryStart = queryStart0;
                    }
                    scheme = "file";
                  } else if (B.JSString_methods.startsWith$2(uri, "http", 0)) {
                    if (t1 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                      fragmentStart -= 3;
                      pathStart0 = pathStart - 3;
                      queryStart -= 3;
                      uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      end -= 3;
                      pathStart = pathStart0;
                    }
                    scheme = "http";
                  }
                } else if (schemeEnd === 5 && B.JSString_methods.startsWith$2(uri, "https", 0)) {
                  if (t1 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                    fragmentStart -= 4;
                    pathStart0 = pathStart - 4;
                    queryStart -= 4;
                    uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "https";
                }
              isSimple = !t2;
            }
          }
        }
      }
      if (isSimple)
        return new A._SimpleUri(end < uri.length ? B.JSString_methods.substring$2(uri, 0, end) : uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = A._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            A._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      port = _null;
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        }
      } else {
        host = _null;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent(encodedComponent) {
      A._asString(encodedComponent);
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, B.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var t1, i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (t1 = host.length, i = start, partStart = i, partIndex = 0; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(host, i);
        char = host.charCodeAt(i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          if (!(partIndex < 4))
            return A.ioore(result, partIndex);
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      if (!(partIndex < 4))
        return A.ioore(result, partIndex);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, last, bytes, wildCardLength, index, value, j, t2, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host),
        t1 = host.length;
      if (t1 < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(host, i);
        char = host.charCodeAt(i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (!(i < t1))
              return A.ioore(host, i);
            if (host.charCodeAt(i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            B.JSArray_methods.add$1(parts, -1);
            wildcardSeen = true;
          } else
            B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          B.JSArray_methods.add$1(parts, parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          B.JSArray_methods.add$1(parts, (last[0] << 8 | last[1]) >>> 0);
          B.JSArray_methods.add$1(parts, (last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            if (!(index >= 0 && index < 16))
              return A.ioore(bytes, index);
            bytes[index] = 0;
            t2 = index + 1;
            if (!(t2 < 16))
              return A.ioore(bytes, t2);
            bytes[t2] = 0;
            index += 2;
          }
        else {
          t2 = B.JSInt_methods._shrOtherPositive$1(value, 8);
          if (!(index >= 0 && index < 16))
            return A.ioore(bytes, index);
          bytes[index] = t2;
          t2 = index + 1;
          if (!(t2 < 16))
            return A.ioore(bytes, t2);
          bytes[t2] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__Uri(host, path, pathSegments, port, query, scheme, userInfo) {
      var fragment, isFile, t1, hasAuthority, t2;
      scheme = scheme == null ? "" : A._Uri__makeScheme(scheme, 0, scheme.length);
      userInfo = A._Uri__makeUserInfo(userInfo, 0, userInfo == null ? 0 : userInfo.length);
      host = A._Uri__makeHost(host, 0, host == null ? 0 : host.length, false);
      if (query === "")
        query = null;
      query = A._Uri__makeQuery(query, 0, query == null ? 0 : query.length, null);
      fragment = A._Uri__makeFragment(null, 0, 0);
      port = A._Uri__makePort(port, scheme);
      isFile = scheme === "file";
      if (host == null)
        t1 = userInfo.length !== 0 || port != null || isFile;
      else
        t1 = false;
      if (t1)
        host = "";
      t1 = host == null;
      hasAuthority = !t1;
      path = A._Uri__makePath(path, 0, path == null ? 0 : path.length, pathSegments, scheme, hasAuthority);
      t2 = scheme.length === 0;
      if (t2 && t1 && !B.JSString_methods.startsWith$1(path, "/"))
        path = A._Uri__normalizeRelativePath(path, !t2 || hasAuthority);
      else
        path = A._Uri__removeDotSegments(path);
      return A._Uri$_internal(scheme, userInfo, t1 && B.JSString_methods.startsWith$1(path, "//") ? "" : host, port, path, query, fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__Uri$file(path, windows) {
      return windows ? A._Uri__makeWindowsFileUrl(path, false) : A._Uri__makeFileUri(path, false);
    },
    _Uri__checkNonWindowsPathReservedCharacters(segments, argumentError) {
      var t1, _i, segment;
      for (t1 = segments.length, _i = 0; _i < t1; ++_i) {
        segment = segments[_i];
        if (B.JSString_methods.contains$1(segment, "/")) {
          t1 = A.UnsupportedError$("Illegal path character " + segment);
          throw A.wrapException(t1);
        }
      }
    },
    _Uri__checkWindowsPathReservedCharacters(segments, argumentError, firstSegment) {
      var t1, t2, t3;
      for (t1 = A.SubListIterable$(segments, firstSegment, null, A._arrayInstanceType(segments)._precomputed1), t2 = t1.$ti, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (B.JSString_methods.contains$1(t3, A.RegExp_RegExp('["*/:<>?\\\\|]', false)))
          if (argumentError)
            throw A.wrapException(A.ArgumentError$("Illegal character in path", null));
          else
            throw A.wrapException(A.UnsupportedError$("Illegal character in path: " + t3));
      }
    },
    _Uri__checkWindowsDriveLetter(charCode, argumentError) {
      var t1,
        _s21_ = "Illegal drive letter ";
      if (!(65 <= charCode && charCode <= 90))
        t1 = 97 <= charCode && charCode <= 122;
      else
        t1 = true;
      if (t1)
        return;
      if (argumentError)
        throw A.wrapException(A.ArgumentError$(_s21_ + A.String_String$fromCharCode(charCode), null));
      else
        throw A.wrapException(A.UnsupportedError$(_s21_ + A.String_String$fromCharCode(charCode)));
    },
    _Uri__makeFileUri(path, slashTerminated) {
      var _null = null,
        segments = A._setArrayType(path.split("/"), type$.JSArray_String);
      if (B.JSString_methods.startsWith$1(path, "/"))
        return A._Uri__Uri(_null, _null, segments, _null, _null, "file", _null);
      else
        return A._Uri__Uri(_null, _null, segments, _null, _null, _null, _null);
    },
    _Uri__makeWindowsFileUrl(path, slashTerminated) {
      var t1, t2, pathSegments, pathStart, hostPart, _s1_ = "\\", _null = null, _s4_ = "file";
      if (B.JSString_methods.startsWith$1(path, "\\\\?\\"))
        if (B.JSString_methods.startsWith$2(path, "UNC\\", 4))
          path = B.JSString_methods.replaceRange$3(path, 0, 7, _s1_);
        else {
          path = B.JSString_methods.substring$1(path, 4);
          t1 = path.length;
          t2 = true;
          if (t1 >= 3) {
            if (1 >= t1)
              return A.ioore(path, 1);
            if (path.charCodeAt(1) === 58) {
              if (2 >= t1)
                return A.ioore(path, 2);
              t1 = path.charCodeAt(2) !== 92;
            } else
              t1 = t2;
          } else
            t1 = t2;
          if (t1)
            throw A.wrapException(A.ArgumentError$value(path, "path", "Windows paths with \\\\?\\ prefix must be absolute"));
        }
      else
        path = A.stringReplaceAllUnchecked(path, "/", _s1_);
      t1 = path.length;
      if (t1 > 1 && path.charCodeAt(1) === 58) {
        if (0 >= t1)
          return A.ioore(path, 0);
        A._Uri__checkWindowsDriveLetter(path.charCodeAt(0), true);
        if (t1 !== 2) {
          if (2 >= t1)
            return A.ioore(path, 2);
          t1 = path.charCodeAt(2) !== 92;
        } else
          t1 = true;
        if (t1)
          throw A.wrapException(A.ArgumentError$value(path, "path", "Windows paths with drive letter must be absolute"));
        pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
        A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 1);
        return A._Uri__Uri(_null, _null, pathSegments, _null, _null, _s4_, _null);
      }
      if (B.JSString_methods.startsWith$1(path, _s1_))
        if (B.JSString_methods.startsWith$2(path, _s1_, 1)) {
          pathStart = B.JSString_methods.indexOf$2(path, _s1_, 2);
          t1 = pathStart < 0;
          hostPart = t1 ? B.JSString_methods.substring$1(path, 2) : B.JSString_methods.substring$2(path, 2, pathStart);
          pathSegments = A._setArrayType((t1 ? "" : B.JSString_methods.substring$1(path, pathStart + 1)).split(_s1_), type$.JSArray_String);
          A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
          return A._Uri__Uri(hostPart, _null, pathSegments, _null, _null, _s4_, _null);
        } else {
          pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
          A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
          return A._Uri__Uri(_null, _null, pathSegments, _null, _null, _s4_, _null);
        }
      else {
        pathSegments = A._setArrayType(path.split(_s1_), type$.JSArray_String);
        A._Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
        return A._Uri__Uri(_null, _null, pathSegments, _null, _null, _null, _null);
      }
    },
    _Uri__computeQueryParametersAll(query) {
      var queryParameterLists;
      if (query.length === 0)
        return B.Map_empty;
      queryParameterLists = A._Uri__splitQueryStringAll(query);
      queryParameterLists.updateAll$1(queryParameterLists, A.core___toUnmodifiableStringList$closure());
      return A.ConstantMap_ConstantMap$from(queryParameterLists, type$.String, type$.List_String);
    },
    _Uri__makePort(port, scheme) {
      if (port != null && port === A._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      t1 = host.length;
      if (!(start >= 0 && start < t1))
        return A.ioore(host, start);
      if (host.charCodeAt(start) === 91) {
        t2 = end - 1;
        if (!(t2 >= 0 && t2 < t1))
          return A.ioore(host, t2);
        if (host.charCodeAt(t2) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t1 = start + 1;
        index = A._Uri__checkZoneID(host, t1, t2);
        if (index < t2) {
          zoneIDstart = index + 1;
          zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t2, "%25");
        } else
          zoneID = "";
        A.Uri_parseIPv6Address(host, t1, index);
        return B.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(host, i);
        if (host.charCodeAt(i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var t1, index, sectionStart, isNormalized, char, replacement, t2, t3, sourceLength, tail, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (t1 = host.length, index = start, sectionStart = index, isNormalized = true; index < end;) {
        if (!(index >= 0 && index < t1))
          return A.ioore(host, index);
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t2 = replacement == null;
          if (t2 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t3 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t2)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t3 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (string$.x00_____.charCodeAt(char) & 1) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            t2 = index + 1;
            if (!(t2 < t1))
              return A.ioore(host, t2);
            tail = host.charCodeAt(t2);
            if ((tail & 64512) === 56320) {
              char = 65536 + ((char & 1023) << 10) + (tail & 1023);
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t2._contents += slice;
          t3 = A._Uri__escapeChar(char);
          t2._contents += t3;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var t1, index, sectionStart, buffer, isNormalized, char, replacement, t2, slice, t3, sourceLength, tail,
        _s128_ = string$.x00_____;
      for (t1 = host.length, index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        if (!(index >= 0 && index < t1))
          return A.ioore(host, index);
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t2 = replacement == null;
          if (t2 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          t3 = buffer._contents += slice;
          sourceLength = 3;
          if (t2)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          }
          buffer._contents = t3 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (_s128_.charCodeAt(char) & 32) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else if (char <= 93 && (_s128_.charCodeAt(char) & 1024) !== 0)
          A._Uri__fail(host, index, "Invalid character");
        else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            t2 = index + 1;
            if (!(t2 < t1))
              return A.ioore(host, t2);
            tail = host.charCodeAt(t2);
            if ((tail & 64512) === 56320) {
              char = 65536 + ((char & 1023) << 10) + (tail & 1023);
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t2._contents += slice;
          t3 = A._Uri__escapeChar(char);
          t2._contents += t3;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        if (!isNormalized)
          slice = slice.toLowerCase();
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var t1, i, containsUpperCase, codeUnit;
      if (start === end)
        return "";
      t1 = scheme.length;
      if (!(start < t1))
        return A.ioore(scheme, start);
      if (!A._Uri__isAlphabeticCharacter(scheme.charCodeAt(start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(scheme, i);
        codeUnit = scheme.charCodeAt(i);
        if (!(codeUnit < 128 && (string$.x00_____.charCodeAt(codeUnit) & 8) !== 0))
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return A._Uri__normalizeOrSubstring(userInfo, start, end, 16, false, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var t1, result,
        isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority;
      if (path == null) {
        if (pathSegments == null)
          return isFile ? "/" : "";
        t1 = A._arrayInstanceType(pathSegments);
        result = new A.MappedListIterable(pathSegments, t1._eval$1("String(1)")._as(new A._Uri__makePath_closure()), t1._eval$1("MappedListIterable<1,String>")).join$1(0, "/");
      } else if (pathSegments != null)
        throw A.wrapException(A.ArgumentError$("Both path and pathSegments specified", null));
      else
        result = A._Uri__normalizeOrSubstring(path, start, end, 128, true, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/") && !B.JSString_methods.startsWith$1(path, "\\"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      if (query != null)
        return A._Uri__normalizeOrSubstring(query, start, end, 256, true, false);
      return null;
    },
    _Uri__makeFragment(fragment, start, end) {
      if (fragment == null)
        return null;
      return A._Uri__normalizeOrSubstring(fragment, start, end, 256, true, false);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var t3, firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        _s128_ = string$.x00_____,
        t1 = index + 2,
        t2 = source.length;
      if (t1 >= t2)
        return "%";
      t3 = index + 1;
      if (!(t3 >= 0 && t3 < t2))
        return A.ioore(source, t3);
      firstDigit = source.charCodeAt(t3);
      if (!(t1 >= 0))
        return A.ioore(source, t1);
      secondDigit = source.charCodeAt(t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127) {
        if (!(value >= 0))
          return A.ioore(_s128_, value);
        t1 = (_s128_.charCodeAt(value) & 1) !== 0;
      } else
        t1 = false;
      if (t1)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, t1, flag, encodedBytes, index, byte, t2, t3,
        _s16_ = "0123456789ABCDEF";
      if (char <= 127) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        t1 = char >>> 4;
        if (!(t1 < 16))
          return A.ioore(_s16_, t1);
        codeUnits[1] = _s16_.charCodeAt(t1);
        codeUnits[2] = _s16_.charCodeAt(char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        t1 = 3 * encodedBytes;
        codeUnits = new Uint8Array(t1);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          if (!(index < t1))
            return A.ioore(codeUnits, index);
          codeUnits[index] = 37;
          t2 = index + 1;
          t3 = byte >>> 4;
          if (!(t3 < 16))
            return A.ioore(_s16_, t3);
          if (!(t2 < t1))
            return A.ioore(codeUnits, t2);
          codeUnits[t2] = _s16_.charCodeAt(t3);
          t3 = index + 2;
          if (!(t3 < t1))
            return A.ioore(codeUnits, t3);
          codeUnits[t3] = _s16_.charCodeAt(byte & 15);
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charMask, escapeDelimiters, replaceBackslash) {
      var t1 = A._Uri__normalize(component, start, end, charMask, escapeDelimiters, replaceBackslash);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charMask, escapeDelimiters, replaceBackslash) {
      var t1, t2, index, sectionStart, buffer, char, sourceLength, replacement, t3, tail, _null = null,
        _s128_ = string$.x00_____;
      for (t1 = !escapeDelimiters, t2 = component.length, index = start, sectionStart = index, buffer = _null; index < end;) {
        if (!(index >= 0 && index < t2))
          return A.ioore(component, index);
        char = component.charCodeAt(index);
        if (char < 127 && (_s128_.charCodeAt(char) & charMask) !== 0)
          ++index;
        else {
          sourceLength = 1;
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement)
              replacement = "%25";
            else
              sourceLength = 3;
          } else if (char === 92 && replaceBackslash)
            replacement = "/";
          else if (t1 && char <= 93 && (_s128_.charCodeAt(char) & 1024) !== 0) {
            A._Uri__fail(component, index, "Invalid character");
            sourceLength = _null;
            replacement = sourceLength;
          } else {
            if ((char & 64512) === 55296) {
              t3 = index + 1;
              if (t3 < end) {
                if (!(t3 < t2))
                  return A.ioore(component, t3);
                tail = component.charCodeAt(t3);
                if ((tail & 64512) === 56320) {
                  char = 65536 + ((char & 1023) << 10) + (tail & 1023);
                  sourceLength = 2;
                }
              }
            }
            replacement = A._Uri__escapeChar(char);
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t3 = buffer;
          } else
            t3 = buffer;
          t3._contents = (t3._contents += B.JSString_methods.substring$2(component, sectionStart, index)) + replacement;
          if (typeof sourceLength !== "number")
            return A.iae(sourceLength);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end) {
        t1 = B.JSString_methods.substring$2(component, sectionStart, end);
        buffer._contents += t1;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment, t3;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (segment === "..") {
          t3 = output.length;
          if (t3 !== 0) {
            if (0 >= t3)
              return A.ioore(output, -1);
            output.pop();
            if (output.length === 0)
              B.JSArray_methods.add$1(output, "");
          }
          appendSlash = true;
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            B.JSArray_methods.add$1(output, segment);
        }
      }
      if (appendSlash)
        B.JSArray_methods.add$1(output, "");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment) {
          appendSlash = output.length !== 0 && B.JSArray_methods.get$last(output) !== "..";
          if (appendSlash) {
            if (0 >= output.length)
              return A.ioore(output, -1);
            output.pop();
          } else
            B.JSArray_methods.add$1(output, "..");
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            B.JSArray_methods.add$1(output, segment);
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        if (t1 === 1) {
          if (0 >= t1)
            return A.ioore(output, 0);
          t1 = output[0].length === 0;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        B.JSArray_methods.add$1(output, "");
      if (!allowScheme) {
        if (0 >= output.length)
          return A.ioore(output, 0);
        B.JSArray_methods.$indexSet(output, 0, A._Uri__escapeScheme(output[0]));
      }
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char, t2,
        _s128_ = string$.x00_____,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(path.charCodeAt(0)))
        for (i = 1; i < t1; ++i) {
          char = path.charCodeAt(i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char <= 127) {
            if (!(char < 128))
              return A.ioore(_s128_, char);
            t2 = (_s128_.charCodeAt(char) & 8) === 0;
          } else
            t2 = true;
          if (t2)
            break;
        }
      return path;
    },
    _Uri__packageNameEnd(uri, path) {
      if (uri.isScheme$1("package") && uri._host == null)
        return A._skipPackageNameChars(path, 0, path.length);
      return -1;
    },
    _Uri__createList() {
      return A._setArrayType([], type$.JSArray_String);
    },
    _Uri__splitQueryStringAll(query) {
      var t1, i, start, equalsIndex, char,
        result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_String),
        parsePair = new A._Uri__splitQueryStringAll_parsePair(query, B.C_Utf8Codec, result);
      for (t1 = query.length, i = 0, start = 0, equalsIndex = -1; i < t1;) {
        char = query.charCodeAt(i);
        if (char === 61) {
          if (equalsIndex < 0)
            equalsIndex = i;
        } else if (char === 38) {
          parsePair.call$3(start, equalsIndex, i);
          start = i + 1;
          equalsIndex = -1;
        }
        ++i;
      }
      parsePair.call$3(start, equalsIndex, i);
      return result;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var t1, byte, i, t2, charCode;
      for (t1 = s.length, byte = 0, i = 0; i < 2; ++i) {
        t2 = pos + i;
        if (!(t2 >= 0 && t2 < t1))
          return A.ioore(s, t2);
        charCode = s.charCodeAt(t2);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw A.wrapException(A.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t2, bytes,
        t1 = text.length,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        if (!(i >= 0 && i < t1))
          return A.ioore(text, i);
        codeUnit = text.charCodeAt(i);
        t2 = true;
        if (codeUnit <= 127)
          if (codeUnit !== 37)
            t2 = plusToSpace && codeUnit === 43;
        if (t2) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple)
        if (B.C_Utf8Codec === encoding)
          return B.JSString_methods.substring$2(text, start, end);
        else
          bytes = new A.CodeUnits(B.JSString_methods.substring$2(text, start, end));
      else {
        bytes = A._setArrayType([], type$.JSArray_int);
        for (i = start; i < end; ++i) {
          if (!(i >= 0 && i < t1))
            return A.ioore(text, i);
          codeUnit = text.charCodeAt(i);
          if (codeUnit > 127)
            throw A.wrapException(A.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw A.wrapException(A.ArgumentError$("Truncated URI", null));
            B.JSArray_methods.add$1(bytes, A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else if (plusToSpace && codeUnit === 43)
            B.JSArray_methods.add$1(bytes, 32);
          else
            B.JSArray_methods.add$1(bytes, codeUnit);
        }
      }
      return encoding.decode$1(0, bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__writeUri(mimeType, charsetName, parameters, buffer, indices) {
      buffer._contents = buffer._contents;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = text.charCodeAt(i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        B.JSArray_methods.add$1(indices, i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          if (!(i >= 0))
            return A.ioore(text, i);
          char = text.charCodeAt(i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          B.JSArray_methods.add$1(indices, equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      B.JSArray_methods.add$1(indices, i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.C_Base64Codec.normalize$3(0, text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, 256, true, false);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    UriData__uriEncodeBytes(canonicalMask, bytes, buffer) {
      var t1, byteOr, i, byte, t2,
        _s16_ = "0123456789ABCDEF";
      for (t1 = bytes.length, byteOr = 0, i = 0; i < t1; ++i) {
        byte = bytes[i];
        byteOr |= byte;
        if (byte < 128 && (string$.x00_____.charCodeAt(byte) & canonicalMask) !== 0) {
          t2 = A.Primitives_stringFromCharCode(byte);
          buffer._contents += t2;
        } else {
          t2 = A.Primitives_stringFromCharCode(37);
          buffer._contents += t2;
          t2 = byte >>> 4;
          if (!(t2 < 16))
            return A.ioore(_s16_, t2);
          t2 = A.Primitives_stringFromCharCode(_s16_.charCodeAt(t2));
          buffer._contents += t2;
          t2 = A.Primitives_stringFromCharCode(_s16_.charCodeAt(byte & 15));
          buffer._contents += t2;
        }
      }
      if ((byteOr & 4294967040) !== 0)
        for (i = 0; i < t1; ++i) {
          byte = bytes[i];
          if (byte > 255)
            throw A.wrapException(A.ArgumentError$value(byte, "non-byte value", null));
        }
    },
    _scan(uri, start, end, state, indices) {
      var t1, i, char, t2, transition,
        _s2112_ = '\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe3\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x0e\x03\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xea\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\n\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xeb\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\xeb\xeb\xeb\x8b\xeb\xeb\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\xeb\x83\xeb\xeb\x8b\xeb\x8b\xeb\xcd\x8b\xeb\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x92\x83\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\x8b\xeb\x8b\xeb\x8b\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xebD\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x12D\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\xe5\xe5\xe5\x05\xe5D\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe8\x8a\xe5\xe5\x05\xe5\x05\xe5\xcd\x05\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x8a\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05f\x05\xe5\x05\xe5\xac\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\xe5\xe5\xe5\x05\xe5D\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\xe5\x8a\xe5\xe5\x05\xe5\x05\xe5\xcd\x05\xe5\x05\x05\x05\x05\x05\x05\x05\x05\x05\x8a\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05f\x05\xe5\x05\xe5\xac\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7D\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\xe7\xe7\xe7\xe7\xe7\xe7\xcd\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\xe7\x07\x07\x07\x07\x07\x07\x07\x07\x07\xe7\xe7\xe7\xe7\xe7\xac\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7D\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\xe7\xe7\xe7\xe7\xe7\xe7\xcd\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\xe7\x8a\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\xe7\xe7\xe7\xe7\xe7\xac\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\x05\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x10\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x12\n\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\v\n\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xec\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\xec\xec\xec\f\xec\xec\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\xec\xec\xec\xec\f\xec\f\xec\xcd\f\xec\f\f\f\f\f\f\f\f\f\xec\f\f\f\f\f\f\f\f\f\f\xec\f\xec\f\xec\f\xed\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\xed\xed\xed\r\xed\xed\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\xed\xed\xed\xed\r\xed\r\xed\xed\r\xed\r\r\r\r\r\r\r\r\r\xed\r\r\r\r\r\r\r\r\r\r\xed\r\xed\r\xed\r\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xea\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x0f\xea\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe1\xe1\x01\xe1\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\xe1\xe9\xe1\xe1\x01\xe1\x01\xe1\xcd\x01\xe1\x01\x01\x01\x01\x01\x01\x01\x01\x01\t\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01"\x01\xe1\x01\xe1\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x11\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xe9\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\v\t\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\x13\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xeb\xeb\v\xeb\xeb\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\xeb\xea\xeb\xeb\v\xeb\v\xeb\xcd\v\xeb\v\v\v\v\v\v\v\v\v\xea\v\v\v\v\v\v\v\v\v\v\xeb\v\xeb\v\xeb\xac\xf5\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\xf5\x15\xf5\x15\x15\xf5\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\xf5\xf5\xf5\xf5\xf5\xf5';
      for (t1 = uri.length, i = start; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(uri, i);
        char = uri.charCodeAt(i) ^ 96;
        if (char > 95)
          char = 31;
        t2 = state * 96 + char;
        if (!(t2 < 2112))
          return A.ioore(_s2112_, t2);
        transition = _s2112_.charCodeAt(t2);
        state = transition & 31;
        B.JSArray_methods.$indexSet(indices, transition >>> 5, i);
      }
      return state;
    },
    _SimpleUri__packageNameEnd(uri) {
      if (uri._schemeEnd === 7 && B.JSString_methods.startsWith$1(uri._uri, "package") && uri._hostStart <= 0)
        return A._skipPackageNameChars(uri._uri, uri._pathStart, uri._queryStart);
      return -1;
    },
    _toUnmodifiableStringList(key, list) {
      A._asString(key);
      return A.List_List$unmodifiable(type$.List_String._as(list), type$.String);
    },
    _skipPackageNameChars(source, start, end) {
      var t1, i, dots, char;
      for (t1 = source.length, i = start, dots = 0; i < end; ++i) {
        if (!(i >= 0 && i < t1))
          return A.ioore(source, i);
        char = source.charCodeAt(i);
        if (char === 47)
          return dots !== 0 ? i : -1;
        if (char === 37 || char === 58)
          return -1;
        dots |= char ^ 46;
      }
      return -1;
    },
    _caseInsensitiveCompareStart(prefix, string, start) {
      var t1, t2, result, i, t3, stringChar, delta, lowerChar;
      for (t1 = prefix.length, t2 = string.length, result = 0, i = 0; i < t1; ++i) {
        t3 = start + i;
        if (!(t3 < t2))
          return A.ioore(string, t3);
        stringChar = string.charCodeAt(t3);
        delta = prefix.charCodeAt(i) ^ stringChar;
        if (delta !== 0) {
          if (delta === 32) {
            lowerChar = stringChar | delta;
            if (97 <= lowerChar && lowerChar <= 122) {
              result = 32;
              continue;
            }
          }
          return -1;
        }
      }
      return result;
    },
    DateTime: function DateTime(t0, t1, t2) {
      this._core$_value = t0;
      this._microsecond = t1;
      this.isUtc = t2;
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace(t0) {
      this._stackTrace = t0;
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_queryParametersAll_FI = _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _Uri__makePath_closure: function _Uri__makePath_closure() {
    },
    _Uri__splitQueryStringAll_parsePair: function _Uri__splitQueryStringAll_parsePair(t0, t1, t2) {
      this.query = t0;
      this.encoding = t1;
      this.result = t2;
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_queryParametersAll_FI = _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    Expando: function Expando(t0, t1) {
      this._jsWeakMap = t0;
      this.$ti = t1;
    },
    Element__safeTagName(element) {
      var t1, exception,
        result = "element tag unavailable";
      try {
        t1 = element.tagName;
        t1.toString;
        result = t1;
      } catch (exception) {
      }
      return result;
    },
    HtmlElement: function HtmlElement() {
    },
    AccessibleNodeList: function AccessibleNodeList() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    BaseElement: function BaseElement() {
    },
    Blob: function Blob() {
    },
    BodyElement: function BodyElement() {
    },
    CharacterData: function CharacterData() {
    },
    CssPerspective: function CssPerspective() {
    },
    CssRule: function CssRule() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    CssStyleValue: function CssStyleValue() {
    },
    CssTransformComponent: function CssTransformComponent() {
    },
    CssTransformValue: function CssTransformValue() {
    },
    CssUnparsedValue: function CssUnparsedValue() {
    },
    DataTransferItemList: function DataTransferItemList() {
    },
    Document: function Document() {
    },
    DomException: function DomException() {
    },
    DomImplementation: function DomImplementation() {
    },
    DomRectList: function DomRectList() {
    },
    DomRectReadOnly: function DomRectReadOnly() {
    },
    DomStringList: function DomStringList() {
    },
    DomTokenList: function DomTokenList() {
    },
    Element0: function Element0() {
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    File: function File() {
    },
    FileList: function FileList() {
    },
    FileWriter: function FileWriter() {
    },
    FormElement: function FormElement() {
    },
    Gamepad: function Gamepad() {
    },
    History: function History() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HtmlDocument: function HtmlDocument() {
    },
    Location: function Location() {
    },
    MediaList: function MediaList() {
    },
    MidiInputMap: function MidiInputMap() {
    },
    MidiInputMap_keys_closure: function MidiInputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiOutputMap: function MidiOutputMap() {
    },
    MidiOutputMap_keys_closure: function MidiOutputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MimeType: function MimeType() {
    },
    MimeTypeArray: function MimeTypeArray() {
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    Plugin: function Plugin() {
    },
    PluginArray: function PluginArray() {
    },
    RtcStatsReport: function RtcStatsReport() {
    },
    RtcStatsReport_keys_closure: function RtcStatsReport_keys_closure(t0) {
      this.keys = t0;
    },
    SelectElement: function SelectElement() {
    },
    SourceBuffer: function SourceBuffer() {
    },
    SourceBufferList: function SourceBufferList() {
    },
    SpeechGrammar: function SpeechGrammar() {
    },
    SpeechGrammarList: function SpeechGrammarList() {
    },
    SpeechRecognitionResult: function SpeechRecognitionResult() {
    },
    Storage: function Storage() {
    },
    Storage_addAll_closure: function Storage_addAll_closure(t0) {
      this.$this = t0;
    },
    Storage_keys_closure: function Storage_keys_closure(t0) {
      this.keys = t0;
    },
    StyleSheet: function StyleSheet() {
    },
    TemplateElement: function TemplateElement() {
    },
    Text0: function Text0() {
    },
    TextTrack: function TextTrack() {
    },
    TextTrackCue: function TextTrackCue() {
    },
    TextTrackCueList: function TextTrackCueList() {
    },
    TextTrackList: function TextTrackList() {
    },
    TimeRanges: function TimeRanges() {
    },
    Touch: function Touch() {
    },
    TouchList: function TouchList() {
    },
    TrackDefaultList: function TrackDefaultList() {
    },
    Url: function Url() {
    },
    VideoTrackList: function VideoTrackList() {
    },
    _Attr: function _Attr() {
    },
    _CssRuleList: function _CssRuleList() {
    },
    _DomRect: function _DomRect() {
    },
    _GamepadList: function _GamepadList() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _SpeechRecognitionResultList: function _SpeechRecognitionResultList() {
    },
    _StyleSheetList: function _StyleSheetList() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _AttributeMap_addAll_closure: function _AttributeMap_addAll_closure(t0) {
      this.$this = t0;
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._html$_element = t0;
    },
    _Html5NodeValidator: function _Html5NodeValidator(t0) {
      this.uriPolicy = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    NodeValidatorBuilder: function NodeValidatorBuilder(t0) {
      this._validators = t0;
    },
    NodeValidatorBuilder_allowsElement_closure: function NodeValidatorBuilder_allowsElement_closure(t0) {
      this.element = t0;
    },
    NodeValidatorBuilder_allowsAttribute_closure: function NodeValidatorBuilder_allowsAttribute_closure(t0, t1, t2) {
      this.element = t0;
      this.attributeName = t1;
      this.value = t2;
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._html$_length = t1;
      _._position = -1;
      _._current = null;
      _.$ti = t2;
    },
    _ValidatingTreeSanitizer: function _ValidatingTreeSanitizer(t0) {
      this.validator = t0;
      this.numTreeModifications = 0;
    },
    _ValidatingTreeSanitizer_sanitizeTree_walk: function _ValidatingTreeSanitizer_sanitizeTree_walk(t0) {
      this.$this = t0;
    },
    _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase: function _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase() {
    },
    _DomRectList_JavaScriptObject_ListMixin: function _DomRectList_JavaScriptObject_ListMixin() {
    },
    _DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin: function _DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _DomStringList_JavaScriptObject_ListMixin: function _DomStringList_JavaScriptObject_ListMixin() {
    },
    _DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin: function _DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _FileList_JavaScriptObject_ListMixin: function _FileList_JavaScriptObject_ListMixin() {
    },
    _FileList_JavaScriptObject_ListMixin_ImmutableListMixin: function _FileList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin: function _HtmlCollection_JavaScriptObject_ListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin: function _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _MidiInputMap_JavaScriptObject_MapMixin: function _MidiInputMap_JavaScriptObject_MapMixin() {
    },
    _MidiOutputMap_JavaScriptObject_MapMixin: function _MidiOutputMap_JavaScriptObject_MapMixin() {
    },
    _MimeTypeArray_JavaScriptObject_ListMixin: function _MimeTypeArray_JavaScriptObject_ListMixin() {
    },
    _MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin: function _MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin: function _NodeList_JavaScriptObject_ListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _PluginArray_JavaScriptObject_ListMixin: function _PluginArray_JavaScriptObject_ListMixin() {
    },
    _PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin: function _PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _RtcStatsReport_JavaScriptObject_MapMixin: function _RtcStatsReport_JavaScriptObject_MapMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin: function _SourceBufferList_EventTarget_ListMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: function _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _SpeechGrammarList_JavaScriptObject_ListMixin: function _SpeechGrammarList_JavaScriptObject_ListMixin() {
    },
    _SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin: function _SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _Storage_JavaScriptObject_MapMixin: function _Storage_JavaScriptObject_MapMixin() {
    },
    _TextTrackCueList_JavaScriptObject_ListMixin: function _TextTrackCueList_JavaScriptObject_ListMixin() {
    },
    _TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin: function _TextTrackList_EventTarget_ListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: function _TextTrackList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _TouchList_JavaScriptObject_ListMixin: function _TouchList_JavaScriptObject_ListMixin() {
    },
    _TouchList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TouchList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __CssRuleList_JavaScriptObject_ListMixin: function __CssRuleList_JavaScriptObject_ListMixin() {
    },
    __CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin: function __CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __GamepadList_JavaScriptObject_ListMixin: function __GamepadList_JavaScriptObject_ListMixin() {
    },
    __GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin: function __GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __SpeechRecognitionResultList_JavaScriptObject_ListMixin: function __SpeechRecognitionResultList_JavaScriptObject_ListMixin() {
    },
    __SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin: function __SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __StyleSheetList_JavaScriptObject_ListMixin: function __StyleSheetList_JavaScriptObject_ListMixin() {
    },
    __StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin: function __StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _Directory__current(namespace) {
      throw A.wrapException(A.UnsupportedError$("Directory._current"));
    },
    _Directory__exists(namespace, path) {
      throw A.wrapException(A.UnsupportedError$("Directory._exists"));
    },
    FileSystemEntity__resolveSymbolicLinks(namespace, path) {
      throw A.wrapException(A.UnsupportedError$("FileSystemEntity._resolveSymbolicLinks"));
    },
    _File__open(namespace, path, mode) {
      throw A.wrapException(A.UnsupportedError$("File._open"));
    },
    _Namespace__namespace() {
      throw A.wrapException(A.UnsupportedError$("_Namespace"));
    },
    _Namespace__namespacePointer() {
      throw A.wrapException(A.UnsupportedError$("_Namespace"));
    },
    _Platform__operatingSystem() {
      throw A.wrapException(A.UnsupportedError$("Platform._operatingSystem"));
    },
    _Platform__environment() {
      throw A.wrapException(A.UnsupportedError$("Platform._environment"));
    },
    _Platform__script() {
      throw A.wrapException(A.UnsupportedError$("Platform._script"));
    },
    InternetAddress_anyIPv4() {
      throw A.wrapException(A.UnsupportedError$("InternetAddress.anyIPv4"));
    },
    ServerSocket__bind(address, port, backlog, shared, v6Only) {
      throw A.wrapException(A.UnsupportedError$("ServerSocket.bind"));
    },
    _StdIOUtils__getStdioOutputStream(fd) {
      throw A.wrapException(A.UnsupportedError$("StdIOUtils._getStdioOutputStream"));
    },
    RawZLibFilter__makeZLibDeflateFilter(gzip, level, windowBits, memLevel, strategy, dictionary, raw) {
      throw A.wrapException(A.UnsupportedError$("_newZLibDeflateFilter"));
    },
    _checkForErrorResponse(response, message, path) {
      var t1;
      if (type$.List_dynamic._is(response) && !J.$eq$(J.$index$asx(response, 0), 0)) {
        t1 = J.getInterceptor$asx(response);
        switch (t1.$index(response, 0)) {
          case 1:
            throw A.wrapException(A.ArgumentError$(message + ": " + path, null));
          case 2:
            throw A.wrapException(A.FileSystemException_FileSystemException$_fromOSError(new A.OSError(A._asString(t1.$index(response, 2)), A._asInt(t1.$index(response, 1))), message, path));
          case 3:
            throw A.wrapException(A.FileSystemException$("File closed", path, null));
          default:
            throw A.wrapException(A.AssertionError$("Unknown error"));
        }
      }
    },
    _ensureFastAndSerializableByteData(buffer, start, end) {
      var $length, newBuffer;
      if (type$.Uint8List._is(buffer) && J.get$lengthInBytes$x(B.NativeUint8List_methods.get$buffer(buffer)) === buffer.length)
        return new A._BufferAndStart(buffer, start);
      $length = end - start;
      newBuffer = new Uint8Array($length);
      B.NativeUint8List_methods.setRange$4(newBuffer, 0, $length, buffer, start);
      return new A._BufferAndStart(newBuffer, 0);
    },
    ZLibEncoder$(gzip, level) {
      if (9 < level)
        A.throwExpression(A.RangeError$range(level, -1, 9, null, null));
      if (B.JSArray_methods.indexOf$1(B.List_Sw6, 0) === -1)
        A.throwExpression(A.ArgumentError$("Unsupported 'strategy'", null));
      return new A.ZLibEncoder(true, level);
    },
    Directory_Directory(path) {
      var t1;
      A.IOOverrides_current();
      A.ArgumentError_checkNotNull(path, "path", type$.String);
      t1 = A.FileSystemEntity__toNullTerminatedUtf8Array(B.C_Utf8Encoder.convert$1(path));
      return new A._Directory(path, t1);
    },
    Directory_current() {
      A.IOOverrides_current();
      A._Directory__current(A._Namespace__namespace());
      return null;
    },
    File_File(path) {
      var t1;
      A.IOOverrides_current();
      A.ArgumentError_checkNotNull(path, "path", type$.String);
      t1 = A.FileSystemEntity__toNullTerminatedUtf8Array(B.C_Utf8Encoder.convert$1(path));
      return new A._File(path, t1);
    },
    FileSystemException$(message, path, osError) {
      return new A.FileSystemException(message, path, osError);
    },
    FileSystemException_FileSystemException$_fromOSError(err, message, path) {
      if ($.$get$Platform_isWindows())
        switch (err.errorCode) {
          case 5:
          case 16:
          case 19:
          case 24:
          case 32:
          case 33:
          case 65:
          case 108:
            return new A.PathAccessException(message, path, err);
          case 80:
          case 183:
            return new A.PathExistsException(message, path, err);
          case 2:
          case 3:
          case 15:
          case 123:
          case 18:
          case 53:
          case 67:
          case 161:
          case 206:
            return new A.PathNotFoundException(message, path, err);
          default:
            return new A.FileSystemException(message, path, err);
        }
      else
        switch (err.errorCode) {
          case 1:
          case 13:
            return new A.PathAccessException(message, path, err);
          case 17:
            return new A.PathExistsException(message, path, err);
          case 2:
            return new A.PathNotFoundException(message, path, err);
          default:
            return new A.FileSystemException(message, path, err);
        }
    },
    _File__namespacePointer() {
      return A._Namespace__namespacePointer();
    },
    _File__dispatchWithNamespace(request, data) {
      B.JSArray_methods.$indexSet(data, 0, A._File__namespacePointer());
    },
    FileSystemEntity__toNullTerminatedUtf8Array(l) {
      var t2, tmp,
        t1 = l.length;
      if (t1 !== 0)
        t2 = !B.NativeUint8List_methods.get$isEmpty(l) && !J.$eq$(B.NativeUint8List_methods.get$last(l), 0);
      else
        t2 = true;
      if (t2) {
        tmp = new Uint8Array(t1 + 1);
        B.NativeUint8List_methods.setRange$3(tmp, 0, t1, l);
        return tmp;
      } else
        return l;
    },
    IOOverrides_current() {
      var t1 = $.Zone__current.$index(0, $.$get$_ioOverridesToken());
      if (t1 == null)
        t1 = null;
      return type$.nullable_IOOverrides._as(t1);
    },
    Platform_script() {
      return A._Platform_script();
    },
    _Platform_operatingSystem() {
      return A._Platform__operatingSystem();
    },
    _Platform_script() {
      return A._Platform__script();
    },
    _Platform_environment() {
      var t1 = $._Platform__environmentCache;
      if (t1 == null)
        A._Platform__environment();
      t1.toString;
      type$.Map_String_String._as(t1);
      return t1;
    },
    ServerSocket_bind(address, port, backlog, shared, v6Only) {
      var t1;
      A.IOOverrides_current();
      t1 = A.ServerSocket__bind(address, port, backlog, true, false);
      return t1;
    },
    stderr() {
      A.IOOverrides_current();
      var t1 = $.$get$_stderr();
      return t1;
    },
    OSError: function OSError(t0, t1) {
      this.message = t0;
      this.errorCode = t1;
    },
    _BufferAndStart: function _BufferAndStart(t0, t1) {
      this.buffer = t0;
      this.start = t1;
    },
    ZLibEncoder: function ZLibEncoder(t0, t1) {
      this.gzip = t0;
      this.level = t1;
    },
    _BufferSink: function _BufferSink(t0) {
      this.builder = t0;
    },
    _ZLibEncoderSink: function _ZLibEncoderSink(t0, t1) {
      var _ = this;
      _._filter = t0;
      _._sink = t1;
      _._closed = false;
      _._empty = true;
    },
    _FilterSink: function _FilterSink() {
    },
    _Directory: function _Directory(t0, t1) {
      this._io$_path = t0;
      this._rawPath = t1;
    },
    FileSystemException: function FileSystemException(t0, t1, t2) {
      this.message = t0;
      this.path = t1;
      this.osError = t2;
    },
    PathAccessException: function PathAccessException(t0, t1, t2) {
      this.message = t0;
      this.path = t1;
      this.osError = t2;
    },
    PathExistsException: function PathExistsException(t0, t1, t2) {
      this.message = t0;
      this.path = t1;
      this.osError = t2;
    },
    PathNotFoundException: function PathNotFoundException(t0, t1, t2) {
      this.message = t0;
      this.path = t1;
      this.osError = t2;
    },
    _File: function _File(t0, t1) {
      this._io$_path = t0;
      this._rawPath = t1;
    },
    _File_length_closure: function _File_length_closure(t0) {
      this.$this = t0;
    },
    FileSystemEntity: function FileSystemEntity() {
    },
    HandshakeException: function HandshakeException() {
    },
    SocketOption: function SocketOption() {
    },
    _ReceivePortImpl: function _ReceivePortImpl() {
    },
    _callDartFunctionFast3(callback, arg1, arg2, arg3, $length) {
      type$.Function._as(callback);
      A._asInt($length);
      if ($length >= 3)
        return callback.call$3(arg1, arg2, arg3);
      if ($length === 2)
        return callback.call$2(arg1, arg2);
      if ($length === 1)
        return callback.call$1(arg1);
      return callback.call$0();
    },
    _noJsifyRequired(o) {
      return o == null || A._isBool(o) || typeof o == "number" || typeof o == "string" || type$.Int8List._is(o) || type$.Uint8List._is(o) || type$.Uint8ClampedList._is(o) || type$.Int16List._is(o) || type$.Uint16List._is(o) || type$.Int32List._is(o) || type$.Uint32List._is(o) || type$.Float32List._is(o) || type$.Float64List._is(o) || type$.ByteBuffer._is(o) || type$.ByteData._is(o);
    },
    jsify(object) {
      if (A._noJsifyRequired(object))
        return object;
      return new A.jsify__convert(new A._IdentityHashMap(type$._IdentityHashMap_of_nullable_Object_and_nullable_Object)).call$1(object);
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer, $T), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    jsify__convert: function jsify__convert(t0) {
      this._convertedObjects = t0;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    Length: function Length() {
    },
    LengthList: function LengthList() {
    },
    Number: function Number() {
    },
    NumberList: function NumberList() {
    },
    PointList: function PointList() {
    },
    StringList: function StringList() {
    },
    Transform: function Transform() {
    },
    TransformList: function TransformList() {
    },
    _LengthList_JavaScriptObject_ListMixin: function _LengthList_JavaScriptObject_ListMixin() {
    },
    _LengthList_JavaScriptObject_ListMixin_ImmutableListMixin: function _LengthList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NumberList_JavaScriptObject_ListMixin: function _NumberList_JavaScriptObject_ListMixin() {
    },
    _NumberList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NumberList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _StringList_JavaScriptObject_ListMixin: function _StringList_JavaScriptObject_ListMixin() {
    },
    _StringList_JavaScriptObject_ListMixin_ImmutableListMixin: function _StringList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _TransformList_JavaScriptObject_ListMixin: function _TransformList_JavaScriptObject_ListMixin() {
    },
    _TransformList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TransformList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioParamMap: function AudioParamMap() {
    },
    AudioParamMap_keys_closure: function AudioParamMap_keys_closure(t0) {
      this.keys = t0;
    },
    AudioTrackList: function AudioTrackList() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    _AudioParamMap_JavaScriptObject_MapMixin: function _AudioParamMap_JavaScriptObject_MapMixin() {
    },
    CanonicalizedMap: function CanonicalizedMap() {
    },
    CanonicalizedMap_addAll_closure: function CanonicalizedMap_addAll_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_addEntries_closure: function CanonicalizedMap_addEntries_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_entries_closure: function CanonicalizedMap_entries_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_forEach_closure: function CanonicalizedMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CanonicalizedMap_keys_closure: function CanonicalizedMap_keys_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_map_closure: function CanonicalizedMap_map_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.transform = t1;
      _.K2 = t2;
      _.V2 = t3;
    },
    DefaultEquality: function DefaultEquality(t0) {
      this.$ti = t0;
    },
    IterableEquality: function IterableEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    ListEquality: function ListEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    _UnorderedEquality: function _UnorderedEquality() {
    },
    SetEquality: function SetEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    },
    _MapEntry: function _MapEntry(t0, t1, t2) {
      this.equality = t0;
      this.key = t1;
      this.value = t2;
    },
    MapEquality: function MapEquality(t0, t1, t2) {
      this._keyEquality = t0;
      this._valueEquality = t1;
      this.$ti = t2;
    },
    DeepCollectionEquality: function DeepCollectionEquality() {
    },
    App: function App(t0) {
      this.key = t0;
    },
    AppState: function AppState() {
    },
    AppButton$(href, label) {
      return new A.AppButton(label, href, null);
    },
    AppButton: function AppButton(t0, t1, t2) {
      this.label = t0;
      this.href = t1;
      this.key = t2;
    },
    ContactCard: function ContactCard(t0, t1, t2, t3, t4) {
      var _ = this;
      _.icon = t0;
      _.title = t1;
      _.description = t2;
      _.action = t3;
      _.key = t4;
    },
    Footer: function Footer(t0) {
      this.key = t0;
    },
    NavBar: function NavBar(t0) {
      this.key = t0;
    },
    ProjectCard: function ProjectCard(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.title = t0;
      _.description = t1;
      _.icon = t2;
      _.banner = t3;
      _.url = t4;
      _.key = t5;
    },
    ServiceCard: function ServiceCard(t0, t1, t2) {
      this.icon = t0;
      this.label = t1;
      this.key = t2;
    },
    _prefix0AppButton(c) {
      type$.AppButton._as(c);
      return A.LinkedHashMap_LinkedHashMap$_literal(["label", c.label, "href", c.href, "width", null, "height", null], type$.String, type$.dynamic);
    },
    _prefix1ContactCard(c) {
      type$.ContactCard._as(c);
      return A.LinkedHashMap_LinkedHashMap$_literal(["icon", c.icon, "title", c.title, "description", c.description, "action", c.action], type$.String, type$.dynamic);
    },
    _prefix4ProjectCard(c) {
      type$.ProjectCard._as(c);
      return A.LinkedHashMap_LinkedHashMap$_literal(["title", c.title, "description", c.description, "icon", c.icon, "banner", c.banner, "url", c.url], type$.String, type$.dynamic);
    },
    _prefix5ServiceCard(c) {
      type$.ServiceCard._as(c);
      return A.LinkedHashMap_LinkedHashMap$_literal(["icon", c.icon, "label", c.label], type$.String, type$.dynamic);
    },
    _prefix7AboutMeSection(c) {
      type$.AboutMeSection._as(c);
      return A.LinkedHashMap_LinkedHashMap$_literal(["about", c.about, "basic", c.basic], type$.String, type$.dynamic);
    },
    defaultJasprOptions_closure: function defaultJasprOptions_closure() {
    },
    _$$AboutImplFromJson(json) {
      var t1 = J.getInterceptor$asx(json),
        t2 = A._asString(t1.$index(json, "description")),
        t3 = type$.List_dynamic,
        t4 = J.map$1$1$ax(t3._as(t1.$index(json, "tech")), new A._$$AboutImplFromJson_closure(), type$.String);
      t4 = A.List_List$_of(t4, t4.$ti._eval$1("ListIterable.E"));
      t3 = J.map$1$1$ax(t3._as(t1.$index(json, "works")), new A._$$AboutImplFromJson_closure0(), type$.Work);
      t3 = A.List_List$_of(t3, t3.$ti._eval$1("ListIterable.E"));
      return new A._$AboutImpl(t2, t4, t3, A._asString(t1.$index(json, "heading")));
    },
    _$$AboutImplToJson(instance) {
      var t1 = instance.get$tech(),
        t2 = J.map$1$1$ax(instance.get$works(), new A._$$AboutImplToJson_closure(), type$.Map_String_dynamic);
      t2 = A.List_List$_of(t2, t2.$ti._eval$1("ListIterable.E"));
      return A.LinkedHashMap_LinkedHashMap$_literal(["description", instance.description, "tech", t1, "works", t2, "heading", instance.heading], type$.String, type$.dynamic);
    },
    About: function About() {
    },
    _$About: function _$About() {
    },
    _$AboutImpl: function _$AboutImpl(t0, t1, t2, t3) {
      var _ = this;
      _.description = t0;
      _._tech = t1;
      _._works = t2;
      _.heading = t3;
    },
    _$$AboutImplFromJson_closure: function _$$AboutImplFromJson_closure() {
    },
    _$$AboutImplFromJson_closure0: function _$$AboutImplFromJson_closure0() {
    },
    _$$AboutImplToJson_closure: function _$$AboutImplToJson_closure() {
    },
    _About_Object__$About: function _About_Object__$About() {
    },
    _$$BasicImplFromJson(json) {
      var t1 = J.getInterceptor$asx(json),
        t2 = A._asString(t1.$index(json, "firstName")),
        t3 = A._asString(t1.$index(json, "lastName")),
        t4 = B.JSNumber_methods.toInt$0(A._asNum(t1.$index(json, "age"))),
        t5 = A._asString(t1.$index(json, "email")),
        t6 = A._asString(t1.$index(json, "phone")),
        t7 = A._asString(t1.$index(json, "address")),
        t8 = J.map$1$1$ax(type$.List_dynamic._as(t1.$index(json, "photos")), new A._$$BasicImplFromJson_closure(), type$.String);
      t8 = A.List_List$_of(t8, t8.$ti._eval$1("ListIterable.E"));
      return new A._$BasicImpl(t2, t3, t4, t5, t6, t7, t8, A._asString(t1.$index(json, "resume")));
    },
    _$$BasicImplToJson(instance) {
      return A.LinkedHashMap_LinkedHashMap$_literal(["firstName", instance.firstName, "lastName", instance.lastName, "age", instance.age, "email", instance.email, "phone", instance.phone, "address", instance.address, "photos", instance.get$photos(), "resume", instance.resume], type$.String, type$.dynamic);
    },
    Basic: function Basic() {
    },
    _$Basic: function _$Basic() {
    },
    _$BasicImpl: function _$BasicImpl(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.firstName = t0;
      _.lastName = t1;
      _.age = t2;
      _.email = t3;
      _.phone = t4;
      _.address = t5;
      _._photos = t6;
      _.resume = t7;
    },
    _$$BasicImplFromJson_closure: function _$$BasicImplFromJson_closure() {
    },
    _Basic_Object__$Basic: function _Basic_Object__$Basic() {
    },
    Contact: function Contact() {
    },
    _$Contact: function _$Contact() {
    },
    _$ContactImpl: function _$ContactImpl(t0, t1, t2, t3) {
      var _ = this;
      _.icon = t0;
      _.title = t1;
      _.description = t2;
      _.action = t3;
    },
    _Contact_Object__$Contact: function _Contact_Object__$Contact() {
    },
    _$$DataImplFromJson(json) {
      var t6, t7,
        t1 = J.getInterceptor$asx(json),
        t2 = type$.Map_String_dynamic,
        t3 = A._$$BasicImplFromJson(t2._as(t1.$index(json, "basic"))),
        t4 = type$.List_dynamic,
        t5 = J.map$1$1$ax(t4._as(t1.$index(json, "socials")), new A._$$DataImplFromJson_closure(), type$.Social);
      t5 = A.List_List$_of(t5, t5.$ti._eval$1("ListIterable.E"));
      t2 = A._$$AboutImplFromJson(t2._as(t1.$index(json, "about")));
      t6 = J.map$1$1$ax(t4._as(t1.$index(json, "services")), new A._$$DataImplFromJson_closure0(), type$.ServiceData);
      t6 = A.List_List$_of(t6, t6.$ti._eval$1("ListIterable.E"));
      t7 = J.map$1$1$ax(t4._as(t1.$index(json, "projects")), new A._$$DataImplFromJson_closure1(), type$.Project);
      t7 = A.List_List$_of(t7, t7.$ti._eval$1("ListIterable.E"));
      t1 = J.map$1$1$ax(t4._as(t1.$index(json, "contact")), new A._$$DataImplFromJson_closure2(), type$.Contact);
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("ListIterable.E"));
      return new A._$DataImpl(t3, t5, t2, t6, t7, t1);
    },
    _$$DataImplToJson(instance) {
      var t4, t5, t6,
        t1 = A._$$BasicImplToJson(instance.basic),
        t2 = type$.Map_String_dynamic,
        t3 = J.map$1$1$ax(instance.get$socials(), new A._$$DataImplToJson_closure(), t2);
      t3 = A.List_List$_of(t3, t3.$ti._eval$1("ListIterable.E"));
      t4 = A._$$AboutImplToJson(instance.about);
      t5 = J.map$1$1$ax(instance.get$services(), new A._$$DataImplToJson_closure0(), t2);
      t5 = A.List_List$_of(t5, t5.$ti._eval$1("ListIterable.E"));
      t6 = J.map$1$1$ax(instance.get$projects(), new A._$$DataImplToJson_closure1(), t2);
      t6 = A.List_List$_of(t6, t6.$ti._eval$1("ListIterable.E"));
      t2 = J.map$1$1$ax(instance.get$contact(), new A._$$DataImplToJson_closure2(), t2);
      t2 = A.List_List$_of(t2, t2.$ti._eval$1("ListIterable.E"));
      return A.LinkedHashMap_LinkedHashMap$_literal(["basic", t1, "socials", t3, "about", t4, "services", t5, "projects", t6, "contact", t2], type$.String, type$.dynamic);
    },
    Data: function Data() {
    },
    _$Data: function _$Data() {
    },
    _$DataImpl: function _$DataImpl(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.basic = t0;
      _._socials = t1;
      _.about = t2;
      _._services = t3;
      _._projects = t4;
      _._contact = t5;
    },
    _$$DataImplFromJson_closure: function _$$DataImplFromJson_closure() {
    },
    _$$DataImplFromJson_closure0: function _$$DataImplFromJson_closure0() {
    },
    _$$DataImplFromJson_closure1: function _$$DataImplFromJson_closure1() {
    },
    _$$DataImplFromJson_closure2: function _$$DataImplFromJson_closure2() {
    },
    _$$DataImplToJson_closure: function _$$DataImplToJson_closure() {
    },
    _$$DataImplToJson_closure0: function _$$DataImplToJson_closure0() {
    },
    _$$DataImplToJson_closure1: function _$$DataImplToJson_closure1() {
    },
    _$$DataImplToJson_closure2: function _$$DataImplToJson_closure2() {
    },
    _Data_Object__$Data: function _Data_Object__$Data() {
    },
    Project: function Project() {
    },
    _$Project: function _$Project() {
    },
    _$ProjectImpl: function _$ProjectImpl(t0, t1, t2, t3, t4) {
      var _ = this;
      _.banner = t0;
      _.icon = t1;
      _.title = t2;
      _.description = t3;
      _.link = t4;
    },
    _Project_Object__$Project: function _Project_Object__$Project() {
    },
    ServiceData: function ServiceData() {
    },
    _$ServiceData: function _$ServiceData() {
    },
    _$ServiceDataImpl: function _$ServiceDataImpl(t0, t1) {
      this.icon = t0;
      this.title = t1;
    },
    _ServiceData_Object__$ServiceData: function _ServiceData_Object__$ServiceData() {
    },
    Social: function Social() {
    },
    _$Social: function _$Social() {
    },
    _$SocialImpl: function _$SocialImpl(t0, t1) {
      this.icon = t0;
      this.url = t1;
    },
    _Social_Object__$Social: function _Social_Object__$Social() {
    },
    Work: function Work() {
    },
    _$Work: function _$Work() {
    },
    _$WorkImpl: function _$WorkImpl(t0, t1, t2) {
      this.image = t0;
      this.url = t1;
      this.height = t2;
    },
    _Work_Object__$Work: function _Work_Object__$Work() {
    },
    Home: function Home(t0) {
      this.key = t0;
    },
    AboutMeSection: function AboutMeSection(t0, t1, t2) {
      this.about = t0;
      this.basic = t1;
      this.key = t2;
    },
    BasicInfoSection: function BasicInfoSection(t0, t1, t2) {
      this.basic = t0;
      this.socials = t1;
      this.key = t2;
    },
    ContactSection: function ContactSection(t0, t1) {
      this.contacts = t0;
      this.key = t1;
    },
    ProjectsSections: function ProjectsSections(t0, t1) {
      this.projects = t0;
      this.key = t1;
    },
    ServicesSection: function ServicesSection(t0, t1) {
      this.services = t0;
      this.key = t1;
    },
    EqualUnmodifiableListView: function EqualUnmodifiableListView(t0, t1, t2) {
      this._freezed_annotation$_source = t0;
      this._collection$_source = t1;
      this.$ti = t2;
    },
    BaseClient: function BaseClient() {
    },
    BaseRequest: function BaseRequest() {
    },
    BaseRequest_closure: function BaseRequest_closure() {
    },
    BaseRequest_closure0: function BaseRequest_closure0() {
    },
    BaseResponse: function BaseResponse() {
    },
    _rethrowAsClientException(e, st, request) {
      var message;
      if (!(e instanceof A.ClientException)) {
        message = J.toString$0$(e);
        if (B.JSString_methods.startsWith$1(message, "TypeError: "))
          message = B.JSString_methods.substring$1(message, 11);
        e = new A.ClientException(message, request.url);
      }
      A.Error_throwWithStackTrace(e, st);
    },
    _readBody(request, response) {
      return A._readBody$body(request, response);
    },
    _readBody$body(request, response) {
      var $async$_readBody = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        switch ($async$errorCode) {
          case 2:
            $async$next = $async$nextWhenCanceled;
            $async$goto = $async$next.pop();
            break;
          case 1:
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              t1 = type$.nullable_JSObject._as(response.body);
              bodyStreamReader = t1 == null ? null : type$.JSObject._as(t1.getReader());
              if (bodyStreamReader == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              isDone = false;
              _box_0.isError = false;
              $async$handler = 4;
              t1 = type$.NativeUint8List, t2 = type$.JSObject;
            case 7:
              // for condition
              // trivial condition
              $async$goto = 9;
              return A._asyncStarHelper(A.promiseToFuture(t2._as(bodyStreamReader.read()), t2), $async$_readBody, $async$controller);
            case 9:
              // returning from await.
              chunk = $async$result;
              if (A._asBool(chunk.done)) {
                isDone = true;
                // goto after for
                $async$goto = 8;
                break;
              }
              t3 = chunk.value;
              t3.toString;
              $async$goto = 10;
              $async$nextWhenCanceled = [1, 5];
              return A._asyncStarHelper(A._IterationMarker_yieldSingle(t1._as(t3)), $async$_readBody, $async$controller);
            case 10:
              // after yield
              // goto for condition
              $async$goto = 7;
              break;
            case 8:
              // after for
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              e = A.unwrapException($async$exception);
              st = A.getTraceFromException($async$exception);
              _box_0.isError = true;
              A._rethrowAsClientException(e, st, request);
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              $async$goto = !isDone ? 11 : 12;
              break;
            case 11:
              // then
              $async$handler = 14;
              $async$goto = 17;
              return A._asyncStarHelper(A.promiseToFuture(type$.JSObject._as(bodyStreamReader.cancel()), type$.nullable_Object).catchError$2$test(new A._readBody_closure(), new A._readBody_closure0(_box_0)), $async$_readBody, $async$controller);
            case 17:
              // returning from await.
              $async$handler = 2;
              // goto after finally
              $async$goto = 16;
              break;
            case 14:
              // catch
              $async$handler = 13;
              $async$exception1 = $async$errorStack.pop();
              e0 = A.unwrapException($async$exception1);
              st0 = A.getTraceFromException($async$exception1);
              if (!_box_0.isError)
                A._rethrowAsClientException(e0, st0, request);
              // goto after finally
              $async$goto = 16;
              break;
            case 13:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 16:
              // after finally
            case 12:
              // join
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncStarHelper(null, 0, $async$controller);
            case 2:
              // rethrow
              return A._asyncStarHelper($async$errorStack.at(-1), 1, $async$controller);
          }
      });
      var $async$goto = 0,
        $async$controller = A._makeAsyncStarStreamController($async$_readBody, type$.List_int),
        $async$nextWhenCanceled, $async$handler = 2, $async$errorStack = [], $async$next = [], isDone, chunk, e, st, e0, st0, t2, t3, exception, _box_0, t1, bodyStreamReader, $async$exception, $async$exception1;
      return A._streamOfController($async$controller);
    },
    BrowserClient: function BrowserClient(t0) {
      this._abortController = t0;
      this._isClosed = false;
    },
    BrowserClient_send_closure: function BrowserClient_send_closure(t0) {
      this.headers = t0;
    },
    _readBody_closure: function _readBody_closure() {
    },
    _readBody_closure0: function _readBody_closure0(t0) {
      this._box_0 = t0;
    },
    ByteStream: function ByteStream(t0) {
      this._async$_stream = t0;
    },
    ByteStream_toBytes_closure: function ByteStream_toBytes_closure(t0) {
      this.completer = t0;
    },
    ClientException$(message, uri) {
      return new A.ClientException(message, uri);
    },
    ClientException: function ClientException(t0, t1) {
      this.message = t0;
      this.uri = t1;
    },
    StreamedRequest$(method, url) {
      var _null = null,
        t1 = A.StreamController_StreamController(_null, _null, _null, _null, true, type$.List_int),
        t2 = $.$get$BaseRequest__tokenRE();
      if (!t2._nativeRegExp.test(method))
        A.throwExpression(A.ArgumentError$value(method, "method", "Not a valid method"));
      t2 = type$.String;
      return new A.StreamedRequest(t1, method, url, A.LinkedHashMap_LinkedHashMap(new A.BaseRequest_closure(), new A.BaseRequest_closure0(), t2, t2));
    },
    StreamedRequest: function StreamedRequest(t0, t1, t2, t3) {
      var _ = this;
      _._streamed_request$_controller = t0;
      _.method = t1;
      _.url = t2;
      _._followRedirects = true;
      _.headers = t3;
      _._finalized = false;
    },
    StreamedResponse: function StreamedResponse() {
    },
    StreamedResponseV2: function StreamedResponseV2(t0, t1, t2, t3, t4) {
      var _ = this;
      _.stream = t0;
      _.statusCode = t1;
      _.contentLength = t2;
      _.headers = t3;
      _.isRedirect = t4;
    },
    CaseInsensitiveMap$from(other, $V) {
      var t1 = new A.CaseInsensitiveMap(A.case_insensitive_map_CaseInsensitiveMap__canonicalizer$closure(), A.LinkedHashMap_LinkedHashMap$_empty(type$.String, $V._eval$1("MapEntry<String,0>")), $V._eval$1("CaseInsensitiveMap<0>"));
      t1.addAll$1(0, other);
      return t1;
    },
    CaseInsensitiveMap__canonicalizer(key) {
      return A._asString(key).toLowerCase();
    },
    CaseInsensitiveMap: function CaseInsensitiveMap(t0, t1, t2) {
      this._canonicalize = t0;
      this._base = t1;
      this.$ti = t2;
    },
    ChunkedCodingDecoder: function ChunkedCodingDecoder() {
    },
    _Sink: function _Sink(t0, t1) {
      this._decoder$_sink = t0;
      this._decoder$_state = t1;
      this.___Sink__size_A = $;
    },
    _Sink__decode_assertCurrentChar: function _Sink__decode_assertCurrentChar(t0, t1) {
      this._box_0 = t0;
      this.bytes = t1;
    },
    _State: function _State(t0, t1) {
      this.name = t0;
      this._name = t1;
    },
    MediaType_MediaType$parse(mediaType) {
      return A.wrapFormatException("media type", mediaType, new A.MediaType_MediaType$parse_closure(mediaType), type$.MediaType);
    },
    MediaType$(type, subtype, parameters) {
      var t1 = A.CaseInsensitiveMap$from(parameters, type$.String);
      return new A.MediaType(type.toLowerCase(), subtype.toLowerCase(), new A.UnmodifiableMapView(t1, type$.UnmodifiableMapView_String_String));
    },
    MediaType: function MediaType(t0, t1, t2) {
      this.type = t0;
      this.subtype = t1;
      this.parameters = t2;
    },
    MediaType_MediaType$parse_closure: function MediaType_MediaType$parse_closure(t0) {
      this.mediaType = t0;
    },
    MediaType_toString_closure: function MediaType_toString_closure(t0) {
      this.buffer = t0;
    },
    MediaType_toString__closure: function MediaType_toString__closure() {
    },
    expectQuotedString(scanner) {
      var string;
      scanner.expect$2$name($.$get$_quotedString(), "quoted string");
      string = scanner.get$lastMatch().$index(0, 0);
      return A.stringReplaceAllFuncUnchecked(B.JSString_methods.substring$2(string, 1, string.length - 1), $.$get$_quotedPair(), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(new A.expectQuotedString_closure())), null);
    },
    expectQuotedString_closure: function expectQuotedString_closure() {
    },
    BaseDocument: function BaseDocument(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.title = t0;
      _.lang = t1;
      _.charset = t2;
      _.viewport = t3;
      _.meta = t4;
      _.styles = t5;
      _.head = t6;
      _.body = t7;
      _.key = t8;
    },
    HeadDocument: function HeadDocument(t0, t1, t2) {
      this.title = t0;
      this.meta = t1;
      this.key = t2;
    },
    AttachDocument: function AttachDocument(t0, t1, t2, t3) {
      var _ = this;
      _.target = t0;
      _.attributes = t1;
      _.children = t2;
      _.key = t3;
    },
    AttachAdapter: function AttachAdapter(t0) {
      this.entries = t0;
    },
    AttachAdapter_apply_keyFor: function AttachAdapter_apply_keyFor() {
    },
    _AttachChildrenAdapter: function _AttachChildrenAdapter(t0, t1) {
      this.target = t0;
      this.element = t1;
      this.__ElementBoundaryAdapter_range_A = $;
    },
    _AttachAdapter_RenderAdapter_DocumentStructureMixin: function _AttachAdapter_RenderAdapter_DocumentStructureMixin() {
    },
    h1(children, classes) {
      var _null = null;
      return new A.DomComponent("h1", _null, classes, _null, _null, _null, _null, children, _null);
    },
    section(children, classes) {
      var _null = null;
      return new A.DomComponent("section", _null, classes, _null, _null, _null, _null, children, _null);
    },
    div(children, classes, id, styles) {
      var _null = null;
      return new A.DomComponent("div", id, classes, styles, _null, _null, _null, children, _null);
    },
    img(classes, height, src) {
      var _null = null,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      t1.$indexSet(0, "height", "" + height);
      t1.$indexSet(0, "src", src);
      return new A.DomComponent("img", _null, classes, _null, t1, _null, _null, _null, _null);
    },
    a(children, classes, href, styles, target) {
      var _null = null,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      t1.$indexSet(0, "href", href);
      if (target != null)
        t1.$indexSet(0, "target", "_blank");
      return new A.DomComponent("a", _null, classes, styles, t1, _null, _null, children, _null);
    },
    i(children, classes) {
      var _null = null;
      return new A.DomComponent("i", _null, classes, _null, _null, _null, _null, children, _null);
    },
    span(children, classes, id, styles) {
      var _null = null;
      return new A.DomComponent("span", id, classes, styles, _null, _null, _null, children, _null);
    },
    Target: function Target(t0) {
      this._name = t0;
    },
    RawNode_RawNode$withKey(node) {
      var t1;
      $label0$0: {
        if (type$.Text._is(node)) {
          t1 = new A.ValueKey("text", type$.ValueKey_String);
          break $label0$0;
        }
        if (type$.Element._is(node)) {
          t1 = node.tagName;
          t1.toString;
          t1 = new A.ValueKey("element:" + t1, type$.ValueKey_String);
          break $label0$0;
        }
        t1 = null;
        break $label0$0;
      }
      return new A.RawNode(node, t1);
    },
    RawText: function RawText(t0, t1) {
      this.text = t0;
      this.key = t1;
    },
    RawNode: function RawNode(t0, t1) {
      this.node = t0;
      this.key = t1;
    },
    RawNodeElement: function RawNodeElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.RenderObjectElement__renderObject = t0;
      _.RenderObjectElement__dirtyRender = t1;
      _._framework$_children = null;
      _._forgottenChildren = t2;
      _._notificationTree = _._framework$_parent = null;
      _._cachedHash = t3;
      _._depth = null;
      _._component = t4;
      _._owner = _._binding = null;
      _._lifecycleState = t5;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    AllowAll: function AllowAll() {
    },
    Style: function Style(t0, t1) {
      this.styles = t0;
      this.key = t1;
    },
    AppBinding: function AppBinding() {
    },
    _AppBinding_Object_SchedulerBinding: function _AppBinding_Object_SchedulerBinding() {
    },
    JasprOptions$(clients, styles) {
      return new A.JasprOptions(clients, styles);
    },
    ClientTarget$($name, params, $T) {
      return new A.ClientTarget($name, params, $T._eval$1("ClientTarget<0>"));
    },
    JasprOptions: function JasprOptions(t0, t1) {
      this.clients = t0;
      this.styles = t1;
    },
    ClientTarget: function ClientTarget(t0, t1, t2) {
      this.name = t0;
      this.params = t1;
      this.$ti = t2;
    },
    SchedulerPhase: function SchedulerPhase(t0) {
      this._name = t0;
    },
    SchedulerBinding: function SchedulerBinding() {
    },
    SchedulerBinding_scheduleBuild_closure: function SchedulerBinding_scheduleBuild_closure(t0, t1) {
      this.$this = t0;
      this.buildCallback = t1;
    },
    _extension_0__toCssWithParent(_this, indent, $parent) {
      var t1 = _this.selector.selector;
      if (B.JSString_methods.startsWith$1(t1, "&") || $parent.length === 0)
        t1 = A.stringReplaceAllUnchecked(t1, "&", $parent);
      else
        t1 = $parent + " " + t1;
      return new A.BlockStyleRule(new A.Selector(t1), _this.styles).toCss$1(indent);
    },
    CssUtility: function CssUtility() {
    },
    NestedStyleRule: function NestedStyleRule(t0, t1) {
      this._self = t0;
      this._children = t1;
    },
    _NestedStyleRule_Object_StylesMixin: function _NestedStyleRule_Object_StylesMixin() {
    },
    ImageStyle$url(url) {
      return new A.ImageStyle("url(" + url + ")");
    },
    ImageStyle: function ImageStyle(t0) {
      this.value = t0;
    },
    BackgroundSize: function BackgroundSize() {
    },
    _CircularBorderRadius$(radius) {
      return new A._CircularBorderRadius(radius);
    },
    _BoxShadow$($blur, color, offsetX, offsetY, spread) {
      return new A._BoxShadow(offsetX, offsetY, $blur, spread, color);
    },
    _AllBorder: function _AllBorder(t0) {
      this.side = t0;
    },
    BorderSide: function BorderSide(t0, t1) {
      this.color = t0;
      this.width = t1;
    },
    BorderStyle: function BorderStyle(t0) {
      this._name = t0;
    },
    _CircularBorderRadius: function _CircularBorderRadius(t0) {
      this.radius = t0;
    },
    _BoxShadow: function _BoxShadow(t0, t1, t2, t3, t4) {
      var _ = this;
      _.offsetX = t0;
      _.offsetY = t1;
      _.blur = t2;
      _.spread = t3;
      _.color = t4;
    },
    Cursor0: function Cursor0() {
    },
    _HexColor: function _HexColor(t0) {
      this.hex = t0;
    },
    _NamedColor: function _NamedColor(t0) {
      this.name = t0;
    },
    _QuadEdgeInsets$only(bottom, left, right, $top) {
      return new A._QuadEdgeInsets(left, $top, right, bottom);
    },
    _AllEdgeInsets$(_value) {
      return new A._AllEdgeInsets(_value);
    },
    _SymmetricEdgeInsets$(horizontal, vertical) {
      return new A._SymmetricEdgeInsets(vertical, horizontal);
    },
    EdgeInsets: function EdgeInsets() {
    },
    _QuadEdgeInsets: function _QuadEdgeInsets(t0, t1, t2, t3) {
      var _ = this;
      _._left = t0;
      _._top = t1;
      _._right = t2;
      _._bottom = t3;
    },
    _AllEdgeInsets: function _AllEdgeInsets(t0) {
      this._value = t0;
    },
    _SymmetricEdgeInsets: function _SymmetricEdgeInsets(t0, t1) {
      this.vertical = t0;
      this.horizontal = t1;
    },
    AlignSelf: function AlignSelf(t0, t1) {
      this.value = t0;
      this._name = t1;
    },
    FlexDirection: function FlexDirection(t0, t1) {
      this.value = t0;
      this._name = t1;
    },
    FlexWrap: function FlexWrap(t0) {
      this._name = t0;
    },
    JustifyContent: function JustifyContent(t0, t1) {
      this.value = t0;
      this._name = t1;
    },
    AlignItems: function AlignItems(t0, t1) {
      this.value = t0;
      this._name = t1;
    },
    _Position: function _Position() {
    },
    _Positioned: function _Positioned(t0) {
      this.value = t0;
    },
    FontFamily$(value) {
      return new A.FontFamily("'" + value + "'");
    },
    TextAlign: function TextAlign(t0) {
      this._name = t0;
    },
    FontFamily: function FontFamily(t0) {
      this.value = t0;
    },
    _ListFontFamily: function _ListFontFamily() {
    },
    _ListFontFamily_value_closure: function _ListFontFamily_value_closure() {
    },
    FontWeight: function FontWeight(t0, t1) {
      this.value = t0;
      this._name = t1;
    },
    TextDecoration: function TextDecoration() {
    },
    _Transition$(property, duration) {
      return new A._Transition(property, duration);
    },
    _Transition: function _Transition(t0, t1) {
      this.property = t0;
      this.duration = t1;
    },
    UnitExt_get_percent(_this) {
      return new A._PercentUnit("%", _this);
    },
    UnitExt_get_px(_this) {
      return new A._PixelsUnit("px", _this);
    },
    UnitExt_get_vw(_this) {
      return new A._VwUnit("vw", _this);
    },
    UnitExt_get_vh(_this) {
      return new A._VhUnit("vh", _this);
    },
    NumberString_get_numstr(_this) {
      return B.JSNumber_methods.roundToDouble$0(_this) === _this ? B.JSInt_methods.toString$0(B.JSNumber_methods.round$0(_this)) : B.JSNumber_methods.toString$0(_this);
    },
    _ZeroUnit: function _ZeroUnit() {
    },
    _Unit: function _Unit() {
    },
    _PercentUnit: function _PercentUnit(t0, t1) {
      this._unit = t0;
      this._unit$_value = t1;
    },
    _PixelsUnit: function _PixelsUnit(t0, t1) {
      this._unit = t0;
      this._unit$_value = t1;
    },
    _RemUnit: function _RemUnit(t0, t1) {
      this._unit = t0;
      this._unit$_value = t1;
    },
    _VwUnit: function _VwUnit(t0, t1) {
      this._unit = t0;
      this._unit$_value = t1;
    },
    _VhUnit: function _VhUnit(t0, t1) {
      this._unit = t0;
      this._unit$_value = t1;
    },
    StyleRulesRender_render(_this) {
      var t1, t2, output,
        imports = new A.StringBuffer(""),
        rules = new A.StringBuffer("");
      for (t1 = J.get$iterator$ax(_this); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        output = t2.toCss$0() + "\n";
        if (t2 instanceof A.ImportStyleRule)
          imports._contents += output;
        else
          rules._contents += output;
      }
      t1 = imports._contents;
      t2 = rules._contents;
      return B.JSString_methods.trimRight$0((t1.charCodeAt(0) == 0 ? t1 : t1) + (t2.charCodeAt(0) == 0 ? t2 : t2));
    },
    MediaStyleRule$(query, styles) {
      return new A.MediaStyleRule(query, styles);
    },
    _MediaRuleQuery$screen(maxWidth) {
      return new A._MediaRuleQuery(maxWidth);
    },
    FontFaceStyleRule$(family, style, url) {
      return new A.FontFaceStyleRule(family, style, url);
    },
    BlockStyleRule: function BlockStyleRule(t0, t1) {
      this.selector = t0;
      this.styles = t1;
    },
    BlockStyleRule_toCss_closure: function BlockStyleRule_toCss_closure(t0) {
      this.indent = t0;
    },
    MediaStyleRule: function MediaStyleRule(t0, t1) {
      this.query = t0;
      this.styles = t1;
    },
    MediaStyleRule_toCss_closure: function MediaStyleRule_toCss_closure(t0) {
      this.indent = t0;
    },
    _MediaRuleQuery: function _MediaRuleQuery(t0) {
      this.maxWidth = t0;
    },
    ImportStyleRule: function ImportStyleRule(t0) {
      this.url = t0;
    },
    FontFaceStyleRule: function FontFaceStyleRule(t0, t1, t2) {
      this.family = t0;
      this.style = t1;
      this.url = t2;
    },
    Selector: function Selector(t0) {
      this.selector = t0;
    },
    _BoxStyles$(border, boxSizing, cursor, display, height, margin, maxHeight, maxWidth, minHeight, minWidth, opacity, outline, overflow, padding, position, radius, shadow, transform, transition, visibility, width) {
      return new A._BoxStyles(padding, margin, display, boxSizing, width, height, maxWidth, maxHeight, minWidth, minHeight, border, radius, outline, overflow, visibility, position, opacity, transform, shadow, cursor, transition);
    },
    _extension_0__prefixed(_this, prefix) {
      var t1 = type$.String;
      return _this.map$2$1(_this, new A._extension_0__prefixed_closure(prefix), t1, t1);
    },
    _TextStyles$(align, color, decoration, fontFamily, fontSize, fontStyle, fontWeight, indent, letterSpacing, lineHeight, overflow, shadow, transform, whiteSpace, wordSpacing) {
      return new A._TextStyles(color, align, fontFamily, fontStyle, fontSize, fontWeight, decoration, transform, indent, letterSpacing, wordSpacing, lineHeight, shadow, overflow, whiteSpace);
    },
    _BackgroundStyles: function _BackgroundStyles(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.color = t0;
      _.attachment = t1;
      _.clip = t2;
      _.image = t3;
      _.origin = t4;
      _.position = t5;
      _.repeat = t6;
      _.size = t7;
    },
    _BoxStyles: function _BoxStyles(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.padding = t0;
      _.margin = t1;
      _.display = t2;
      _.boxSizing = t3;
      _.width = t4;
      _.height = t5;
      _.maxWidth = t6;
      _.maxHeight = t7;
      _.minWidth = t8;
      _.minHeight = t9;
      _.border = t10;
      _.radius = t11;
      _.outline = t12;
      _.overflow = t13;
      _.visibility = t14;
      _.position = t15;
      _.opacity = t16;
      _.transform = t17;
      _.shadow = t18;
      _.cursor = t19;
      _.transition = t20;
    },
    _extension_0__prefixed_closure: function _extension_0__prefixed_closure(t0) {
      this.prefix = t0;
    },
    _FlexBoxStyles: function _FlexBoxStyles(t0, t1, t2, t3) {
      var _ = this;
      _.direction = t0;
      _.wrap = t1;
      _.justifyContent = t2;
      _.alignItems = t3;
    },
    _FlexItemStyles: function _FlexItemStyles(t0, t1, t2) {
      this.flex = t0;
      this.order = t1;
      this.alignSelf = t2;
    },
    _TextStyles: function _TextStyles(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.color = t0;
      _.align = t1;
      _.fontFamily = t2;
      _.fontStyle = t3;
      _.fontSize = t4;
      _.fontWeight = t5;
      _.decoration = t6;
      _.transform = t7;
      _.indent = t8;
      _.letterSpacing = t9;
      _.wordSpacing = t10;
      _.lineHeight = t11;
      _.shadow = t12;
      _.overflow = t13;
      _.whiteSpace = t14;
    },
    Styles: function Styles() {
    },
    _EmptyStyles: function _EmptyStyles() {
    },
    StylesMixin: function StylesMixin() {
    },
    _CombinedStyles: function _CombinedStyles(t0) {
      this._styles = t0;
    },
    _CombinedStyles_styles_closure: function _CombinedStyles_styles_closure() {
    },
    _Styles_Object_StylesMixin: function _Styles_Object_StylesMixin() {
    },
    _RootElement$(component) {
      var t1 = A.HashSet_HashSet(type$.Element_2),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A._RootElement(null, false, t1, t2, component, B._ElementLifecycle_0);
    },
    Element__sort(a, b) {
      var t2,
        t1 = type$.Element_2;
      t1._as(a);
      t1._as(b);
      t1 = a._depth;
      t1.toString;
      t2 = b._depth;
      t2.toString;
      if (t1 < t2)
        return -1;
      else if (t2 < t1)
        return 1;
      else {
        t1 = b._dirty;
        if (t1 && !a._dirty)
          return -1;
        else if (a._dirty && !t1)
          return 1;
      }
      return 0;
    },
    Element__activateRecursively(element) {
      element.activate$0();
      element.visitChildren$1(A.framework_Element__activateRecursively$closure());
    },
    _InactiveElements__deactivateRecursively(element) {
      element.deactivate$0();
      element.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
    },
    ProxyElement$(component) {
      var t1 = A.HashSet_HashSet(type$.Element_2),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.ProxyElement(t1, t2, component, B._ElementLifecycle_0);
    },
    BuildOwner: function BuildOwner() {
    },
    BuildableElement: function BuildableElement() {
    },
    ComponentsBinding: function ComponentsBinding() {
    },
    ComponentsBinding_attachRootComponent_closure: function ComponentsBinding_attachRootComponent_closure(t0, t1, t2) {
      this.$this = t0;
      this.buildOwner = t1;
      this.app = t2;
    },
    _Root: function _Root(t0, t1, t2) {
      this.child = t0;
      this.children = t1;
      this.key = t2;
    },
    _RootElement: function _RootElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.RenderObjectElement__renderObject = t0;
      _.RenderObjectElement__dirtyRender = t1;
      _._framework$_children = null;
      _._forgottenChildren = t2;
      _._notificationTree = _._framework$_parent = null;
      _._cachedHash = t3;
      _._depth = null;
      _._component = t4;
      _._owner = _._binding = null;
      _._lifecycleState = t5;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    DomComponent: function DomComponent(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.tag = t0;
      _.id = t1;
      _.classes = t2;
      _.styles = t3;
      _.attributes = t4;
      _.events = t5;
      _.child = t6;
      _.children = t7;
      _.key = t8;
    },
    DomElement: function DomElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._wrappingElement = null;
      _.RenderObjectElement__renderObject = t0;
      _.RenderObjectElement__dirtyRender = t1;
      _._framework$_children = null;
      _._forgottenChildren = t2;
      _._notificationTree = _._framework$_parent = null;
      _._cachedHash = t3;
      _._depth = null;
      _._component = t4;
      _._owner = _._binding = null;
      _._lifecycleState = t5;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    Text: function Text(t0, t1) {
      this.text = t0;
      this.key = t1;
    },
    TextElement: function TextElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderObjectElement__renderObject = t0;
      _.RenderObjectElement__dirtyRender = t1;
      _._notificationTree = _._framework$_parent = null;
      _._cachedHash = t2;
      _._depth = null;
      _._component = t3;
      _._owner = _._binding = null;
      _._lifecycleState = t4;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    Component: function Component() {
    },
    _ElementLifecycle: function _ElementLifecycle(t0) {
      this._name = t0;
    },
    Element: function Element() {
    },
    Element_updateChildren_replaceWithNullIfForgotten: function Element_updateChildren_replaceWithNullIfForgotten(t0) {
      this.forgottenChildren = t0;
    },
    Element__updateDepth_closure: function Element__updateDepth_closure(t0) {
      this.expectedDepth = t0;
    },
    Element_rebuild_closure: function Element_rebuild_closure(t0) {
      this.$this = t0;
    },
    Element_detachRenderObject_closure: function Element_detachRenderObject_closure() {
    },
    Element__updateAncestorSiblingRecursively_closure: function Element__updateAncestorSiblingRecursively_closure() {
    },
    _InactiveElements: function _InactiveElements(t0) {
      this._framework$_elements = t0;
    },
    _InactiveElements__unmount_closure: function _InactiveElements__unmount_closure(t0) {
      this.$this = t0;
    },
    Key: function Key() {
    },
    LocalKey: function LocalKey() {
    },
    ValueKey: function ValueKey(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    GlobalKey: function GlobalKey(t0) {
      this.$ti = t0;
    },
    ObserverComponent: function ObserverComponent() {
    },
    ObserverElement: function ObserverElement() {
    },
    ProxyComponent: function ProxyComponent() {
    },
    ProxyElement: function ProxyElement(t0, t1, t2, t3) {
      var _ = this;
      _._framework$_children = null;
      _._forgottenChildren = t0;
      _._notificationTree = _._framework$_parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._owner = _._binding = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    LeafElement: function LeafElement() {
    },
    RenderObject: function RenderObject() {
    },
    BuildableRenderObjectElement: function BuildableRenderObjectElement() {
    },
    ProxyRenderObjectElement: function ProxyRenderObjectElement() {
    },
    LeafRenderObjectElement: function LeafRenderObjectElement() {
    },
    RenderObjectElement: function RenderObjectElement() {
    },
    StatefulComponent: function StatefulComponent() {
    },
    State: function State() {
    },
    StatefulElement: function StatefulElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._framework$_state = t0;
      _._asyncInitState = null;
      _._didChangeDependencies = false;
      _._framework$_children = null;
      _._forgottenChildren = t1;
      _._notificationTree = _._framework$_parent = null;
      _._cachedHash = t2;
      _._depth = null;
      _._component = t3;
      _._owner = _._binding = null;
      _._lifecycleState = t4;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    StatelessComponent: function StatelessComponent() {
    },
    StatelessElement: function StatelessElement(t0, t1, t2, t3) {
      var _ = this;
      _._framework$_children = _._asyncFirstBuild = null;
      _._forgottenChildren = t0;
      _._notificationTree = _._framework$_parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._owner = _._binding = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    ClientComponentAdapter: function ClientComponentAdapter(t0, t1, t2) {
      var _ = this;
      _.name = t0;
      _.data = t1;
      _.element = t2;
      _.__ElementBoundaryAdapter_range_A = $;
    },
    ClientComponentRegistry: function ClientComponentRegistry(t0, t1, t2) {
      this.child = t0;
      this.children = t1;
      this.key = t2;
    },
    ClientComponentRegistryElement: function ClientComponentRegistryElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._didAddClientScript = false;
      _._clientElements = t0;
      _._clientTargets = t1;
      _._framework$_children = null;
      _._forgottenChildren = t2;
      _._notificationTree = _._framework$_parent = null;
      _._cachedHash = t3;
      _._depth = null;
      _._component = t4;
      _._owner = _._binding = null;
      _._lifecycleState = t5;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    ClientComponentRegistryElement_willRebuildElement_closure: function ClientComponentRegistryElement_willRebuildElement_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    ClientScriptAdapter: function ClientScriptAdapter(t0) {
      this.clientTargets = t0;
    },
    DocumentStructureMixin: function DocumentStructureMixin() {
    },
    DocumentStructureMixin_createDocumentStructure_closure: function DocumentStructureMixin_createDocumentStructure_closure() {
    },
    DocumentStructureMixin_createDocumentStructure_closure0: function DocumentStructureMixin_createDocumentStructure_closure0() {
    },
    DocumentStructureMixin_createDocumentStructure_closure1: function DocumentStructureMixin_createDocumentStructure_closure1() {
    },
    DocumentAdapter: function DocumentAdapter() {
    },
    DocumentAdapter_apply_closure: function DocumentAdapter_apply_closure() {
    },
    DocumentAdapter_apply_closure0: function DocumentAdapter_apply_closure0() {
    },
    _DocumentAdapter_RenderAdapter_DocumentStructureMixin: function _DocumentAdapter_RenderAdapter_DocumentStructureMixin() {
    },
    ElementBoundaryAdapter: function ElementBoundaryAdapter() {
    },
    GlobalStylesAdapter: function GlobalStylesAdapter(t0) {
      this.binding = t0;
    },
    HeadScopeAdapter: function HeadScopeAdapter() {
    },
    HeadScopeAdapter_apply_closure: function HeadScopeAdapter_apply_closure() {
    },
    HeadScopeAdapter_apply_closure0: function HeadScopeAdapter_apply_closure0() {
    },
    AsyncBuildOwner: function AsyncBuildOwner(t0, t1) {
      var _ = this;
      _._dirtyElements = t0;
      _._isFirstBuild = _._scheduledBuild = false;
      _._inactiveElements = t1;
      _._dirtyElementsNeedsResorting = null;
    },
    AsyncBuildOwner_performRebuildOn_closure: function AsyncBuildOwner_performRebuildOn_closure(t0) {
      this.child = t0;
    },
    AsyncBuildOwner_performRebuildOn_closure0: function AsyncBuildOwner_performRebuildOn_closure0(t0) {
      this.whenComplete = t0;
    },
    AsyncBuildOwner_performRebuildOn_closure1: function AsyncBuildOwner_performRebuildOn_closure1(t0) {
      this.parentAsyncBuildLock = t0;
    },
    AsyncBuildOwner_performRebuildOn_closure2: function AsyncBuildOwner_performRebuildOn_closure2(t0) {
      this.child = t0;
    },
    AsyncBuildOwner_performRebuildOn_closure3: function AsyncBuildOwner_performRebuildOn_closure3(t0) {
      this.child = t0;
    },
    TaskChain: function TaskChain(t0, t1) {
      this._done = t0;
      this._listeners = t1;
    },
    TaskChain_then_closure: function TaskChain_then_closure(t0, t1) {
      this.fn = t0;
      this.c = t1;
    },
    TaskChain_then__closure: function TaskChain_then__closure(t0) {
      this.c = t0;
    },
    TaskChain_then__closure0: function TaskChain_then__closure0(t0) {
      this.c = t0;
    },
    ChildListRange$(start, end) {
      var t1 = new A.ChildListRange(start, end);
      if (start instanceof A.ChildNodeBoundary) {
        start.__ChildNodeBoundary_range_F !== $ && A.throwLateFieldAI("range");
        start.__ChildNodeBoundary_range_F = t1;
      }
      if (end instanceof A.ChildNodeBoundary) {
        end.__ChildNodeBoundary_range_F !== $ && A.throwLateFieldAI("range");
        end.__ChildNodeBoundary_range_F = t1;
      }
      return t1;
    },
    ChildNodeData: function ChildNodeData(t0) {
      this.node = t0;
      this._child_nodes$_next = this._prev = null;
    },
    ChildNodeBoundary: function ChildNodeBoundary(t0) {
      var _ = this;
      _.element = t0;
      _.__ChildNodeBoundary_range_F = $;
      _._child_nodes$_next = _._prev = null;
    },
    BaseChildNode: function BaseChildNode() {
      this._child_nodes$_next = this._prev = null;
    },
    ChildNode: function ChildNode() {
    },
    ChildListRange: function ChildListRange(t0, t1) {
      this.start = t0;
      this.end = t1;
    },
    ChildList: function ChildList(t0, t1) {
      this._child_nodes$_first = t0;
      this._child_nodes$_last = t1;
    },
    ChildList_find_closure: function ChildList_find_closure(t0) {
      this.child = t0;
    },
    ChildList_wrapElement_closure: function ChildList_wrapElement_closure(t0) {
      this._box_0 = t0;
    },
    ChildList_wrapElement_closure0: function ChildList_wrapElement_closure0(t0) {
      this.element = t0;
    },
    ChildList_compareElements_closure: function ChildList_compareElements_closure(t0) {
      this.parentA = t0;
    },
    ChildList_compareElements_closure0: function ChildList_compareElements_closure0(t0) {
      this.parentB = t0;
    },
    ChildListIterator: function ChildListIterator(t0, t1) {
      this._child_nodes$_current = t0;
      this._child_nodes$_end = t1;
      this.__ChildListIterator_current_A = $;
    },
    _ChildList_Object_Iterable: function _ChildList_Object_Iterable() {
    },
    _ChildListRange_ChildNode_Iterable: function _ChildListRange_ChildNode_Iterable() {
    },
    AsyncBuildableElement: function AsyncBuildableElement() {
    },
    AsyncStatelessComponent: function AsyncStatelessComponent() {
    },
    AsyncStatelessElement: function AsyncStatelessElement(t0, t1, t2, t3) {
      var _ = this;
      _.__AsyncBuildableElement__built_A = $;
      _._framework$_children = null;
      _._forgottenChildren = t0;
      _._notificationTree = _._framework$_parent = null;
      _._cachedHash = t1;
      _._depth = null;
      _._component = t2;
      _._owner = _._binding = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = _._observerElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
      _._lastRenderObjectElement = _._lastChild = _._prevAncestorSibling = _._prevSibling = _._parentRenderObjectElement = null;
      _._parentChanged = false;
    },
    MarkupRenderObject$() {
      var t1 = type$.String;
      return new A.MarkupRenderObject(new A.HtmlEscape(B.HtmlEscapeMode_8jw), new A.DomValidator(A.LinkedHashSet_LinkedHashSet$_empty(t1), A.LinkedHashSet_LinkedHashSet$_empty(t1)));
    },
    MarkupRenderObject: function MarkupRenderObject(t0, t1) {
      var _ = this;
      _.rawHtml = _.text = _.attributes = _.styles = _.classes = _.id = _.tag = null;
      _.__MarkupRenderObject_children_FI = $;
      _._attributeEscape = t0;
      _._domValidator = t1;
    },
    MarkupRenderObject_renderToHtml_closure: function MarkupRenderObject_renderToHtml_closure() {
    },
    MarkupRenderObject_renderToHtml_closure0: function MarkupRenderObject_renderToHtml_closure0() {
    },
    DomValidator: function DomValidator(t0, t1) {
      this._tags = t0;
      this._attrs = t1;
    },
    render(setup, requestUri, loadFile, standalone) {
      return A.render$body(setup, requestUri, loadFile, false);
    },
    render$body(setup, requestUri, loadFile, standalone) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, resultCompleter, port, errorPort, errorSub, binding;
      var $async$render = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!$.Jaspr__useIsolates) {
                binding = A.ServerAppBinding$();
                type$.Future_nullable_String_Function_String._as(loadFile);
                setup.call$1(binding);
                $async$returnValue = binding.render$1$standalone(false);
                // goto return
                $async$goto = 1;
                break;
              }
              resultCompleter = new A._SyncCompleter(new A._Future($.Zone__current, type$._Future_String), type$._SyncCompleter_String);
              port = new A._ReceivePortImpl();
              errorPort = new A._ReceivePortImpl();
              errorSub = errorPort.listen$1(new A.render_closure(resultCompleter));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$render, $async$completer);
    },
    render_closure: function render_closure(t0) {
      this.resultCompleter = t0;
    },
    _createSetup(app) {
      var options = $.Jaspr__options;
      return new A._createSetup_closure(options == null ? new A.JasprOptions(null, null) : options, app);
    },
    _createSetup_closure: function _createSetup_closure(t0, t1) {
      this.options = t0;
      this.app = t1;
    },
    ServerApp: function ServerApp(t0) {
      this._setup = t0;
    },
    ServerApp__createServer_closure: function ServerApp__createServer_closure(t0) {
      this.$this = t0;
    },
    ServerAppBinding$() {
      return new A.ServerAppBinding(new A._SyncCompleter(new A._Future($.Zone__current, type$._Future_dynamic), type$._SyncCompleter_dynamic), null, B.SchedulerPhase_0, A._setArrayType([], type$.JSArray_of_void_Function));
    },
    ServerAppBinding: function ServerAppBinding(t0, t1, t2, t3) {
      var _ = this;
      _.rootCompleter = t0;
      _.__ServerAppBinding__adapters_FI = $;
      _._options = null;
      _.ComponentsBinding__rootElement = t1;
      _.SchedulerBinding__schedulerPhase = t2;
      _.SchedulerBinding__postFrameCallbacks = t3;
    },
    RenderAdapter: function RenderAdapter() {
    },
    _ServerAppBinding_AppBinding_ComponentsBinding: function _ServerAppBinding_AppBinding_ComponentsBinding() {
    },
    _findRootProjectDir() {
      A.Platform_script().toFilePath$0();
    },
    staticFileHandler(client) {
      var t1 = $.$get$jasprProxyPort();
      if (t1 != null)
        t1 = A.proxyHandler("http://localhost:" + t1 + "/", client);
      else {
        t1 = $.$get$webDir();
        t1 = A.Directory_Directory(t1).existsSync$0() ? A.createStaticHandler(t1, "index.html") : new A.staticFileHandler_closure();
      }
      return t1;
    },
    createHandler(handle, client) {
      var _null = null,
        staticHandler = A.staticFileHandler(client),
        t1 = A._computeShouldCascade(_null, _null),
        cascade = new A.Cascade(t1, _null, _null),
        t2 = $.$get$jasprProxyPort();
      if (t2 != null)
        cascade = new A.Cascade(t1, cascade, type$.FutureOr_Response_Function_Request._as(A._sseProxyHandler(client, t2)));
      t1 = type$.FutureOr_Response_Function_Request;
      t2 = cascade._shouldCascade;
      return new A.Cascade(t2, new A.Cascade(t2, cascade, t1._as($.$get$gzipMiddleware().call$1(staticHandler))), t1._as(new A.createHandler_closure(staticHandler, handle))).get$handler();
    },
    _proxyFileLoader(req, proxyHandler) {
      return new A._proxyFileLoader_closure(req, proxyHandler);
    },
    _sseProxyHandler(client, webPort) {
      return new A._sseProxyHandler_closure(new A._sseProxyHandler_createSseConnection(A.Uri_parse("http://localhost:" + webPort), client));
    },
    staticFileHandler_closure: function staticFileHandler_closure() {
    },
    createHandler_closure: function createHandler_closure(t0, t1) {
      this.staticHandler = t0;
      this.handle = t1;
    },
    createHandler__closure: function createHandler__closure(t0, t1) {
      this.request = t0;
      this.fileLoader = t1;
    },
    _proxyFileLoader_closure: function _proxyFileLoader_closure(t0, t1) {
      this.req = t0;
      this.proxyHandler = t1;
    },
    _sseProxyHandler_createSseConnection: function _sseProxyHandler_createSseConnection(t0, t1) {
      this.serverUri = t0;
      this.client = t1;
    },
    _sseProxyHandler_createSseConnection_closure: function _sseProxyHandler_createSseConnection_closure(t0, t1) {
      this.req = t0;
      this.serverResponse = t1;
    },
    _sseProxyHandler_createSseConnection__closure: function _sseProxyHandler_createSseConnection__closure(t0, t1) {
      this._box_0 = t0;
      this.sink = t1;
    },
    _sseProxyHandler_createSseConnection__closure0: function _sseProxyHandler_createSseConnection__closure0() {
    },
    _sseProxyHandler_createSseConnection__closure1: function _sseProxyHandler_createSseConnection__closure1(t0, t1) {
      this._box_0 = t0;
      this.sink = t1;
    },
    _sseProxyHandler_closure: function _sseProxyHandler_closure(t0) {
      this.createSseConnection = t0;
    },
    Context_Context(style) {
      return new A.Context(style, ".");
    },
    _parseUri(uri) {
      return uri;
    },
    _validateArgList(method, args) {
      var numArgs, i, numArgs0, message, t1, t2, t3, t4;
      for (numArgs = args.length, i = 1; i < numArgs; ++i) {
        if (args[i] == null || args[i - 1] != null)
          continue;
        for (; numArgs >= 1; numArgs = numArgs0) {
          numArgs0 = numArgs - 1;
          if (args[numArgs0] != null)
            break;
        }
        message = new A.StringBuffer("");
        t1 = "" + (method + "(");
        message._contents = t1;
        t2 = A._arrayInstanceType(args);
        t3 = t2._eval$1("SubListIterable<1>");
        t4 = new A.SubListIterable(args, 0, numArgs, t3);
        t4.SubListIterable$3(args, 0, numArgs, t2._precomputed1);
        t3 = t1 + new A.MappedListIterable(t4, t3._eval$1("String(ListIterable.E)")._as(new A._validateArgList_closure()), t3._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, ", ");
        message._contents = t3;
        message._contents = t3 + ("): part " + (i - 1) + " was null, but part " + i + " was not.");
        throw A.wrapException(A.ArgumentError$(message.toString$0(0), null));
      }
    },
    Context: function Context(t0, t1) {
      this.style = t0;
      this._context$_current = t1;
    },
    Context_joinAll_closure: function Context_joinAll_closure() {
    },
    Context_split_closure: function Context_split_closure() {
    },
    _validateArgList_closure: function _validateArgList_closure() {
    },
    InternalStyle: function InternalStyle() {
    },
    ParsedPath_ParsedPath$parse(path, style) {
      var t1, parts, separators, t2, start, i,
        root = style.getRoot$1(path),
        isRootRelative = style.isRootRelative$1(path);
      if (root != null)
        path = B.JSString_methods.substring$1(path, root.length);
      t1 = type$.JSArray_String;
      parts = A._setArrayType([], t1);
      separators = A._setArrayType([], t1);
      t1 = path.length;
      if (t1 !== 0) {
        if (0 >= t1)
          return A.ioore(path, 0);
        t2 = style.isSeparator$1(path.charCodeAt(0));
      } else
        t2 = false;
      if (t2) {
        if (0 >= t1)
          return A.ioore(path, 0);
        B.JSArray_methods.add$1(separators, path[0]);
        start = 1;
      } else {
        B.JSArray_methods.add$1(separators, "");
        start = 0;
      }
      for (i = start; i < t1; ++i)
        if (style.isSeparator$1(path.charCodeAt(i))) {
          B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(path, start, i));
          B.JSArray_methods.add$1(separators, path[i]);
          start = i + 1;
        }
      if (start < t1) {
        B.JSArray_methods.add$1(parts, B.JSString_methods.substring$1(path, start));
        B.JSArray_methods.add$1(separators, "");
      }
      return new A.ParsedPath(style, root, isRootRelative, parts, separators);
    },
    ParsedPath: function ParsedPath(t0, t1, t2, t3, t4) {
      var _ = this;
      _.style = t0;
      _.root = t1;
      _.isRootRelative = t2;
      _.parts = t3;
      _.separators = t4;
    },
    PathException$(message) {
      return new A.PathException(message);
    },
    PathException: function PathException(t0) {
      this.message = t0;
    },
    Style__getPlatformStyle() {
      var t1, _null = null;
      if (A.Uri_base().get$scheme() !== "file")
        return $.$get$Style_url();
      t1 = A.Uri_base();
      if (!B.JSString_methods.endsWith$1(t1.get$path(t1), "/"))
        return $.$get$Style_url();
      if (A._Uri__Uri(_null, "a/b", _null, _null, _null, _null, _null).toFilePath$0() === "a\\b")
        return $.$get$Style_windows();
      return $.$get$Style_posix();
    },
    Style0: function Style0() {
    },
    PosixStyle: function PosixStyle(t0, t1, t2) {
      this.separatorPattern = t0;
      this.needsSeparatorPattern = t1;
      this.rootPattern = t2;
    },
    UrlStyle: function UrlStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle: function WindowsStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle_absolutePathToUri_closure: function WindowsStyle_absolutePathToUri_closure() {
    },
    serve(handler, address, port, shared) {
      return A.serve$body(handler, address, port, true);
    },
    serve$body(handler, address, port, shared) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.HttpServer),
        $async$returnValue, t1, server;
      var $async$serve = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A.HttpServer_bind(address, port, 0, true);
              $async$goto = 3;
              return A._asyncAwait(t1, $async$serve);
            case 3:
              // returning from await.
              server = $async$result;
              A.serveRequests(server, handler, "Dart with package:shelf");
              $async$returnValue = server;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$serve, $async$completer);
    },
    serveRequests(requests, handler, poweredByHeader) {
      A.catchTopLevelErrors(new A.serveRequests_closure(requests, handler, poweredByHeader), new A.serveRequests_closure0());
    },
    handleRequest(request, handler, poweredByHeader) {
      return A.handleRequest$body(request, handler, poweredByHeader);
    },
    handleRequest$body(request, handler, poweredByHeader) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], error, stackTrace, response, response0, error0, stackTrace0, response1, response2, stackTrace1, error1, stackTrace2, exception, t1, t2, message, shelfRequest, $async$exception, $async$exception1;
      var $async$handleRequest = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              shelfRequest = null;
              $async$handler = 4;
              shelfRequest = A._fromHttpRequest(request);
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              t1 = A.unwrapException($async$exception);
              $async$goto = t1 instanceof A.ArgumentError ? 7 : 9;
              break;
            case 7:
              // then
              error = t1;
              stackTrace = A.getTraceFromException($async$exception);
              t1 = error.name === "method" || error.name === "requestedUri";
              t2 = request.response;
              $async$goto = t1 ? 10 : 12;
              break;
            case 10:
              // then
              A._logTopLevelError("Error parsing request.\n" + A.S(error), stackTrace);
              response = A.Response$(400, "Bad Request", null, null, A.LinkedHashMap_LinkedHashMap$_literal(["content-type", "text/plain"], type$.String, type$.Object));
              $async$goto = 13;
              return A._asyncAwait(A._writeResponse(response, t2, poweredByHeader), $async$handleRequest);
            case 13:
              // returning from await.
              // goto join
              $async$goto = 11;
              break;
            case 12:
              // else
              A._logTopLevelError("Error parsing request.\n" + A.S(error), stackTrace);
              response0 = A.Response$internalServerError();
              $async$goto = 14;
              return A._asyncAwait(A._writeResponse(response0, t2, poweredByHeader), $async$handleRequest);
            case 14:
              // returning from await.
            case 11:
              // join
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              error0 = t1;
              stackTrace0 = A.getTraceFromException($async$exception);
              A._logTopLevelError("Error parsing request.\n" + A.S(error0), stackTrace0);
              response1 = A.Response$internalServerError();
              $async$goto = 15;
              return A._asyncAwait(A._writeResponse(response1, request.response, poweredByHeader), $async$handleRequest);
            case 15:
              // returning from await.
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              response2 = null;
              $async$handler = 17;
              t1 = handler.call$1(shelfRequest);
              t2 = type$.Response;
              $async$goto = 20;
              return A._asyncAwait(type$.Future_Response._is(t1) ? t1 : A._Future$value(t2._as(t1), t2), $async$handleRequest);
            case 20:
              // returning from await.
              response2 = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 19;
              break;
            case 17:
              // catch
              $async$handler = 16;
              $async$exception1 = $async$errorStack.pop();
              t1 = A.unwrapException($async$exception1);
              if (t1 instanceof A.HijackException) {
                stackTrace1 = A.getTraceFromException($async$exception1);
                t1 = shelfRequest._onHijack;
                if (t1 != null)
                  t1 = !t1.called;
                else
                  t1 = false;
                if (!t1) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                response2 = A._logError(shelfRequest, "Caught HijackException, but the request wasn't hijacked.", stackTrace1);
              } else {
                error1 = t1;
                stackTrace2 = A.getTraceFromException($async$exception1);
                response2 = A._logError(shelfRequest, "Error thrown by handler.\n" + A.S(error1), stackTrace2);
              }
              // goto after finally
              $async$goto = 19;
              break;
            case 16:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 19:
              // after finally
              t1 = shelfRequest._onHijack;
              if (t1 != null)
                t1 = !t1.called;
              else
                t1 = false;
              $async$goto = t1 ? 21 : 22;
              break;
            case 21:
              // then
              $async$goto = 23;
              return A._asyncAwait(A._writeResponse(response2, request.response, poweredByHeader), $async$handleRequest);
            case 23:
              // returning from await.
              // goto return
              $async$goto = 1;
              break;
            case 22:
              // join
              message = new A.StringBuffer("");
              t1 = "" + ("Got a response for hijacked request " + shelfRequest.method + " " + shelfRequest.requestedUri.toString$0(0) + ":\n");
              message._contents = t1;
              message._contents = t1 + ("" + response2.statusCode + "\n");
              t1 = response2._headers.get$singleValues();
              J.forEach$1$ax(t1._map, t1.$ti._eval$1("~(MapView.K,MapView.V)")._as(new A.handleRequest_closure(message)));
              throw A.wrapException(A.Exception_Exception(B.JSString_methods.trim$0(message.toString$0(0))));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$handleRequest, $async$completer);
    },
    _fromHttpRequest(request) {
      var t4, t5,
        t1 = type$.String,
        headers = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_String),
        t2 = request._incoming,
        t3 = t2.headers;
      t3.forEach$1(0, new A._fromHttpRequest_closure(headers));
      headers.remove$1(0, "transfer-encoding");
      t2 = t2.method;
      t2.toString;
      t4 = request.get$requestedUri();
      t5 = A._HttpConnectionInfo_create(request._httpConnection._socket);
      t5.toString;
      return A.Request$(t2, t4, request, A.LinkedHashMap_LinkedHashMap$_literal(["shelf.io.connection_info", t5], t1, type$.Object), null, headers, new A._fromHttpRequest_onHijack(request), t3.protocolVersion);
    },
    _writeResponse(response, httpResponse, poweredByHeader) {
      var t3, coding,
        _s22_ = "shelf.io.buffer_output",
        _s17_ = "transfer-encoding",
        _s12_ = "X-Powered-By",
        t1 = response.context._map,
        t2 = J.getInterceptor$x(t1);
      if (t2.containsKey$1(t1, _s22_)) {
        t1 = A._asBool(t2.$index(t1, _s22_));
        if (httpResponse._outgoing.headersWritten)
          A.throwExpression(A.StateError$("Header already sent"));
        httpResponse._bufferOutput = t1;
      }
      t1 = response.statusCode;
      httpResponse.set$statusCode(0, t1);
      t2 = httpResponse.headers;
      t2.set$chunkedTransferEncoding(false);
      t3 = response._headers;
      J.forEach$1$ax(t3._map, A._instanceType(t3)._eval$1("~(MapView.K,MapView.V)")._as(new A._writeResponse_closure(httpResponse)));
      coding = J.$index$asx(t3.get$singleValues()._map, _s17_);
      if (coding != null && !A.equalsIgnoreAsciiCase(coding, "identity")) {
        response = response.change$1$body(B.C_ChunkedCodingDecoder.bind$1(response._body.read$0(0)));
        t2.$set$2(0, _s17_, "chunked");
      } else if (t1 >= 200 && t1 !== 204 && t1 !== 304 && response.get$contentLength() == null && response.get$mimeType(0) !== "multipart/byteranges")
        t2.$set$2(0, _s17_, "chunked");
      t1 = response._headers;
      t3 = J.containsKey$1$x(t1.get$singleValues()._map, _s12_);
      if (!t3)
        t2.$set$2(0, _s12_, poweredByHeader);
      if (!J.containsKey$1$x(t1.get$singleValues()._map, "date"))
        t2.set$date(new A.DateTime(Date.now(), 0, false).toUtc$0());
      return httpResponse.addStream$1(0, response._body.read$0(0)).then$1$1(new A._writeResponse_closure0(httpResponse), type$.void);
    },
    _logError(request, message, stackTrace) {
      var t1 = request.requestedUri,
        t2 = "" + (request.method + " " + t1.get$path(t1));
      t1 = (t1.get$query(t1).length !== 0 ? t2 + ("?" + t1.get$query(t1)) : t2) + "\n" + message;
      A._logTopLevelError(t1.charCodeAt(0) == 0 ? t1 : t1, stackTrace);
      return A.Response$internalServerError();
    },
    _logTopLevelError(message, stackTrace) {
      A.Chain_Chain$forTrace(stackTrace).foldFrames$1(new A._logTopLevelError_closure()).get$terse();
      A.stderr().writeln$1("ERROR - " + A.S(void 1));
    },
    serveRequests_closure: function serveRequests_closure(t0, t1, t2) {
      this.requests = t0;
      this.handler = t1;
      this.poweredByHeader = t2;
    },
    serveRequests__closure: function serveRequests__closure(t0, t1) {
      this.handler = t0;
      this.poweredByHeader = t1;
    },
    serveRequests_closure0: function serveRequests_closure0() {
    },
    handleRequest_closure: function handleRequest_closure(t0) {
      this.message = t0;
    },
    _fromHttpRequest_closure: function _fromHttpRequest_closure(t0) {
      this.headers = t0;
    },
    _fromHttpRequest_onHijack: function _fromHttpRequest_onHijack(t0) {
      this.request = t0;
    },
    _fromHttpRequest_onHijack_closure: function _fromHttpRequest_onHijack_closure(t0) {
      this.callback = t0;
    },
    _writeResponse_closure: function _writeResponse_closure(t0) {
      this.httpResponse = t0;
    },
    _writeResponse_closure0: function _writeResponse_closure0(t0) {
      this.httpResponse = t0;
    },
    _logTopLevelError_closure: function _logTopLevelError_closure() {
    },
    Body_Body(body, encoding) {
      var stream, contentLength, encoded, t1, t2;
      if (body instanceof A.Body)
        return body;
      if (body == null) {
        stream = A.Stream_Stream$fromIterable(A._setArrayType([], type$.JSArray_List_int), type$.List_int);
        contentLength = 0;
      } else if (typeof body == "string")
        if (encoding == null) {
          encoded = B.C_Utf8Encoder.convert$1(body);
          if (!A.Body__isPlainAscii(encoded, body.length))
            encoding = B.C_Utf8Codec;
          contentLength = encoded.length;
          stream = A.Stream_Stream$fromIterable(A._setArrayType([encoded], type$.JSArray_List_int), type$.List_int);
        } else {
          encoded = encoding.encode$1(body);
          contentLength = encoded.length;
          stream = A.Stream_Stream$fromIterable(A._setArrayType([encoded], type$.JSArray_List_int), type$.List_int);
        }
      else {
        t1 = type$.List_int;
        if (t1._is(body)) {
          contentLength = J.get$length$asx(body);
          stream = A.Stream_Stream$value(body, t1);
        } else if (type$.List_dynamic._is(body)) {
          t2 = J.getInterceptor$asx(body);
          contentLength = t2.get$length(body);
          stream = A.Stream_Stream$value(t2.cast$1$0(body, type$.int), t1);
        } else {
          if (type$.Stream_List_int._is(body))
            stream = body;
          else if (body instanceof A.Stream)
            stream = body.cast$1$0(0, t1);
          else
            throw A.wrapException(A.ArgumentError$('Response body "' + A.S(body) + '" must be a String or a Stream.', null));
          contentLength = null;
        }
      }
      return new A.Body(stream, encoding, contentLength);
    },
    Body__isPlainAscii(bytes, codeUnits) {
      if (bytes.length !== codeUnits)
        return false;
      return B.NativeUint8List_methods.every$1(bytes, new A.Body__isPlainAscii_closure());
    },
    Body: function Body(t0, t1, t2) {
      this._stream = t0;
      this.encoding = t1;
      this.contentLength = t2;
    },
    Body__isPlainAscii_closure: function Body__isPlainAscii_closure() {
    },
    _computeShouldCascade(statusCodes, shouldCascade) {
      statusCodes = A._setArrayType([404, 405], type$.JSArray_int);
      return new A._computeShouldCascade_closure(A.LinkedHashSet_LinkedHashSet$from(statusCodes, type$.int));
    },
    Cascade: function Cascade(t0, t1, t2) {
      this._shouldCascade = t0;
      this._parent = t1;
      this._handler = t2;
    },
    Cascade_handler_closure: function Cascade_handler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    Cascade_handler__closure: function Cascade_handler__closure(t0, t1) {
      this.$this = t0;
      this.request = t1;
    },
    Cascade_handler__closure0: function Cascade_handler__closure0(t0, t1, t2) {
      this.$this = t0;
      this.handler = t1;
      this.request = t2;
    },
    _computeShouldCascade_closure: function _computeShouldCascade_closure(t0) {
      this.statusCodeSet = t0;
    },
    Headers_Headers$from(values) {
      var t1 = values.get$isEmpty(values);
      if (t1)
        return $.$get$_emptyHeaders();
      else if (values instanceof A.Headers)
        return values;
      else
        return A.Headers$_(values.get$entries(values));
    },
    Headers$_(entries) {
      var t1 = entries.where$1(0, new A.Headers$__closure()),
        t2 = t1.$ti,
        t3 = new A.CaseInsensitiveMap(A.case_insensitive_map_CaseInsensitiveMap__canonicalizer$closure(), A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.MapEntry_of_String_and_List_String), type$.CaseInsensitiveMap_List_String);
      t3.addEntries$1(0, new A.MappedIterable(t1, t2._eval$1("MapEntry<String,List<String>>(1)")._as(new A.Headers$__closure0()), t2._eval$1("MappedIterable<1,MapEntry<String,List<String>>>")));
      return new A.Headers(t3);
    },
    Headers: function Headers(t0) {
      this.__Headers_singleValues_FI = $;
      this._map = t0;
    },
    Headers_singleValues_closure: function Headers_singleValues_closure() {
    },
    Headers$__closure: function Headers$__closure() {
    },
    Headers$__closure0: function Headers$__closure0() {
    },
    HijackException: function HijackException() {
    },
    _adjustHeaders(headers, body) {
      var t1, newHeaders, t2, t3, t4, explicitOverrideOfZeroLength, coding,
        _s14_ = "content-length",
        _s12_ = "content-type",
        sameEncoding = A._sameEncoding(headers, body);
      if (sameEncoding) {
        t1 = body.contentLength;
        if (t1 == null || A.findHeader(headers, _s14_) === A.S(t1))
          return headers == null ? $.$get$_emptyHeaders() : headers;
        else {
          if (t1 === 0)
            t1 = headers == null || headers.get$isEmpty(headers);
          else
            t1 = false;
          if (t1)
            return $.$get$_defaultHeaders();
        }
      }
      newHeaders = headers == null ? new A.CaseInsensitiveMap(A.case_insensitive_map_CaseInsensitiveMap__canonicalizer$closure(), A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.MapEntry_of_String_and_List_String), type$.CaseInsensitiveMap_List_String) : A.CaseInsensitiveMap$from(headers, type$.List_String);
      if (!sameEncoding) {
        t1 = type$.JSArray_String;
        t2 = body.encoding;
        if (newHeaders.$index(0, _s12_) == null)
          newHeaders.$indexSet(0, _s12_, A._setArrayType(["application/octet-stream; charset=" + t2.get$name(t2)], t1));
        else {
          t3 = A.joinHeaderValues(newHeaders.$index(0, _s12_));
          t3.toString;
          t4 = type$.String;
          newHeaders.$indexSet(0, _s12_, A._setArrayType([A.MediaType_MediaType$parse(t3).change$1$parameters(A.LinkedHashMap_LinkedHashMap$_literal(["charset", t2.get$name(t2)], t4, t4)).toString$0(0)], t1));
        }
      }
      t1 = body.contentLength;
      explicitOverrideOfZeroLength = t1 === 0 && A.findHeader(headers, _s14_) != null;
      if (t1 != null && !explicitOverrideOfZeroLength) {
        coding = A.joinHeaderValues(newHeaders.$index(0, "transfer-encoding"));
        if (coding == null || A.equalsIgnoreAsciiCase(coding, "identity"))
          newHeaders.$indexSet(0, _s14_, A._setArrayType([B.JSInt_methods.toString$0(t1)], type$.JSArray_String));
      }
      return newHeaders;
    },
    _sameEncoding(headers, body) {
      var contentType,
        t1 = body.encoding;
      if (t1 == null)
        return true;
      contentType = A.findHeader(headers, "content-type");
      if (contentType == null)
        return false;
      return A.Encoding_getByName(J.$index$asx(A.MediaType_MediaType$parse(contentType).parameters._map, "charset")) === t1;
    },
    Message: function Message() {
    },
    Request$(method, requestedUri, body, context, encoding, headers, onHijack, protocolVersion) {
      var _null = null,
        t1 = onHijack == null ? _null : new A._OnHijack(onHijack),
        t2 = A._computeUrl(requestedUri, _null, _null),
        t3 = A._computeHandlerPath(requestedUri, _null, _null),
        t4 = A.Body_Body(body, encoding);
      t4 = new A.Request(t2, method, t3, protocolVersion, requestedUri, t1, A.Headers_Headers$from(A._adjustHeaders(A.expandToHeadersAll(headers), t4)), A.ShelfUnmodifiableMap_ShelfUnmodifiableMap(context, false), t4);
      t4.Request$_$10$body$context$encoding$handlerPath$headers$onHijack$protocolVersion$url(method, requestedUri, body, context, encoding, _null, headers, t1, protocolVersion, _null);
      return t4;
    },
    _computeUrl(requestedUri, handlerPath, url) {
      var _null = null,
        t1 = A._Uri__Uri(_null, B.JSString_methods.substring$1(requestedUri.get$path(requestedUri), 1), _null, _null, requestedUri.get$query(requestedUri), _null, _null);
      return t1;
    },
    _computeHandlerPath(requestedUri, handlerPath, url) {
      return "/";
    },
    Request: function Request(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.url = t0;
      _.method = t1;
      _.handlerPath = t2;
      _.protocolVersion = t3;
      _.requestedUri = t4;
      _._onHijack = t5;
      _._ifModifiedSinceCache = null;
      _._headers = t6;
      _.context = t7;
      _._body = t8;
      _._contentTypeCache = _._contentLengthCache = null;
    },
    _OnHijack: function _OnHijack(t0) {
      this._callback = t0;
      this.called = false;
    },
    _OnHijack_run_closure: function _OnHijack_run_closure(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    Response$ok(body, encoding, headers) {
      var t1 = A.Body_Body(body, encoding),
        t2 = A.Headers_Headers$from(A._adjustHeaders(A.expandToHeadersAll(headers), t1)),
        t3 = A.ShelfUnmodifiableMap_ShelfUnmodifiableMap(null, false);
      return new A.Response(200, t2, t3, t1);
    },
    Response$notFound(body) {
      var t1 = A.Body_Body(body, null),
        t2 = A.Headers_Headers$from(A._adjustHeaders(A.expandToHeadersAll(null), t1)),
        t3 = A.ShelfUnmodifiableMap_ShelfUnmodifiableMap(null, false);
      return new A.Response(404, t2, t3, t1);
    },
    Response$internalServerError() {
      var t3,
        t1 = A._adjustErrorHeaders(null),
        t2 = A.Body_Body("Internal Server Error", null);
      t1 = A.Headers_Headers$from(A._adjustHeaders(A.expandToHeadersAll(t1), t2));
      t3 = A.ShelfUnmodifiableMap_ShelfUnmodifiableMap(null, false);
      return new A.Response(500, t1, t3, t2);
    },
    Response$(statusCode, body, context, encoding, headers) {
      var t1 = A.Body_Body(body, encoding),
        t2 = A.Headers_Headers$from(A._adjustHeaders(A.expandToHeadersAll(headers), t1)),
        t3 = A.ShelfUnmodifiableMap_ShelfUnmodifiableMap(context, false);
      if (statusCode < 100)
        A.throwExpression(A.ArgumentError$("Invalid status code: " + statusCode + ".", null));
      return new A.Response(statusCode, t2, t3, t1);
    },
    _adjustErrorHeaders(headers) {
      var t1 = A.addHeader(headers, "content-type", "text/plain");
      return t1;
    },
    Response: function Response(t0, t1, t2, t3) {
      var _ = this;
      _.statusCode = t0;
      _._headers = t1;
      _.context = t2;
      _._body = t3;
      _._contentTypeCache = _._contentLengthCache = null;
    },
    ShelfUnmodifiableMap_ShelfUnmodifiableMap(source, ignoreKeyCase) {
      if (type$.ShelfUnmodifiableMap._is(source))
        return source;
      if (source == null || source.get$isEmpty(source))
        return B._EmptyShelfUnmodifiableMap_Map_empty;
      source = A.LinkedHashMap_LinkedHashMap$from(source, type$.String, type$.Object);
      return new A.ShelfUnmodifiableMap(false, source);
    },
    ShelfUnmodifiableMap: function ShelfUnmodifiableMap(t0, t1) {
      this._ignoreKeyCase = t0;
      this._map = t1;
    },
    _EmptyShelfUnmodifiableMap: function _EmptyShelfUnmodifiableMap(t0) {
      this._map = t0;
    },
    catchTopLevelErrors(callback, onError) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone || t1.get$errorZone() === B.C__RootZone.get$errorZone())
        return A.runZonedGuarded(callback, onError, type$.void);
      else
        return callback.call$0();
    },
    updateMap(original, updates, $K, $V) {
      var value, t1, entry, val, t2;
      if (updates == null || updates._length === 0)
        return original;
      value = A.LinkedHashMap_LinkedHashMap$of(original, $K, $V);
      for (t1 = new A.LinkedHashMapEntriesIterable(updates, A._instanceType(updates)._eval$1("LinkedHashMapEntriesIterable<1,2>")).get$iterator(0); t1.moveNext$0();) {
        entry = t1.__js_helper$_current;
        val = entry.value;
        t2 = entry.key;
        if (val == null)
          value.remove$1(0, t2);
        else
          value.$indexSet(0, t2, val);
      }
      return value;
    },
    addHeader(headers, $name, value) {
      headers = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Object);
      headers.$indexSet(0, $name, value);
      return headers;
    },
    findHeader(headers, $name) {
      var t1, t2;
      if (headers == null)
        return null;
      if (type$.ShelfUnmodifiableMap._is(headers))
        return A.joinHeaderValues(J.$index$asx(headers._map, $name));
      for (t1 = J.get$iterator$ax(headers.get$keys(headers)); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        if (A.equalsIgnoreAsciiCase(t2, $name))
          return A.joinHeaderValues(headers.$index(0, t2));
      }
      return null;
    },
    _expandToHeadersAll(headers) {
      var t1;
      if (type$.Map_of_String_and_List_String._is(headers))
        return headers;
      if (headers == null || headers._length === 0)
        return null;
      t1 = A._instanceType(headers)._eval$1("LinkedHashMapEntriesIterable<1,2>");
      return A.Map_Map$fromEntries(A.MappedIterable_MappedIterable(new A.LinkedHashMapEntriesIterable(headers, t1), t1._eval$1("MapEntry<String,List<String>?>(Iterable.E)")._as(new A._expandToHeadersAll_closure()), t1._eval$1("Iterable.E"), type$.MapEntry_of_String_and_nullable_List_String), type$.String, type$.nullable_List_String);
    },
    expandToHeadersAll(headers) {
      if (type$.Map_of_String_and_List_String._is(headers))
        return headers;
      if (headers == null || headers.get$isEmpty(headers))
        return null;
      return A.Map_Map$fromEntries(headers.get$entries(headers).map$1$1(0, new A.expandToHeadersAll_closure(), type$.MapEntry_of_String_and_List_String), type$.String, type$.List_String);
    },
    expandHeaderValue(v) {
      var t1;
      if (typeof v == "string")
        return A._setArrayType([v], type$.JSArray_String);
      else if (type$.List_String._is(v))
        return v;
      else {
        t1 = A.ArgumentError$("Expected String or List<String>, got: `" + A.S(v) + "`.", null);
        throw A.wrapException(t1);
      }
    },
    joinHeaderValues(values) {
      var t1;
      if (values == null)
        return null;
      t1 = J.getInterceptor$asx(values);
      if (t1.get$isEmpty(values))
        return "";
      if (t1.get$length(values) === 1)
        return t1.get$single(values);
      return t1.join$1(values, ",");
    },
    _expandToHeadersAll_closure: function _expandToHeadersAll_closure() {
    },
    expandToHeadersAll_closure: function expandToHeadersAll_closure() {
    },
    createGzipMiddleware() {
      return new A.createGzipMiddleware_closure(512, null, 4, true, false, "gzip");
    },
    gzipEncodeResponse(response, addCompressionRatioHeader, addServerTiming, alreadyCompressedContentType, compressionLevel, minimalGzipContentLength, serverTimingEntryName) {
      return A.gzipEncodeResponse$body(response, true, false, alreadyCompressedContentType, compressionLevel, minimalGzipContentLength, serverTimingEntryName);
    },
    gzipEncodeResponse$body(response, addCompressionRatioHeader, addServerTiming, alreadyCompressedContentType, compressionLevel, minimalGzipContentLength, serverTimingEntryName) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, bufferInitialCapacity, t1, bytesBuffer, gzipEncoder, compressedBody, bodyLength, compressedBodyLength, headers, compressionRatio, compressionRatioStr;
      var $async$gzipEncodeResponse = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!A.canGzipEncodeResponse(response, alreadyCompressedContentType, minimalGzipContentLength)) {
                $async$returnValue = response;
                // goto return
                $async$goto = 1;
                break;
              }
              Date.now();
              bufferInitialCapacity = response.get$contentLength();
              if (bufferInitialCapacity == null)
                bufferInitialCapacity = 4096;
              t1 = response._body.read$0(0);
              $async$goto = 3;
              return A._asyncAwait(t1.fold$1$2(0, new A._BytesBuffer(new Uint8Array(bufferInitialCapacity)), new A.gzipEncodeResponse_closure(), type$._BytesBuffer), $async$gzipEncodeResponse);
            case 3:
              // returning from await.
              bytesBuffer = $async$result;
              gzipEncoder = compressionLevel === 4 ? $.$get$_defaultGzipEncoder() : A.ZLibEncoder$(true, compressionLevel);
              compressedBody = gzipEncoder.convert$1(bytesBuffer.toUint8List$0());
              bodyLength = bytesBuffer._gzip_encoding$_length;
              compressedBodyLength = compressedBody.length;
              t1 = type$.String;
              headers = A.LinkedHashMap_LinkedHashMap$from(response._headers.get$singleValues(), t1, t1);
              headers.$indexSet(0, "content-encoding", "gzip");
              headers.$indexSet(0, "content-length", B.JSInt_methods.toString$0(compressedBodyLength));
              compressionRatio = compressedBodyLength / bodyLength;
              compressionRatioStr = A.S(compressionRatio);
              headers.$indexSet(0, "X-Compression-Ratio", (compressionRatioStr.length > 6 ? B.JSNumber_methods.toStringAsFixed$1(compressionRatio, 4) : compressionRatioStr) + " (" + compressedBodyLength + "/" + bodyLength + ")");
              $async$returnValue = response.change$2$body$headers(compressedBody, headers);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$gzipEncodeResponse, $async$completer);
    },
    canGzipEncodeResponse(response, alreadyCompressedContentType, minimalGzipContentLength) {
      var responseContentLength, headerContentType,
        t1 = response._headers,
        headerContentEncoding = J.$index$asx(t1.get$singleValues()._map, "content-encoding");
      if (headerContentEncoding != null && headerContentEncoding.length !== 0)
        return false;
      responseContentLength = response.get$contentLength();
      if (responseContentLength != null && responseContentLength < minimalGzipContentLength)
        return false;
      headerContentType = J.$index$asx(t1.get$singleValues()._map, "content-type");
      if (headerContentType != null)
        if (A.isAlreadyCompressedContentType(headerContentType))
          return false;
      return true;
    },
    isAlreadyCompressedContentType(contentType) {
      var idx, idx2, type;
      contentType = B.JSString_methods.trim$0(contentType.toLowerCase());
      if (contentType.length === 0)
        return false;
      idx = B.JSString_methods.indexOf$1(contentType, ";");
      if (idx >= 0)
        contentType = B.JSString_methods.trim$0(B.JSString_methods.substring$2(contentType, 0, idx));
      idx2 = B.JSString_methods.indexOf$1(contentType, "/");
      type = idx2 >= 0 ? B.JSString_methods.substring$1(contentType, idx2 + 1) : contentType;
      if (A.isAlreadyCompressedExtension(type))
        return true;
      if (B.JSString_methods.contains$1(type, "+"))
        return !new A.WhereIterable(A._setArrayType(type.split("+"), type$.JSArray_String), type$.bool_Function_String._as(new A.isAlreadyCompressedContentType_closure()), type$.WhereIterable_String).get$isEmpty(0);
      return false;
    },
    isAlreadyCompressedExtension(extension) {
      extension = B.JSString_methods.trim$0(extension.toLowerCase());
      if (extension.length === 0)
        return false;
      switch (extension) {
        case "ico":
        case "png":
        case "jpg":
        case "jpeg":
        case "avi":
        case "mp3":
        case "mp4":
        case "mpeg":
        case "ogg":
        case "ogx":
        case "weba":
        case "webm":
        case "webp":
        case "epub":
        case "pdf":
        case "woff":
        case "woff2":
        case "jar":
        case "war":
        case "7z":
        case "bz":
        case "bz2":
        case "gzip":
        case "gz":
        case "rar":
        case "zip":
          return true;
        default:
          return false;
      }
    },
    createGzipMiddleware_closure: function createGzipMiddleware_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.minimalGzipContentLength = t0;
      _.alreadyCompressedContentType = t1;
      _.compressionLevel = t2;
      _.addCompressionRatioHeader = t3;
      _.addServerTiming = t4;
      _.serverTimingEntryName = t5;
    },
    createGzipMiddleware__closure: function createGzipMiddleware__closure(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.innerHandler = t0;
      _.minimalGzipContentLength = t1;
      _.alreadyCompressedContentType = t2;
      _.compressionLevel = t3;
      _.addCompressionRatioHeader = t4;
      _.addServerTiming = t5;
      _.serverTimingEntryName = t6;
    },
    createGzipMiddleware___closure: function createGzipMiddleware___closure(t0, t1) {
      this.innerHandler = t0;
      this.request = t1;
    },
    createGzipMiddleware___closure0: function createGzipMiddleware___closure0(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.minimalGzipContentLength = t0;
      _.alreadyCompressedContentType = t1;
      _.compressionLevel = t2;
      _.addCompressionRatioHeader = t3;
      _.addServerTiming = t4;
      _.serverTimingEntryName = t5;
    },
    gzipEncodeResponse_closure: function gzipEncodeResponse_closure() {
    },
    isAlreadyCompressedContentType_closure: function isAlreadyCompressedContentType_closure() {
    },
    _BytesBuffer: function _BytesBuffer(t0) {
      this._bytes = t0;
      this._gzip_encoding$_length = 0;
    },
    proxyHandler(url, client) {
      var proxyName, t1 = {};
      t1.proxyName = proxyName;
      t1.uri = t1.proxyName = null;
      t1.uri = A.Uri_parse(url);
      t1.proxyName = "shelf_proxy";
      return new A.proxyHandler_closure(t1, client);
    },
    _addHeader(headers, $name, value) {
      var existing = headers.$index(0, $name);
      headers.$indexSet(0, $name, existing == null ? value : existing + ", " + value);
    },
    proxyHandler_closure: function proxyHandler_closure(t0, t1) {
      this._box_0 = t0;
      this.nonNullClient = t1;
    },
    FileLocation$_(file, offset) {
      if (offset < 0)
        A.throwExpression(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > file._decodedChars.length)
        A.throwExpression(A.RangeError$("Offset " + offset + string$.x20must_ + file.get$length(0) + "."));
      return new A.FileLocation(file, offset);
    },
    SourceFile: function SourceFile(t0, t1, t2) {
      var _ = this;
      _.url = t0;
      _._lineStarts = t1;
      _._decodedChars = t2;
      _._cachedLine = null;
    },
    FileLocation: function FileLocation(t0, t1) {
      this.file = t0;
      this.offset = t1;
    },
    _FileSpan: function _FileSpan(t0, t1, t2) {
      this.file = t0;
      this._file$_start = t1;
      this._end = t2;
    },
    Highlighter$(span, color) {
      var t1 = A.Highlighter__collateLines(A._setArrayType([A._Highlight$(span, true)], type$.JSArray__Highlight)),
        t2 = new A.Highlighter_closure(color).call$0(),
        t3 = B.JSInt_methods.toString$0(B.JSArray_methods.get$last(t1).number + 1),
        t4 = A.Highlighter__contiguous(t1) ? 0 : 3,
        t5 = A._arrayInstanceType(t1);
      return new A.Highlighter(t1, t2, null, 1 + Math.max(t3.length, t4), new A.MappedListIterable(t1, t5._eval$1("int(1)")._as(new A.Highlighter$__closure()), t5._eval$1("MappedListIterable<1,int>")).reduce$1(0, B.CONSTANT), !A.isAllTheSame(new A.MappedListIterable(t1, t5._eval$1("Object?(1)")._as(new A.Highlighter$__closure0()), t5._eval$1("MappedListIterable<1,Object?>"))), new A.StringBuffer(""));
    },
    Highlighter__contiguous(lines) {
      var i, thisLine, nextLine;
      for (i = 0; i < lines.length - 1;) {
        thisLine = lines[i];
        ++i;
        nextLine = lines[i];
        if (thisLine.number + 1 !== nextLine.number && J.$eq$(thisLine.url, nextLine.url))
          return false;
      }
      return true;
    },
    Highlighter__collateLines(highlights) {
      var t1, t2,
        highlightsByUrl = A.groupBy(highlights, new A.Highlighter__collateLines_closure(), type$._Highlight, type$.Object);
      for (t1 = A._instanceType(highlightsByUrl), t2 = new A.LinkedHashMapValueIterator(highlightsByUrl, highlightsByUrl._modifications, highlightsByUrl._first, t1._eval$1("LinkedHashMapValueIterator<2>")); t2.moveNext$0();)
        J.sort$1$ax(t2.__js_helper$_current, new A.Highlighter__collateLines_closure0());
      t1 = t1._eval$1("LinkedHashMapEntriesIterable<1,2>");
      t2 = t1._eval$1("ExpandIterable<Iterable.E,_Line>");
      t1 = A.List_List$_of(new A.ExpandIterable(new A.LinkedHashMapEntriesIterable(highlightsByUrl, t1), t1._eval$1("Iterable<_Line>(Iterable.E)")._as(new A.Highlighter__collateLines_closure1()), t2), t2._eval$1("Iterable.E"));
      return t1;
    },
    _Highlight$(span, primary) {
      var t1 = new A._Highlight_closure(span).call$0();
      return new A._Highlight(t1, true, null);
    },
    _Highlight__normalizeNewlines(span) {
      var t1, endOffset, i, t2, t3, t4,
        text = span.get$text(span);
      if (!B.JSString_methods.contains$1(text, "\r\n"))
        return span;
      t1 = span.get$end(span);
      endOffset = t1.get$offset(t1);
      for (t1 = text.length - 1, i = 0; i < t1; ++i)
        if (text.charCodeAt(i) === 13 && text.charCodeAt(i + 1) === 10)
          --endOffset;
      t1 = span.get$start(span);
      t2 = span.get$sourceUrl();
      t3 = span.get$end(span);
      t3 = t3.get$line(t3);
      t2 = A.SourceLocation$(endOffset, span.get$end(span).get$column(), t3, t2);
      t3 = A.stringReplaceAllUnchecked(text, "\r\n", "\n");
      t4 = span.get$context(span);
      return A.SourceSpanWithContext$(t1, t2, t3, A.stringReplaceAllUnchecked(t4, "\r\n", "\n"));
    },
    _Highlight__normalizeTrailingNewline(span) {
      var context, text, start, end, t1, t2, t3;
      if (!B.JSString_methods.endsWith$1(span.get$context(span), "\n"))
        return span;
      if (B.JSString_methods.endsWith$1(span.get$text(span), "\n\n"))
        return span;
      context = B.JSString_methods.substring$2(span.get$context(span), 0, span.get$context(span).length - 1);
      text = span.get$text(span);
      start = span.get$start(span);
      end = span.get$end(span);
      if (B.JSString_methods.endsWith$1(span.get$text(span), "\n")) {
        t1 = A.findLineStart(span.get$context(span), span.get$text(span), span.get$start(span).get$column());
        t1.toString;
        t1 = t1 + span.get$start(span).get$column() + span.get$length(span) === span.get$context(span).length;
      } else
        t1 = false;
      if (t1) {
        text = B.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
        if (text.length === 0)
          end = start;
        else {
          t1 = span.get$end(span);
          t1 = t1.get$offset(t1);
          t2 = span.get$sourceUrl();
          t3 = span.get$end(span);
          t3 = t3.get$line(t3);
          end = A.SourceLocation$(t1 - 1, A._Highlight__lastLineLength(context), t3 - 1, t2);
          t1 = span.get$start(span);
          t1 = t1.get$offset(t1);
          t2 = span.get$end(span);
          start = t1 === t2.get$offset(t2) ? end : span.get$start(span);
        }
      }
      return A.SourceSpanWithContext$(start, end, text, context);
    },
    _Highlight__normalizeEndOfLine(span) {
      var t1, t2, text, t3, t4;
      if (span.get$end(span).get$column() !== 0)
        return span;
      t1 = span.get$end(span);
      t1 = t1.get$line(t1);
      t2 = span.get$start(span);
      if (t1 === t2.get$line(t2))
        return span;
      text = B.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
      t1 = span.get$start(span);
      t2 = span.get$end(span);
      t2 = t2.get$offset(t2);
      t3 = span.get$sourceUrl();
      t4 = span.get$end(span);
      t4 = t4.get$line(t4);
      t3 = A.SourceLocation$(t2 - 1, text.length - B.JSString_methods.lastIndexOf$1(text, "\n") - 1, t4 - 1, t3);
      return A.SourceSpanWithContext$(t1, t3, text, B.JSString_methods.endsWith$1(span.get$context(span), "\n") ? B.JSString_methods.substring$2(span.get$context(span), 0, span.get$context(span).length - 1) : span.get$context(span));
    },
    _Highlight__lastLineLength(text) {
      var t2,
        t1 = text.length;
      if (t1 === 0)
        return 0;
      else {
        t2 = t1 - 1;
        if (!(t2 >= 0))
          return A.ioore(text, t2);
        if (text.charCodeAt(t2) === 10)
          return t1 === 1 ? 0 : t1 - B.JSString_methods.lastIndexOf$2(text, "\n", t1 - 2) - 1;
        else
          return t1 - B.JSString_methods.lastIndexOf$1(text, "\n") - 1;
      }
    },
    Highlighter: function Highlighter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._lines = t0;
      _._primaryColor = t1;
      _._secondaryColor = t2;
      _._paddingBeforeSidebar = t3;
      _._maxMultilineSpans = t4;
      _._multipleFiles = t5;
      _._highlighter$_buffer = t6;
    },
    Highlighter_closure: function Highlighter_closure(t0) {
      this.color = t0;
    },
    Highlighter$__closure: function Highlighter$__closure() {
    },
    Highlighter$___closure: function Highlighter$___closure() {
    },
    Highlighter$__closure0: function Highlighter$__closure0() {
    },
    Highlighter__collateLines_closure: function Highlighter__collateLines_closure() {
    },
    Highlighter__collateLines_closure0: function Highlighter__collateLines_closure0() {
    },
    Highlighter__collateLines_closure1: function Highlighter__collateLines_closure1() {
    },
    Highlighter__collateLines__closure: function Highlighter__collateLines__closure(t0) {
      this.line = t0;
    },
    Highlighter_highlight_closure: function Highlighter_highlight_closure() {
    },
    Highlighter__writeFileStart_closure: function Highlighter__writeFileStart_closure(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure: function Highlighter__writeMultilineHighlights_closure(t0, t1, t2) {
      this.$this = t0;
      this.startLine = t1;
      this.line = t2;
    },
    Highlighter__writeMultilineHighlights_closure0: function Highlighter__writeMultilineHighlights_closure0(t0, t1) {
      this.$this = t0;
      this.highlight = t1;
    },
    Highlighter__writeMultilineHighlights_closure1: function Highlighter__writeMultilineHighlights_closure1(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure2: function Highlighter__writeMultilineHighlights_closure2(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.current = t2;
      _.startLine = t3;
      _.line = t4;
      _.highlight = t5;
      _.endLine = t6;
    },
    Highlighter__writeMultilineHighlights__closure: function Highlighter__writeMultilineHighlights__closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Highlighter__writeMultilineHighlights__closure0: function Highlighter__writeMultilineHighlights__closure0(t0, t1) {
      this.$this = t0;
      this.vertical = t1;
    },
    Highlighter__writeHighlightedText_closure: function Highlighter__writeHighlightedText_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.text = t1;
      _.startColumn = t2;
      _.endColumn = t3;
    },
    Highlighter__writeIndicator_closure: function Highlighter__writeIndicator_closure(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure0: function Highlighter__writeIndicator_closure0(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure1: function Highlighter__writeIndicator_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.coversWholeLine = t1;
      _.line = t2;
      _.highlight = t3;
    },
    Highlighter__writeSidebar_closure: function Highlighter__writeSidebar_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.end = t2;
    },
    _Highlight: function _Highlight(t0, t1, t2) {
      this.span = t0;
      this.isPrimary = t1;
      this.label = t2;
    },
    _Highlight_closure: function _Highlight_closure(t0) {
      this.span = t0;
    },
    _Line: function _Line(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.number = t1;
      _.url = t2;
      _.highlights = t3;
    },
    SourceLocation$(offset, column, line, sourceUrl) {
      if (offset < 0)
        A.throwExpression(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (line < 0)
        A.throwExpression(A.RangeError$("Line may not be negative, was " + line + "."));
      else if (column < 0)
        A.throwExpression(A.RangeError$("Column may not be negative, was " + column + "."));
      return new A.SourceLocation(sourceUrl, offset, line, column);
    },
    SourceLocation: function SourceLocation(t0, t1, t2, t3) {
      var _ = this;
      _.sourceUrl = t0;
      _.offset = t1;
      _.line = t2;
      _.column = t3;
    },
    SourceLocationMixin: function SourceLocationMixin() {
    },
    SourceSpanBase: function SourceSpanBase() {
    },
    SourceSpanFormatException$(message, span, source) {
      return new A.SourceSpanFormatException(source, message, span);
    },
    SourceSpanException: function SourceSpanException() {
    },
    SourceSpanFormatException: function SourceSpanFormatException(t0, t1, t2) {
      this.source = t0;
      this._span_exception$_message = t1;
      this._span = t2;
    },
    SourceSpanMixin: function SourceSpanMixin() {
    },
    SourceSpanWithContext$(start, end, text, _context) {
      var t1 = new A.SourceSpanWithContext(_context, start, end, text);
      t1.SourceSpanBase$3(start, end, text);
      if (!B.JSString_methods.contains$1(_context, text))
        A.throwExpression(A.ArgumentError$('The context line "' + _context + '" must contain "' + text + '".', null));
      if (A.findLineStart(_context, text, start.get$column()) == null)
        A.throwExpression(A.ArgumentError$('The span text "' + text + '" must start at column ' + (start.get$column() + 1) + ' in a line within "' + _context + '".', null));
      return t1;
    },
    SourceSpanWithContext: function SourceSpanWithContext(t0, t1, t2, t3) {
      var _ = this;
      _._context = t0;
      _.start = t1;
      _.end = t2;
      _.text = t3;
    },
    Chain_Chain$forTrace(trace) {
      var t1;
      if (type$.Chain._is(trace))
        return trace;
      type$.nullable_StackZoneSpecification._as($.Zone__current.$index(0, $.$get$_specKey()));
      t1 = type$.Trace;
      if (t1._is(trace))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([trace], type$.JSArray_Trace), t1));
      return new A.LazyChain(new A.Chain_Chain$forTrace_closure(trace));
    },
    Chain_Chain$parse(chain) {
      var t1, t2,
        _s51_ = string$.x3d_____;
      if (chain.length === 0)
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([], type$.JSArray_Trace), type$.Trace));
      t1 = $.$get$vmChainGap();
      if (B.JSString_methods.contains$1(chain, t1)) {
        t1 = B.JSString_methods.split$1(chain, t1);
        t2 = A._arrayInstanceType(t1);
        return new A.Chain(A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Chain_Chain$parse_closure()), t2._eval$1("WhereIterable<1>")), t2._eval$1("Trace(1)")._as(A.trace_Trace___parseVM_tearOff$closure()), t2._eval$1("MappedIterable<1,Trace>")), type$.Trace));
      }
      if (!B.JSString_methods.contains$1(chain, _s51_))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([A.Trace_Trace$parse(chain)], type$.JSArray_Trace), type$.Trace));
      return new A.Chain(A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(chain.split(_s51_), type$.JSArray_String), type$.Trace_Function_String._as(A.trace_Trace___parseFriendly_tearOff$closure()), type$.MappedListIterable_String_Trace), type$.Trace));
    },
    Chain: function Chain(t0) {
      this.traces = t0;
    },
    Chain_Chain$forTrace_closure: function Chain_Chain$forTrace_closure(t0) {
      this.trace = t0;
    },
    Chain_Chain$parse_closure: function Chain_Chain$parse_closure() {
    },
    Chain_terse_closure: function Chain_terse_closure() {
    },
    Chain_foldFrames_closure: function Chain_foldFrames_closure(t0, t1) {
      this.predicate = t0;
      this.terse = t1;
    },
    Chain_foldFrames_closure0: function Chain_foldFrames_closure0(t0) {
      this.terse = t0;
    },
    Chain_toTrace_closure: function Chain_toTrace_closure() {
    },
    Chain_toString_closure0: function Chain_toString_closure0() {
    },
    Chain_toString__closure0: function Chain_toString__closure0() {
    },
    Chain_toString_closure: function Chain_toString_closure(t0) {
      this.longest = t0;
    },
    Chain_toString__closure: function Chain_toString__closure(t0) {
      this.longest = t0;
    },
    Frame___parseVM_tearOff(frame) {
      return A.Frame_Frame$parseVM(A._asString(frame));
    },
    Frame_Frame$parseVM(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseVM_closure(frame));
    },
    Frame___parseV8_tearOff(frame) {
      return A.Frame_Frame$parseV8(A._asString(frame));
    },
    Frame_Frame$parseV8(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseV8_closure(frame));
    },
    Frame_Frame$_parseFirefoxEval(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$_parseFirefoxEval_closure(frame));
    },
    Frame___parseFirefox_tearOff(frame) {
      return A.Frame_Frame$parseFirefox(A._asString(frame));
    },
    Frame_Frame$parseFirefox(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFirefox_closure(frame));
    },
    Frame___parseFriendly_tearOff(frame) {
      return A.Frame_Frame$parseFriendly(A._asString(frame));
    },
    Frame_Frame$parseFriendly(frame) {
      return A.Frame__catchFormatException(frame, new A.Frame_Frame$parseFriendly_closure(frame));
    },
    Frame__uriOrPathToUri(uriOrPath) {
      if (B.JSString_methods.contains$1(uriOrPath, $.$get$Frame__uriRegExp()))
        return A.Uri_parse(uriOrPath);
      else if (B.JSString_methods.contains$1(uriOrPath, $.$get$Frame__windowsRegExp()))
        return A._Uri__Uri$file(uriOrPath, true);
      else if (B.JSString_methods.startsWith$1(uriOrPath, "/"))
        return A._Uri__Uri$file(uriOrPath, false);
      if (B.JSString_methods.contains$1(uriOrPath, "\\"))
        return $.$get$windows().toUri$1(uriOrPath);
      return A.Uri_parse(uriOrPath);
    },
    Frame__catchFormatException(text, body) {
      var t1, exception, _null = null;
      try {
        t1 = body.call$0();
        return t1;
      } catch (exception) {
        if (type$.FormatException._is(A.unwrapException(exception)))
          return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null, _null, _null, _null), text);
        else
          throw exception;
      }
    },
    Frame: function Frame(t0, t1, t2, t3) {
      var _ = this;
      _.uri = t0;
      _.line = t1;
      _.column = t2;
      _.member = t3;
    },
    Frame_Frame$parseVM_closure: function Frame_Frame$parseVM_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseV8_closure: function Frame_Frame$parseV8_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseV8_closure_parseJsLocation: function Frame_Frame$parseV8_closure_parseJsLocation(t0) {
      this.frame = t0;
    },
    Frame_Frame$_parseFirefoxEval_closure: function Frame_Frame$_parseFirefoxEval_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseFirefox_closure: function Frame_Frame$parseFirefox_closure(t0) {
      this.frame = t0;
    },
    Frame_Frame$parseFriendly_closure: function Frame_Frame$parseFriendly_closure(t0) {
      this.frame = t0;
    },
    LazyChain: function LazyChain(t0) {
      this._thunk = t0;
      this.__LazyChain__chain_FI = $;
    },
    LazyChain_foldFrames_closure: function LazyChain_foldFrames_closure(t0, t1, t2) {
      this.$this = t0;
      this.predicate = t1;
      this.terse = t2;
    },
    Trace_Trace$parse(trace) {
      var error, t1, exception;
      try {
        if (trace.length === 0) {
          t1 = A.Trace$(A._setArrayType([], type$.JSArray_Frame), null);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_v8Trace())) {
          t1 = A.Trace$parseV8(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, "\tat ")) {
          t1 = A.Trace$parseJSCore(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_firefoxSafariTrace()) || B.JSString_methods.contains$1(trace, $.$get$_firefoxEvalTrace())) {
          t1 = A.Trace$parseFirefox(trace);
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, string$.x3d_____)) {
          t1 = A.Chain_Chain$parse(trace).toTrace$0();
          return t1;
        }
        if (B.JSString_methods.contains$1(trace, $.$get$_friendlyTrace())) {
          t1 = A.Trace$parseFriendly(trace);
          return t1;
        }
        t1 = A.Trace$parseVM(trace);
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (type$.FormatException._is(t1)) {
          error = t1;
          throw A.wrapException(A.FormatException$(J.get$message$z(error) + "\nStack trace:\n" + trace, null, null));
        } else
          throw exception;
      }
    },
    Trace___parseVM_tearOff(trace) {
      return A.Trace$parseVM(A._asString(trace));
    },
    Trace$parseVM(trace) {
      var t1 = A.List_List$unmodifiable(A.Trace__parseVM(trace), type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace__parseVM(trace) {
      var $frames,
        t1 = B.JSString_methods.trim$0(trace),
        t2 = $.$get$vmChainGap(),
        t3 = type$.WhereIterable_String,
        lines = new A.WhereIterable(A._setArrayType(A.stringReplaceAllUnchecked(t1, t2, "").split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace__parseVM_closure()), t3);
      if (!lines.get$iterator(0).moveNext$0())
        return A._setArrayType([], type$.JSArray_Frame);
      t1 = A.TakeIterable_TakeIterable(lines, lines.get$length(0) - 1, t3._eval$1("Iterable.E"));
      t2 = A._instanceType(t1);
      t2 = A.MappedIterable_MappedIterable(t1, t2._eval$1("Frame(Iterable.E)")._as(A.frame_Frame___parseVM_tearOff$closure()), t2._eval$1("Iterable.E"), type$.Frame);
      $frames = A.List_List$_of(t2, A._instanceType(t2)._eval$1("Iterable.E"));
      if (!J.endsWith$1$s(lines.get$last(0), ".da"))
        B.JSArray_methods.add$1($frames, A.Frame_Frame$parseVM(lines.get$last(0)));
      return $frames;
    },
    Trace$parseV8(trace) {
      var t2, t3,
        t1 = A.SubListIterable$(A._setArrayType(trace.split("\n"), type$.JSArray_String), 1, null, type$.String);
      t1 = t1.super$Iterable$skipWhile(0, t1.$ti._eval$1("bool(ListIterable.E)")._as(new A.Trace$parseV8_closure()));
      t2 = type$.Frame;
      t3 = t1.$ti;
      t2 = A.List_List$unmodifiable(A.MappedIterable_MappedIterable(t1, t3._eval$1("Frame(Iterable.E)")._as(A.frame_Frame___parseV8_tearOff$closure()), t3._eval$1("Iterable.E"), t2), t2);
      return new A.Trace(t2, new A._StringStackTrace(trace));
    },
    Trace$parseJSCore(trace) {
      var t1 = A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(trace.split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseJSCore_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(A.frame_Frame___parseV8_tearOff$closure()), type$.MappedIterable_String_Frame), type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace$parseFirefox(trace) {
      var t1 = A.List_List$unmodifiable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(trace).split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseFirefox_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(A.frame_Frame___parseFirefox_tearOff$closure()), type$.MappedIterable_String_Frame), type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace___parseFriendly_tearOff(trace) {
      return A.Trace$parseFriendly(A._asString(trace));
    },
    Trace$parseFriendly(trace) {
      var t1 = trace.length === 0 ? A._setArrayType([], type$.JSArray_Frame) : new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(trace).split("\n"), type$.JSArray_String), type$.bool_Function_String._as(new A.Trace$parseFriendly_closure()), type$.WhereIterable_String), type$.Frame_Function_String._as(A.frame_Frame___parseFriendly_tearOff$closure()), type$.MappedIterable_String_Frame);
      t1 = A.List_List$unmodifiable(t1, type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(trace));
    },
    Trace$($frames, original) {
      var t1 = A.List_List$unmodifiable($frames, type$.Frame);
      return new A.Trace(t1, new A._StringStackTrace(original == null ? "" : original));
    },
    Trace: function Trace(t0, t1) {
      this.frames = t0;
      this.original = t1;
    },
    Trace__parseVM_closure: function Trace__parseVM_closure() {
    },
    Trace$parseV8_closure: function Trace$parseV8_closure() {
    },
    Trace$parseJSCore_closure: function Trace$parseJSCore_closure() {
    },
    Trace$parseFirefox_closure: function Trace$parseFirefox_closure() {
    },
    Trace$parseFriendly_closure: function Trace$parseFriendly_closure() {
    },
    Trace_foldFrames_closure: function Trace_foldFrames_closure(t0) {
      this.oldPredicate = t0;
    },
    Trace_foldFrames_closure0: function Trace_foldFrames_closure0(t0) {
      this._box_0 = t0;
    },
    Trace_toString_closure0: function Trace_toString_closure0() {
    },
    Trace_toString_closure: function Trace_toString_closure(t0) {
      this.longest = t0;
    },
    UnparsedFrame: function UnparsedFrame(t0, t1) {
      this.uri = t0;
      this.member = t1;
    },
    _StreamChannel: function _StreamChannel(t0, t1, t2) {
      this.stream = t0;
      this.sink = t1;
      this.$ti = t2;
    },
    StreamChannelMixin: function StreamChannelMixin() {
    },
    StringScannerException: function StringScannerException(t0, t1, t2) {
      this.source = t0;
      this._span_exception$_message = t1;
      this._span = t2;
    },
    StringScanner$(string) {
      return new A.StringScanner(null, string);
    },
    StringScanner: function StringScanner(t0, t1) {
      var _ = this;
      _.sourceUrl = t0;
      _.string = t1;
      _._string_scanner$_position = 0;
      _._lastMatchPosition = _._lastMatch = null;
    },
    TypedDataBuffer: function TypedDataBuffer() {
    },
    _IntBuffer: function _IntBuffer() {
    },
    Uint8Buffer: function Uint8Buffer(t0, t1) {
      this._typed_buffer$_buffer = t0;
      this._typed_buffer$_length = t1;
    },
    max(a, b, $T) {
      A.checkTypeBound($T, type$.num, "T", "max");
      return Math.max($T._as(a), $T._as(b));
    },
    zoneClient() {
      var client = $.Zone__current.$index(0, B.Symbol__clientToken);
      return client == null ? null : type$.Client_Function._as(client).call$0();
    },
    printString(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    },
    _convertNativeToDart_Value(value) {
      var proto, t1, values, i;
      if (value == null)
        return value;
      if (typeof value == "string" || typeof value == "number" || A._isBool(value))
        return value;
      proto = Object.getPrototypeOf(value);
      t1 = proto === Object.prototype;
      t1.toString;
      if (!t1) {
        t1 = proto === null;
        t1.toString;
      } else
        t1 = true;
      if (t1)
        return A.convertNativeToDart_Dictionary(value);
      t1 = Array.isArray(value);
      t1.toString;
      if (t1) {
        values = [];
        i = 0;
        while (true) {
          t1 = value.length;
          t1.toString;
          if (!(i < t1))
            break;
          values.push(A._convertNativeToDart_Value(value[i]));
          ++i;
        }
        return values;
      }
      return value;
    },
    convertNativeToDart_Dictionary(object) {
      var dict, keys, t1, _i, key, t2;
      if (object == null)
        return null;
      dict = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
        key = keys[_i];
        t2 = key;
        t2.toString;
        dict.$indexSet(0, t2, A._convertNativeToDart_Value(object[key]));
      }
      return dict;
    },
    equalsIgnoreAsciiCase(a, b) {
      var i, aChar, bChar, aCharLowerCase,
        t1 = a.length,
        t2 = b.length;
      if (t1 !== t2)
        return false;
      for (i = 0; i < t1; ++i) {
        aChar = a.charCodeAt(i);
        if (!(i < t2))
          return A.ioore(b, i);
        bChar = b.charCodeAt(i);
        if (aChar === bChar)
          continue;
        if ((aChar ^ bChar) !== 32)
          return false;
        aCharLowerCase = aChar | 32;
        if (97 <= aCharLowerCase && aCharLowerCase <= 122)
          continue;
        return false;
      }
      return true;
    },
    groupBy(values, key, $S, $T) {
      var t1, _i, element, t2, t3,
        map = A.LinkedHashMap_LinkedHashMap$_empty($T, $S._eval$1("List<0>"));
      for (t1 = $S._eval$1("JSArray<0>"), _i = 0; _i < 1; ++_i) {
        element = values[_i];
        t2 = key.call$1(element);
        t3 = map.$index(0, t2);
        if (t3 == null) {
          t3 = A._setArrayType([], t1);
          map.$indexSet(0, t2, t3);
          t2 = t3;
        } else
          t2 = t3;
        J.add$1$ax(t2, element);
      }
      return map;
    },
    main() {
      var t1, t2, t3, _null = null, _s2_ = "px";
      $.Jaspr__options = $.$get$defaultJasprOptions();
      $.Jaspr__useIsolates = true;
      t1 = type$.String;
      t2 = A.LinkedHashMap_LinkedHashMap$of(A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t1, t1);
      t2.$indexSet(0, "href", "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css");
      t2.$indexSet(0, "rel", "stylesheet");
      t2 = A._setArrayType([new A.DomComponent("link", _null, _null, _null, t2, _null, _null, _null, _null)], type$.JSArray_Component);
      t1 = A.LinkedHashMap_LinkedHashMap$_literal(["og:title", "Rohin", "og:url", ""], t1, t1);
      type$.List_StyleRule._as(B.List_empty);
      t3 = A._setArrayType([new A.ImportStyleRule("https://fonts.googleapis.com/css?family=Montserrat"), new A.NestedStyleRule(new A.BlockStyleRule(new A.Selector("html, body"), new A._EmptyStyles()), B.List_empty).text$1$fontFamily(0, B.C__ListFontFamily).box$2$minHeight$width(new A._VhUnit("vh", 100), new A._PercentUnit("%", 100)).box$2$margin$padding(B._AllEdgeInsets__ZeroUnit, B._AllEdgeInsets__ZeroUnit), new A.NestedStyleRule(new A.BlockStyleRule(new A.Selector("h1"), new A._EmptyStyles()), B.List_empty).text$1$fontSize(0, new A._RemUnit("rem", 4)).box$1$margin(B.C_EdgeInsets), new A.FontFaceStyleRule("Agustina", _null, "fonts/agustina/agustina.otf"), new A.NestedStyleRule(new A.BlockStyleRule(new A.Selector("::-webkit-scrollbar"), new A._EmptyStyles()), B.List_empty).box$2$height$width(new A._PixelsUnit(_s2_, 0), new A._PixelsUnit(_s2_, 8)), new A.NestedStyleRule(new A.BlockStyleRule(new A.Selector("::-webkit-scrollbar-track"), new A._EmptyStyles()), B.List_empty).box$1$radius(new A._CircularBorderRadius(new A._PixelsUnit(_s2_, 8))), new A.NestedStyleRule(new A.BlockStyleRule(new A.Selector("::-webkit-scrollbar-thumb"), new A._EmptyStyles()), B.List_empty).box$1$radius(new A._CircularBorderRadius(new A._PixelsUnit(_s2_, 8))).background$1$color(0, B._HexColor_9DR)], type$.JSArray_StyleRule);
      if ($.Jaspr__options == null)
        A.stderr().write$1(0, "Error: Jaspr was not initialized. Call Jaspr.initializeApp() before calling runApp()");
      new A.ServerApp(A._createSetup(new A.BaseDocument("Rohin Vaidya - Portfolio", "en", "utf-8", "width=device-width, initial-scale=1, shrink-to-fit=no", t1, t3, t2, new A.App(_null), B.C_GlobalKey)))._run$0();
    },
    toByteStream(stream) {
      return new A.ByteStream(stream);
    },
    wrapFormatException($name, value, body, $T) {
      var error, error0, t1, exception;
      try {
        t1 = body.call$0();
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.SourceSpanFormatException) {
          error = t1;
          throw A.wrapException(A.SourceSpanFormatException$("Invalid " + $name + ": " + error._span_exception$_message, error._span, J.get$source$z(error)));
        } else if (type$.FormatException._is(t1)) {
          error0 = t1;
          throw A.wrapException(A.FormatException$("Invalid " + $name + ' "' + value + '": ' + J.get$message$z(error0), J.get$source$z(error0), J.get$offset$z(error0)));
        } else
          throw exception;
      }
    },
    current() {
      var exception, t1, path, lastIndex, uri = null;
      try {
        uri = A.Uri_base();
      } catch (exception) {
        if (type$.Exception._is(A.unwrapException(exception))) {
          t1 = $._current;
          if (t1 != null)
            return t1;
          throw exception;
        } else
          throw exception;
      }
      if (J.$eq$(uri, $._currentUriBase)) {
        t1 = $._current;
        t1.toString;
        return t1;
      }
      $._currentUriBase = uri;
      if ($.$get$Style_platform() === $.$get$Style_url())
        t1 = $._current = uri.resolve$1(".").toString$0(0);
      else {
        path = uri.toFilePath$0();
        lastIndex = path.length - 1;
        t1 = $._current = lastIndex === 0 ? path : B.JSString_methods.substring$2(path, 0, lastIndex);
      }
      return t1;
    },
    join(part1, part2) {
      var _null = null;
      return $.$get$context().join$16(0, part1, part2, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    isAlphabetic(char) {
      var t1;
      if (!(char >= 65 && char <= 90))
        t1 = char >= 97 && char <= 122;
      else
        t1 = true;
      return t1;
    },
    driveLetterEnd(path, index) {
      var t2, t3, _null = null,
        t1 = path.length,
        index0 = index + 2;
      if (t1 < index0)
        return _null;
      if (!(index >= 0 && index < t1))
        return A.ioore(path, index);
      if (!A.isAlphabetic(path.charCodeAt(index)))
        return _null;
      t2 = index + 1;
      if (!(t2 < t1))
        return A.ioore(path, t2);
      if (path.charCodeAt(t2) !== 58) {
        t3 = index + 4;
        if (t1 < t3)
          return _null;
        if (B.JSString_methods.substring$2(path, t2, t3).toLowerCase() !== "%3a")
          return _null;
        index = index0;
      }
      t2 = index + 2;
      if (t1 === t2)
        return t2;
      if (!(t2 >= 0 && t2 < t1))
        return A.ioore(path, t2);
      if (path.charCodeAt(t2) !== 47)
        return _null;
      return index + 3;
    },
    createStaticHandler(fileSystemPath, defaultDocument) {
      var rootDir = A.Directory_Directory(fileSystemPath);
      if (!rootDir.existsSync$0())
        throw A.wrapException(A.ArgumentError$('A directory corresponding to fileSystemPath "' + fileSystemPath + '" could not be found', null));
      rootDir.resolveSymbolicLinksSync$0();
    },
    isAllTheSame(iter) {
      var firstValue, t1, t2, value;
      if (iter.get$length(0) === 0)
        return true;
      firstValue = iter.get$first(0);
      for (t1 = A.SubListIterable$(iter, 1, null, iter.$ti._eval$1("ListIterable.E")), t2 = t1.$ti, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        value = t1.__internal$_current;
        if (!J.$eq$(value == null ? t2._as(value) : value, firstValue))
          return false;
      }
      return true;
    },
    replaceFirstNull(list, element, $E) {
      var index = B.JSArray_methods.indexOf$1(list, null);
      if (index < 0)
        throw A.wrapException(A.ArgumentError$(A.S(list) + " contains no null elements.", null));
      B.JSArray_methods.$indexSet(list, index, element);
    },
    replaceWithNull(list, element, $E) {
      var index = B.JSArray_methods.indexOf$1(list, element);
      if (index < 0)
        throw A.wrapException(A.ArgumentError$(A.S(list) + " contains no elements matching " + element.toString$0(0) + ".", null));
      B.JSArray_methods.$indexSet(list, index, null);
    },
    countCodeUnits(string, codeUnit) {
      var t1, t2, count, t3;
      for (t1 = new A.CodeUnits(string), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListBase.E>")), t2 = t2._eval$1("ListBase.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === codeUnit)
          ++count;
      }
      return count;
    },
    findLineStart(context, text, column) {
      var beginningOfLine, index, lineStart;
      if (text.length === 0)
        for (beginningOfLine = 0; true;) {
          index = B.JSString_methods.indexOf$2(context, "\n", beginningOfLine);
          if (index === -1)
            return context.length - beginningOfLine >= column ? beginningOfLine : null;
          if (index - beginningOfLine >= column)
            return beginningOfLine;
          beginningOfLine = index + 1;
        }
      index = B.JSString_methods.indexOf$1(context, text);
      for (; index !== -1;) {
        lineStart = index === 0 ? 0 : B.JSString_methods.lastIndexOf$2(context, "\n", index - 1) + 1;
        if (column === index - lineStart)
          return lineStart;
        index = B.JSString_methods.indexOf$2(context, text, index + 1);
      }
      return null;
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  A.HttpException.prototype = {
    toString$0(_) {
      var t1 = "" + "HttpException: " + this.message,
        uri = this.uri;
      if (uri != null)
        t1 += ", uri = " + uri.toString$0(0);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isException: 1
  };
  A._HttpHeaders.prototype = {
    _HttpHeaders$3$defaultPortForScheme$initialHeaders(protocolVersion, defaultPortForScheme, initialHeaders) {
      var _this = this;
      if (initialHeaders != null) {
        initialHeaders.__http$_headers.forEach$1(0, new A._HttpHeaders_closure(_this));
        _this._contentLength = initialHeaders._contentLength;
        _this._persistentConnection = initialHeaders._persistentConnection;
        _this._chunkedTransferEncoding = initialHeaders._chunkedTransferEncoding;
        _this.__http$_host = initialHeaders.__http$_host;
        _this.__http$_port = initialHeaders.__http$_port;
      }
      if (_this.protocolVersion === "1.0")
        _this._chunkedTransferEncoding = _this._persistentConnection = false;
    },
    add$3$preserveHeaderCase(_, $name, value, preserveHeaderCase) {
      var lowercaseName, t1, t2, _this = this;
      if (!_this._mutable)
        A.throwExpression(A.HttpException$("HTTP headers are not mutable", null));
      lowercaseName = A._HttpHeaders__validateField($name);
      t1 = preserveHeaderCase && $name !== lowercaseName;
      t2 = _this._originalHeaderNames;
      if (t1) {
        if (t2 == null) {
          t1 = type$.String;
          t1 = _this._originalHeaderNames = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        } else
          t1 = t2;
        t1.$indexSet(0, lowercaseName, $name);
      } else if (t2 != null)
        t2.remove$1(0, lowercaseName);
      _this._addAll$2(lowercaseName, value);
    },
    add$2(_, $name, value) {
      return this.add$3$preserveHeaderCase(0, $name, value, false);
    },
    _addAll$2($name, value) {
      var t1, t2, v;
      if (type$.Iterable_dynamic._is(value))
        for (t1 = J.get$iterator$ax(value), t2 = type$.Object; t1.moveNext$0();) {
          v = t1.get$current(t1);
          this.__http$_add$2(0, $name, A._HttpHeaders__validateValue(v == null ? t2._as(v) : v));
        }
      else
        this.__http$_add$2(0, $name, A._HttpHeaders__validateValue(value));
    },
    $set$2(_, $name, value) {
      var lowercaseName, t1, _this = this;
      if (!_this._mutable)
        A.throwExpression(A.HttpException$("HTTP headers are not mutable", null));
      lowercaseName = A._HttpHeaders__validateField($name);
      _this.__http$_headers.remove$1(0, lowercaseName);
      t1 = _this._originalHeaderNames;
      if (t1 != null)
        t1.remove$1(0, lowercaseName);
      if (lowercaseName === "content-length")
        _this._contentLength = -1;
      if (lowercaseName === "transfer-encoding")
        _this._chunkedTransferEncoding = false;
      _this._addAll$2(lowercaseName, value);
    },
    remove$2(_, $name, value) {
      var t1, values, t2, _this = this;
      if (!_this._mutable)
        A.throwExpression(A.HttpException$("HTTP headers are not mutable", null));
      $name = A._HttpHeaders__validateField($name);
      value = A._HttpHeaders__validateValue(value);
      t1 = _this.__http$_headers;
      values = t1.$index(0, $name);
      if (values != null) {
        t2 = J.getInterceptor$ax(values);
        t2.remove$1(values, _this._valueToString$1(value));
        if (t2.get$isEmpty(values)) {
          t1.remove$1(0, $name);
          t1 = _this._originalHeaderNames;
          if (t1 != null)
            t1.remove$1(0, $name);
        }
      }
      if ($name === "transfer-encoding" && J.$eq$(value, "chunked"))
        _this._chunkedTransferEncoding = false;
    },
    forEach$1(_, action) {
      this.__http$_headers.forEach$1(0, new A._HttpHeaders_forEach_closure(this, type$.void_Function_2_String_and_List_String._as(action)));
    },
    set$persistentConnection(persistentConnection) {
      var originalName, _this = this,
        _s10_ = "connection",
        _s10_0 = "keep-alive";
      if (!_this._mutable)
        A.throwExpression(A.HttpException$("HTTP headers are not mutable", null));
      if (persistentConnection === _this._persistentConnection)
        return;
      originalName = _this._originalHeaderName$1(_s10_);
      if (persistentConnection)
        if (_this.protocolVersion === "1.1")
          _this.remove$2(0, _s10_, "close");
        else {
          if (_this._contentLength < 0)
            throw A.wrapException(A.HttpException$("Trying to set 'Connection: Keep-Alive' on HTTP 1.0 headers with no ContentLength", null));
          _this.add$3$preserveHeaderCase(0, originalName, _s10_0, true);
        }
      else if (_this.protocolVersion === "1.1")
        _this.add$3$preserveHeaderCase(0, originalName, "close", true);
      else
        _this.remove$2(0, _s10_, _s10_0);
      _this._persistentConnection = persistentConnection;
    },
    set$contentLength(contentLength) {
      var t1, _this = this,
        _s14_ = "content-length";
      if (!_this._mutable)
        A.throwExpression(A.HttpException$("HTTP headers are not mutable", null));
      t1 = _this.protocolVersion;
      if (t1 === "1.0" && _this._persistentConnection && contentLength === -1)
        throw A.wrapException(A.HttpException$("Trying to clear ContentLength on HTTP 1.0 headers with 'Connection: Keep-Alive' set", null));
      if (_this._contentLength === contentLength)
        return;
      _this._contentLength = contentLength;
      if (contentLength >= 0) {
        if (_this._chunkedTransferEncoding)
          _this.set$chunkedTransferEncoding(false);
        _this.__http$_headers.$indexSet(0, _s14_, A._setArrayType([B.JSInt_methods.toString$0(contentLength)], type$.JSArray_String));
      } else {
        _this.__http$_headers.remove$1(0, _s14_);
        if (t1 === "1.1")
          _this.set$chunkedTransferEncoding(true);
      }
    },
    set$chunkedTransferEncoding(chunkedTransferEncoding) {
      var values, _this = this,
        _s17_ = "transfer-encoding",
        _s7_ = "chunked";
      if (!_this._mutable)
        A.throwExpression(A.HttpException$("HTTP headers are not mutable", null));
      if (chunkedTransferEncoding && _this.protocolVersion === "1.0")
        throw A.wrapException(A.HttpException$("Trying to set 'Transfer-Encoding: Chunked' on HTTP 1.0 headers", null));
      if (chunkedTransferEncoding === _this._chunkedTransferEncoding)
        return;
      if (chunkedTransferEncoding) {
        values = _this.__http$_headers.$index(0, _s17_);
        if (values == null || !J.contains$1$asx(values, _s7_))
          _this._addValue$2(_s17_, _s7_);
        _this.set$contentLength(-1);
      } else
        _this.remove$2(0, _s17_, _s7_);
      _this._chunkedTransferEncoding = chunkedTransferEncoding;
    },
    set$date(date) {
      if (!this._mutable)
        A.throwExpression(A.HttpException$("HTTP headers are not mutable", null));
      this.__http$_headers.$indexSet(0, "date", A._setArrayType([A.HttpDate_format(date.toUtc$0())], type$.JSArray_String));
    },
    __http$_add$2(_, $name, value) {
      var t1, _this = this, _null = null,
        _s33_ = "Unexpected type for header named ",
        _s28_ = "HTTP headers are not mutable",
        _s39_ = "Content-Length must contain only digits",
        _s17_ = "transfer-encoding",
        _s17_0 = "if-modified-since";
      switch ($name.length) {
        case 4:
          if ("date" === $name) {
            if (value instanceof A.DateTime)
              _this.set$date(value);
            else if (typeof value == "string")
              _this.__http$_headers.$indexSet(0, "date", A._setArrayType([value], type$.JSArray_String));
            else
              A.throwExpression(A.HttpException$(_s33_ + $name, _null));
            return;
          }
          if ("host" === $name) {
            _this._addHost$2($name, value);
            return;
          }
          break;
        case 7:
          if ("expires" === $name) {
            if (value instanceof A.DateTime) {
              if (!_this._mutable)
                A.throwExpression(A.HttpException$(_s28_, _null));
              _this.__http$_headers.$indexSet(0, "expires", A._setArrayType([A.HttpDate_format(value.toUtc$0())], type$.JSArray_String));
            } else if (typeof value == "string")
              _this.__http$_headers.$indexSet(0, "expires", A._setArrayType([value], type$.JSArray_String));
            else
              A.throwExpression(A.HttpException$(_s33_ + $name, _null));
            return;
          }
          break;
        case 10:
          if ("connection" === $name) {
            _this._addConnection$2($name, A._asString(value));
            return;
          }
          break;
        case 12:
          if ("content-type" === $name) {
            _this.__http$_headers.$indexSet(0, "content-type", A._setArrayType([A._asString(value)], type$.JSArray_String));
            return;
          }
          break;
        case 14:
          if ("content-length" === $name) {
            if (A._isInt(value)) {
              if (value < 0)
                A.throwExpression(A.HttpException$(_s39_, _null));
            } else if (typeof value == "string") {
              t1 = $.$get$_digitsValidator();
              if (!t1._nativeRegExp.test(value))
                A.throwExpression(A.HttpException$(_s39_, _null));
              value = A.int_parse(value, _null);
            } else
              A.throwExpression(A.HttpException$(_s33_ + $name, _null));
            _this.set$contentLength(value);
            return;
          }
          break;
        case 17:
          if (_s17_ === $name) {
            if (J.$eq$(value, "chunked"))
              _this.set$chunkedTransferEncoding(true);
            else
              _this._addValue$2(_s17_, value);
            return;
          }
          if (_s17_0 === $name) {
            if (value instanceof A.DateTime) {
              if (!_this._mutable)
                A.throwExpression(A.HttpException$(_s28_, _null));
              _this.__http$_headers.$indexSet(0, _s17_0, A._setArrayType([A.HttpDate_format(value.toUtc$0())], type$.JSArray_String));
            } else if (typeof value == "string")
              _this.__http$_headers.$indexSet(0, _s17_0, A._setArrayType([value], type$.JSArray_String));
            else
              A.throwExpression(A.HttpException$(_s33_ + $name, _null));
            return;
          }
          break;
      }
      _this._addValue$2($name, value);
    },
    _addHost$2($name, value) {
      var pos, t1, exception, _this = this;
      if (typeof value == "string") {
        pos = B.JSString_methods.lastIndexOf$1(value, ":");
        if (!J.$eq$(pos, -1))
          t1 = B.JSString_methods.startsWith$1(value, "[") && B.JSString_methods.endsWith$1(value, "]");
        else
          t1 = true;
        if (t1) {
          _this.__http$_host = value;
          _this.__http$_port = 80;
        } else {
          t1 = pos;
          if (typeof t1 !== "number")
            return t1.$gt();
          if (t1 > 0)
            _this.__http$_host = B.JSString_methods.substring$2(value, 0, pos);
          else
            _this.__http$_host = null;
          t1 = pos;
          if (typeof t1 !== "number")
            return t1.$add();
          if (t1 + 1 === value.length)
            _this.__http$_port = 80;
          else
            try {
              t1 = pos;
              if (typeof t1 !== "number")
                return t1.$add();
              _this.__http$_port = A.int_parse(B.JSString_methods.substring$1(value, t1 + 1), null);
            } catch (exception) {
              if (type$.FormatException._is(A.unwrapException(exception)))
                _this.__http$_port = null;
              else
                throw exception;
            }
        }
        _this.__http$_headers.$indexSet(0, "host", A._setArrayType([value], type$.JSArray_String));
      } else
        throw A.wrapException(A.HttpException$("Unexpected type for header named " + $name, null));
    },
    _addConnection$2($name, value) {
      var lowerCaseValue = value.toLowerCase();
      if (lowerCaseValue === "close")
        this._persistentConnection = false;
      else if (lowerCaseValue === "keep-alive")
        this._persistentConnection = true;
      this._addValue$2($name, value);
    },
    _addValue$2($name, value) {
      var t1 = this.__http$_headers,
        values = t1.$index(0, $name);
      if (values == null) {
        values = A._setArrayType([], type$.JSArray_String);
        t1.$indexSet(0, $name, values);
      }
      J.add$1$ax(values, this._valueToString$1(value));
    },
    _valueToString$1(value) {
      if (value instanceof A.DateTime)
        return A.HttpDate_format(value);
      else if (typeof value == "string")
        return value;
      else
        return A._asString(A._HttpHeaders__validateValue(J.toString$0$(value)));
    },
    _foldHeader$1($name) {
      if ($name === "set-cookie")
        return false;
      return true;
    },
    _build$1(builder) {
      this.__http$_headers.forEach$1(0, new A._HttpHeaders__build_closure(this, null, builder));
    },
    toString$0(_) {
      var t1,
        sb = new A.StringBuffer("");
      this.__http$_headers.forEach$1(0, new A._HttpHeaders_toString_closure(this, sb));
      t1 = sb._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _parseCookies$0() {
      var t1,
        cookies = A._setArrayType([], type$.JSArray_Cookie),
        parseCookieString = new A._HttpHeaders__parseCookies_parseCookieString(cookies),
        values = this.__http$_headers.$index(0, "cookie");
      if (values != null)
        for (t1 = J.get$iterator$ax(values); t1.moveNext$0();)
          parseCookieString.call$1(t1.get$current(t1));
      return cookies;
    },
    _originalHeaderName$1($name) {
      var t1 = this._originalHeaderNames;
      t1 = t1 == null ? null : t1.$index(0, $name);
      return t1 == null ? $name : t1;
    },
    $isHttpHeaders: 1
  };
  A._HttpHeaders_closure.prototype = {
    call$2($name, value) {
      A._asString($name);
      type$.List_String._as(value);
      this.$this.__http$_headers.$indexSet(0, $name, value);
      return value;
    },
    $signature: 9
  };
  A._HttpHeaders_forEach_closure.prototype = {
    call$2($name, values) {
      A._asString($name);
      type$.List_String._as(values);
      this.action.call$2(this.$this._originalHeaderName$1($name), values);
    },
    $signature: 9
  };
  A._HttpHeaders__build_closure.prototype = {
    call$2($name, values) {
      var t1, originalName, fold, nameData, t2, i;
      A._asString($name);
      type$.List_String._as(values);
      if (this.ignoreHeader === $name)
        return;
      t1 = this.$this;
      originalName = t1._originalHeaderName$1($name);
      fold = t1._foldHeader$1($name);
      nameData = new A.CodeUnits(originalName);
      t1 = this.builder;
      t1.add$1(0, nameData);
      t1.addByte$1(58);
      t1.addByte$1(32);
      for (t2 = J.getInterceptor$asx(values), i = 0; i < t2.get$length(values); ++i) {
        if (i > 0)
          if (fold) {
            t1.addByte$1(44);
            t1.addByte$1(32);
          } else {
            t1.addByte$1(13);
            t1.addByte$1(10);
            t1.add$1(0, nameData);
            t1.addByte$1(58);
            t1.addByte$1(32);
          }
        t1.add$1(0, new A.CodeUnits(t2.$index(values, i)));
      }
      t1.addByte$1(13);
      t1.addByte$1(10);
    },
    $signature: 9
  };
  A._HttpHeaders_toString_closure.prototype = {
    call$2($name, values) {
      var t1, originalName, t2, fold, i, t3;
      A._asString($name);
      type$.List_String._as(values);
      t1 = this.$this;
      originalName = t1._originalHeaderName$1($name);
      t2 = this.sb;
      t2._contents = (t2._contents += originalName) + ": ";
      fold = t1._foldHeader$1($name);
      for (t1 = J.getInterceptor$asx(values), i = 0; i < t1.get$length(values); ++i) {
        if (i > 0) {
          t3 = t2._contents;
          if (fold)
            t2._contents = t3 + ", ";
          else {
            t3 += "\n";
            t2._contents = t3;
            t3 += originalName;
            t2._contents = t3;
            t2._contents = t3 + ": ";
          }
        }
        t3 = t1.$index(values, i);
        t2._contents += t3;
      }
      t2._contents += "\n";
    },
    $signature: 9
  };
  A._HttpHeaders__parseCookies_parseCookieString.prototype = {
    call$1(s) {
      var $name, value, done, skipWS, parseName, parseValue, expect, t1, exception, _box_0 = {};
      _box_0.index = 0;
      done = new A._HttpHeaders__parseCookies_parseCookieString_done(_box_0, s);
      skipWS = new A._HttpHeaders__parseCookies_parseCookieString_skipWS(_box_0, done, s);
      parseName = new A._HttpHeaders__parseCookies_parseCookieString_parseName(_box_0, done, s);
      parseValue = new A._HttpHeaders__parseCookies_parseCookieString_parseValue(_box_0, done, s);
      expect = new A._HttpHeaders__parseCookies_parseCookieString_expect(_box_0, done, s);
      for (t1 = this.cookies; !done.call$0();) {
        skipWS.call$0();
        if (done.call$0())
          return;
        $name = parseName.call$0();
        skipWS.call$0();
        if (!expect.call$1("=")) {
          _box_0.index = B.JSString_methods.indexOf$2(s, ";", _box_0.index);
          continue;
        }
        skipWS.call$0();
        value = parseValue.call$0();
        try {
          B.JSArray_methods.add$1(t1, new A._Cookie(A._Cookie__validateName($name), A._Cookie__validateValue(value)));
        } catch (exception) {
        }
        skipWS.call$0();
        if (done.call$0())
          return;
        if (!expect.call$1(";")) {
          _box_0.index = B.JSString_methods.indexOf$2(s, ";", _box_0.index);
          continue;
        }
      }
    },
    $signature: 33
  };
  A._HttpHeaders__parseCookies_parseCookieString_done.prototype = {
    call$0() {
      var t1 = this._box_0.index;
      return t1 === -1 || t1 === this.s.length;
    },
    $signature: 55
  };
  A._HttpHeaders__parseCookies_parseCookieString_skipWS.prototype = {
    call$0() {
      var t1, t2, t3, t4, t5, t6;
      for (t1 = this.done, t2 = this._box_0, t3 = this.s, t4 = t3.length; !t1.call$0();) {
        t5 = t2.index;
        if (!(t5 >= 0 && t5 < t4))
          return A.ioore(t3, t5);
        t6 = t3[t5];
        if (t6 !== " " && t6 !== "\t")
          return;
        t2.index = t5 + 1;
      }
    },
    $signature: 0
  };
  A._HttpHeaders__parseCookies_parseCookieString_parseName.prototype = {
    call$0() {
      var t2, t3, t4, t5, t6,
        t1 = this._box_0,
        start = t1.index;
      for (t2 = this.done, t3 = this.s, t4 = t3.length; !t2.call$0();) {
        t5 = t1.index;
        if (!(t5 >= 0 && t5 < t4))
          return A.ioore(t3, t5);
        t6 = t3[t5];
        if (t6 === " " || t6 === "\t" || t6 === "=")
          break;
        t1.index = t5 + 1;
      }
      return B.JSString_methods.substring$2(t3, start, t1.index);
    },
    $signature: 36
  };
  A._HttpHeaders__parseCookies_parseCookieString_parseValue.prototype = {
    call$0() {
      var t2, t3, t4, t5, t6,
        t1 = this._box_0,
        start = t1.index;
      for (t2 = this.done, t3 = this.s, t4 = t3.length; !t2.call$0();) {
        t5 = t1.index;
        if (!(t5 >= 0 && t5 < t4))
          return A.ioore(t3, t5);
        t6 = t3[t5];
        if (t6 === " " || t6 === "\t" || t6 === ";")
          break;
        t1.index = t5 + 1;
      }
      return B.JSString_methods.substring$2(t3, start, t1.index);
    },
    $signature: 36
  };
  A._HttpHeaders__parseCookies_parseCookieString_expect.prototype = {
    call$1(expected) {
      var t1, t2, t3;
      if (this.done.call$0())
        return false;
      t1 = this.s;
      t2 = this._box_0;
      t3 = t2.index;
      if (!(t3 >= 0 && t3 < t1.length))
        return A.ioore(t1, t3);
      if (t1[t3] !== expected)
        return false;
      t2.index = t3 + 1;
      return true;
    },
    $signature: 2
  };
  A._HeaderValue.prototype = {
    _HeaderValue$2(_value, parameters) {
      var t1 = parameters.get$isNotEmpty(parameters);
      if (t1)
        this._parameters = A.HashMap_HashMap$from(parameters, type$.String, type$.nullable_String);
    },
    _ensureParameters$0() {
      var t1 = this._parameters;
      return t1 == null ? this._parameters = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_String) : t1;
    },
    toString$0(_) {
      var parameters, t1,
        sb = new A.StringBuffer("");
      sb._contents = "" + this.__http$_value;
      parameters = this._parameters;
      if (parameters != null && parameters.get$isNotEmpty(parameters))
        parameters.forEach$1(0, new A._HeaderValue_toString_closure(sb));
      t1 = sb._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._HeaderValue_toString_closure.prototype = {
    call$2($name, value) {
      var t1, t2, t3, start, i, codeUnit;
      A._asString($name);
      A._asStringQ(value);
      t1 = this.sb;
      t2 = (t1._contents += "; ") + $name;
      t1._contents = t2;
      if (value != null) {
        t1._contents = t2 + "=";
        t2 = A._HeaderValue__isToken(value);
        t3 = t1._contents;
        if (t2)
          t1._contents = t3 + value;
        else {
          t1._contents = t3 + '"';
          for (t2 = value.length, start = 0, i = 0; i < t2; ++i) {
            codeUnit = value.charCodeAt(i);
            if (codeUnit === 92 || codeUnit === 34) {
              t1._contents = (t1._contents += B.JSString_methods.substring$2(value, start, i)) + "\\";
              start = i;
            }
          }
          t1._contents = (t1._contents += B.JSString_methods.substring$1(value, start)) + '"';
        }
      }
    },
    $signature: 49
  };
  A._ContentType.prototype = {
    _ContentType$4(primaryType, subType, charset, parameters) {
      var _this = this,
        t1 = new A._ContentType_emptyIfNull();
      _this._primaryType = t1.call$1(_this._primaryType);
      t1 = t1.call$1(_this._subType);
      _this._subType = t1;
      _this.__http$_value = _this._primaryType + "/" + t1;
      parameters.forEach$1(0, new A._ContentType_closure(_this._ensureParameters$0()));
      _this._ensureParameters$0().$indexSet(0, "charset", charset.toLowerCase());
    },
    $isContentType: 1
  };
  A._ContentType_emptyIfNull.prototype = {
    call$1(string) {
      return string;
    },
    $signature: 46
  };
  A._ContentType_closure.prototype = {
    call$2(key, value) {
      var lowerCaseKey;
      A._asString(key);
      A._asStringQ(value);
      lowerCaseKey = key.toLowerCase();
      if (lowerCaseKey === "charset")
        value = value == null ? null : value.toLowerCase();
      this.parameterMap.$indexSet(0, lowerCaseKey, value);
    },
    $signature: 49
  };
  A._Cookie.prototype = {
    toString$0(_) {
      var _this = this,
        t1 = "" + _this.__http$_name + "=" + _this.__http$_value,
        t2 = _this._path;
      if (t2 != null)
        t1 = t1 + "; Path=" + t2;
      if (_this.httpOnly)
        t1 += "; HttpOnly";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isCookie: 1
  };
  A._ServiceObject.prototype = {
    get$_serviceId() {
      var t1 = this._ServiceObject___serviceId;
      if (t1 === 0) {
        t1 = $._nextServiceId;
        $._nextServiceId = t1 + 1;
        this._ServiceObject___serviceId = t1;
      }
      return t1;
    }
  };
  A._CopyingBytesBuilder.prototype = {
    add$1(_, bytes) {
      var t1, bytesLength, required, i, t2, t3, t4, _this = this;
      type$.List_int._as(bytes);
      t1 = J.getInterceptor$asx(bytes);
      bytesLength = t1.get$length(bytes);
      if (bytesLength === 0)
        return;
      required = _this.__http$_length + bytesLength;
      if (_this.__http$_buffer.length < required)
        _this.__http$_grow$1(required);
      for (i = 0; i < bytesLength; ++i) {
        t2 = _this.__http$_buffer;
        t3 = _this.__http$_length + i;
        t4 = t1.$index(bytes, i);
        t2.$flags & 2 && A.throwUnsupportedOperation(t2);
        if (!(t3 >= 0 && t3 < t2.length))
          return A.ioore(t2, t3);
        t2[t3] = t4;
      }
      _this.__http$_length = required;
    },
    addByte$1(byte) {
      var _this = this,
        t1 = _this.__http$_buffer,
        t2 = _this.__http$_length;
      if (t1.length === t2)
        _this.__http$_grow$1(t2);
      t1 = _this.__http$_buffer;
      t2 = _this.__http$_length;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      if (!(t2 >= 0 && t2 < t1.length))
        return A.ioore(t1, t2);
      t1[t2] = byte;
      _this.__http$_length = t2 + 1;
    },
    __http$_grow$1(required) {
      var newBuffer, t1,
        newSize = required * 2;
      newSize = newSize < 1024 ? 1024 : A._CopyingBytesBuilder__pow2roundup(newSize);
      newBuffer = new Uint8Array(newSize);
      t1 = this.__http$_buffer;
      B.NativeUint8List_methods.setRange$3(newBuffer, 0, t1.length, t1);
      this.__http$_buffer = newBuffer;
    },
    takeBytes$0() {
      var buffer, _this = this;
      if (_this.__http$_length === 0)
        return $.$get$_CopyingBytesBuilder__emptyList();
      buffer = J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(_this.__http$_buffer), _this.__http$_buffer.byteOffset, _this.__http$_length);
      _this.__http$_length = 0;
      _this.__http$_buffer = $.$get$_CopyingBytesBuilder__emptyList();
      return buffer;
    },
    get$length(_) {
      return this.__http$_length;
    },
    $isBytesBuilder: 1
  };
  A._HttpIncoming.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      type$.nullable_void_Function_Uint8List._as(onData);
      type$.nullable_void_Function._as(onDone);
      this.hasSubscriber = true;
      return this.__http$_stream.handleError$2$test(new A._HttpIncoming_listen_closure(this), new A._HttpIncoming_listen_closure0()).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A._HttpIncoming_listen_closure.prototype = {
    call$1(error) {
      throw A.wrapException(A.HttpException$(type$.HttpException._as(error).message, this.$this.uri));
    },
    $signature: 67
  };
  A._HttpIncoming_listen_closure0.prototype = {
    call$1(error) {
      return error instanceof A.HttpException;
    },
    $signature: 102
  };
  A._HttpInboundMessage.prototype = {};
  A._HttpRequest.prototype = {
    _HttpRequest$4(response, _incoming, _httpServer, _httpConnection) {
      var t2, t3, t4, t5, t6, t7, _this = this,
        t1 = _this._incoming.headers;
      if (t1.protocolVersion === "1.1") {
        t2 = _this.response.headers;
        t2.set$chunkedTransferEncoding(true);
        t2.set$persistentConnection(t1._persistentConnection);
      }
      t2 = _this._httpServer;
      if (t2._sessionManagerInstance != null) {
        t3 = _this._cookies;
        t1 = t3 == null ? _this._cookies = t1._parseCookies$0() : t3;
        t3 = A._arrayInstanceType(t1);
        t4 = t3._eval$1("bool(1)")._as(new A._HttpRequest_closure());
        t5 = t3._eval$1("String(1)")._as(new A._HttpRequest_closure0());
        for (t1 = new A.MappedIterator(new A.WhereIterable(t1, t4, t3._eval$1("WhereIterable<1>")).get$iterator(0), t5, t3._eval$1("MappedIterator<1,String>")), t3 = t3._eval$1("String"), t4 = type$.String, t5 = type$._HttpSession; t1.moveNext$0();) {
          t6 = t1.__internal$_current;
          if (t6 == null)
            t6 = t3._as(t6);
          t7 = t2._sessionManagerInstance;
          _this._session = (t7 == null ? t2._sessionManagerInstance = new A._HttpSessionManager(A.LinkedHashMap_LinkedHashMap$_empty(t4, t5)) : t7)._sessions.$index(0, t6);
        }
      }
    },
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return this._incoming.listen$4$cancelOnError$onDone$onError(type$.nullable_void_Function_Uint8List._as(onData), cancelOnError, type$.nullable_void_Function._as(onDone), onError);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    get$requestedUri() {
      var t1, t2, proto, scheme, hostList, host, t3, _this = this,
        requestedUri = _this._requestedUri;
      if (requestedUri != null)
        return requestedUri;
      t1 = _this._incoming;
      if (t1.uri.get$hasScheme()) {
        t1 = t1.uri;
        t1.toString;
        return _this._requestedUri = t1;
      }
      t2 = t1.headers.__http$_headers;
      proto = t2.$index(0, A._HttpHeaders__validateField("x-forwarded-proto"));
      if (proto != null)
        scheme = J.get$first$ax(proto);
      else
        scheme = "http";
      hostList = t2.$index(0, A._HttpHeaders__validateField("x-forwarded-host"));
      if (hostList != null)
        host = J.get$first$ax(hostList);
      else {
        hostList = t2.$index(0, A._HttpHeaders__validateField("host"));
        if (hostList != null)
          host = J.get$first$ax(hostList);
        else {
          t2 = _this._httpServer;
          t3 = t2.get$address();
          host = A.S(t3.get$host(t3)) + ":" + A.S(t2.get$port(0));
        }
      }
      return _this._requestedUri = A.Uri_parse(scheme + "://" + host + t1.uri.toString$0(0));
    },
    $isHttpRequest: 1
  };
  A._HttpRequest_closure.prototype = {
    call$1(cookie) {
      return type$.Cookie._as(cookie).__http$_name.toUpperCase() === "DARTSESSID";
    },
    $signature: 76
  };
  A._HttpRequest_closure0.prototype = {
    call$1(cookie) {
      return type$.Cookie._as(cookie).__http$_value;
    },
    $signature: 118
  };
  A._StreamSinkImpl.prototype = {
    add$1(_, data) {
      A._instanceType(this)._eval$1("_StreamSinkImpl.T")._as(data);
      if (this.__http$_isClosed)
        throw A.wrapException(A.StateError$("StreamSink is closed"));
      this.get$__http$_controller().add$1(0, data);
    },
    addError$2(error, stackTrace) {
      if (this.__http$_isClosed)
        throw A.wrapException(A.StateError$("StreamSink is closed"));
      this.get$__http$_controller().addError$2(error, stackTrace);
    },
    addStream$1(_, stream) {
      var t1, controller, future, _this = this;
      A._instanceType(_this)._eval$1("Stream<_StreamSinkImpl.T>")._as(stream);
      if (_this._isBound)
        throw A.wrapException(A.StateError$("StreamSink is already bound to a stream"));
      _this._isBound = true;
      if (_this._hasError)
        return _this._doneCompleter.future;
      t1 = new A._StreamSinkImpl_addStream_targetAddStream(_this, stream);
      controller = _this._controllerInstance;
      if (controller == null)
        return t1.call$0();
      future = _this._controllerCompleter.future;
      controller.close$0(0);
      return future.then$1$1(new A._StreamSinkImpl_addStream_closure(t1), type$.dynamic);
    },
    close$0(_) {
      var controller, _this = this;
      if (_this._isBound)
        throw A.wrapException(A.StateError$("StreamSink is bound to a stream"));
      if (!_this.__http$_isClosed) {
        _this.__http$_isClosed = true;
        controller = _this._controllerInstance;
        if (controller != null)
          controller.close$0(0);
        else
          _this._closeTarget$0();
      }
      return _this._doneCompleter.future;
    },
    _closeTarget$0() {
      this._target.close$0(0).then$1$2$onError(this.get$_completeDoneValue(), this.get$_completeDoneError(), type$.void);
    },
    _completeDoneValue$1(value) {
      var t1 = this._doneCompleter;
      if ((t1.future._state & 30) === 0)
        t1.complete$1(0, value);
    },
    _completeDoneError$2(error, stackTrace) {
      var t1;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      t1 = this._doneCompleter;
      if ((t1.future._state & 30) === 0) {
        this._hasError = true;
        t1.completeError$2(error, stackTrace);
      }
    },
    get$__http$_controller() {
      var t1, _this = this, _null = null;
      if (_this._isBound)
        throw A.wrapException(A.StateError$("StreamSink is bound to a stream"));
      if (_this.__http$_isClosed)
        throw A.wrapException(A.StateError$("StreamSink is closed"));
      if (_this._controllerInstance == null) {
        _this._controllerInstance = A.StreamController_StreamController(_null, _null, _null, _null, true, A._instanceType(_this)._eval$1("_StreamSinkImpl.T"));
        _this._controllerCompleter = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_dynamic), type$._AsyncCompleter_dynamic);
        t1 = _this.get$__http$_controller();
        _this._target.addStream$1(0, new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>"))).then$1$2$onError(new A._StreamSinkImpl__controller_closure(_this), new A._StreamSinkImpl__controller_closure0(_this), type$.Null);
      }
      t1 = _this._controllerInstance;
      t1.toString;
      return t1;
    },
    $isEventSink: 1,
    $isStreamConsumer: 1,
    $isStreamSink: 1,
    $isSink: 1
  };
  A._StreamSinkImpl_addStream_targetAddStream.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1._target.addStream$1(0, this.stream).whenComplete$1(new A._StreamSinkImpl_addStream_targetAddStream_closure(t1));
    },
    $signature: 6
  };
  A._StreamSinkImpl_addStream_targetAddStream_closure.prototype = {
    call$0() {
      this.$this._isBound = false;
    },
    $signature: 1
  };
  A._StreamSinkImpl_addStream_closure.prototype = {
    call$1(__wc0_formal) {
      return this.targetAddStream.call$0();
    },
    $signature: 48
  };
  A._StreamSinkImpl__controller_closure.prototype = {
    call$1(__wc0_formal) {
      var t1 = this.$this;
      if (t1._isBound) {
        t1._controllerCompleter.complete$1(0, t1);
        t1._controllerInstance = t1._controllerCompleter = null;
      } else
        t1._closeTarget$0();
    },
    $signature: 3
  };
  A._StreamSinkImpl__controller_closure0.prototype = {
    call$2(error, stackTrace) {
      var t1;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      t1 = this.$this;
      if (t1._isBound) {
        t1._controllerCompleter.completeError$2(error, stackTrace);
        t1._controllerInstance = t1._controllerCompleter = null;
      } else
        t1._completeDoneError$2(error, stackTrace);
    },
    $signature: 15
  };
  A._IOSinkImpl.prototype = {$isStringSink: 1};
  A._HttpOutboundMessage.prototype = {
    add$1(_, data) {
      type$.List_int._as(data);
      if (J.get$isEmpty$asx(data))
        return;
      this.super$_StreamSinkImpl$add(0, data);
    },
    addStream$1(_, s) {
      var t1 = this.super$_StreamSinkImpl$addStream(0, type$.Stream_List_int._as(s));
      return t1;
    }
  };
  A._HttpResponse.prototype = {
    set$statusCode(_, statusCode) {
      if (this._outgoing.headersWritten)
        throw A.wrapException(A.StateError$("Header already sent"));
      this._statusCode = statusCode;
    },
    detachSocket$1$writeHeaders(writeHeaders) {
      var future, _this = this,
        t1 = _this._outgoing;
      if (t1.headersWritten)
        throw A.wrapException(A.StateError$("Headers already sent"));
      _this.set$deadline(null);
      future = _this._httpRequest._httpConnection.detachSocket$0();
      t1.headersWritten = true;
      _this.close$0(0);
      _this._doneCompleter.future.catchError$1(new A._HttpResponse_detachSocket_closure());
      return future;
    },
    set$deadline(d) {
      var t1 = this._deadlineTimer;
      if (t1 != null)
        t1.cancel$0(0);
      return;
    },
    _writeHeader$0() {
      var buffer, t2, headerBytes, _this = this,
        t1 = A._CopyingBytesBuilder__pow2roundup(8192);
      t1 = new Uint8Array(t1);
      buffer = new A._CopyingBytesBuilder(t1);
      t1 = _this.headers;
      if (t1.protocolVersion === "1.1")
        buffer.add$1(0, B.List_mxl);
      else
        buffer.add$1(0, B.List_Dw9);
      buffer.addByte$1(32);
      buffer.add$1(0, new A.CodeUnits(B.JSInt_methods.toString$0(_this._statusCode)));
      buffer.addByte$1(32);
      buffer.add$1(0, new A.CodeUnits(_this._findReasonPhrase$1(_this._statusCode)));
      buffer.addByte$1(13);
      buffer.addByte$1(10);
      _this._httpRequest.toString;
      t2 = _this._cookies;
      if (t2 != null)
        B.JSArray_methods.forEach$1(t2, new A._HttpResponse__writeHeader_closure(_this));
      t1._mutable = false;
      t1._build$1(buffer);
      buffer.addByte$1(13);
      buffer.addByte$1(10);
      headerBytes = buffer.takeBytes$0();
      t1 = _this._outgoing;
      t1.__http$_buffer = type$.List_int._as(headerBytes);
      t1.__http$_length = headerBytes.length;
    },
    _findReasonPhrase$1(statusCode) {
      switch (statusCode) {
        case 100:
          return "Continue";
        case 101:
          return "Switching Protocols";
        case 200:
          return "OK";
        case 201:
          return "Created";
        case 202:
          return "Accepted";
        case 203:
          return "Non-Authoritative Information";
        case 204:
          return "No Content";
        case 205:
          return "Reset Content";
        case 206:
          return "Partial Content";
        case 300:
          return "Multiple Choices";
        case 301:
          return "Moved Permanently";
        case 302:
          return "Found";
        case 303:
          return "See Other";
        case 304:
          return "Not Modified";
        case 305:
          return "Use Proxy";
        case 307:
          return "Temporary Redirect";
        case 400:
          return "Bad Request";
        case 401:
          return "Unauthorized";
        case 402:
          return "Payment Required";
        case 403:
          return "Forbidden";
        case 404:
          return "Not Found";
        case 405:
          return "Method Not Allowed";
        case 406:
          return "Not Acceptable";
        case 407:
          return "Proxy Authentication Required";
        case 408:
          return "Request Time-out";
        case 409:
          return "Conflict";
        case 410:
          return "Gone";
        case 411:
          return "Length Required";
        case 412:
          return "Precondition Failed";
        case 413:
          return "Request Entity Too Large";
        case 414:
          return "Request-URI Too Long";
        case 415:
          return "Unsupported Media Type";
        case 416:
          return "Requested range not satisfiable";
        case 417:
          return "Expectation Failed";
        case 500:
          return "Internal Server Error";
        case 501:
          return "Not Implemented";
        case 502:
          return "Bad Gateway";
        case 503:
          return "Service Unavailable";
        case 504:
          return "Gateway Time-out";
        case 505:
          return "Http Version not supported";
        default:
          return "Status " + statusCode;
      }
    },
    $isHttpResponse: 1
  };
  A._HttpResponse_detachSocket_closure.prototype = {
    call$1(__wc0_formal) {
    },
    $signature: 3
  };
  A._HttpResponse__writeHeader_closure.prototype = {
    call$1(cookie) {
      this.$this.headers.add$2(0, "set-cookie", type$.Cookie._as(cookie));
    },
    $signature: 71
  };
  A._HttpOutgoing.prototype = {
    writeHeaders$2$drainRequest$setOutgoing(drainRequest, setOutgoing) {
      var response, t1, drainFuture, contentLength, _this = this, _null = null;
      if (_this.headersWritten)
        return _null;
      _this.headersWritten = true;
      response = _this.outbound;
      t1 = response._httpRequest;
      t1.toString;
      drainFuture = drainRequest && !t1._incoming.hasSubscriber ? t1.drain$1$0(type$.void).catchError$1(new A._HttpOutgoing_writeHeaders_closure()) : _null;
      if (!_this.ignoreBody) {
        if (setOutgoing) {
          t1 = response.headers;
          contentLength = t1._contentLength;
          if (t1._chunkedTransferEncoding)
            _this.chunked = true;
          else if (contentLength >= 0)
            _this.contentLength = contentLength;
        }
        if (drainFuture != null)
          return drainFuture.then$1$1(new A._HttpOutgoing_writeHeaders_closure0(response), type$.void);
      }
      response._writeHeader$0();
      return _null;
    },
    writeHeaders$0() {
      return this.writeHeaders$2$drainRequest$setOutgoing(true, true);
    },
    addStream$1(_, stream) {
      var t1, future, controller, sub, _this = this, _null = null;
      type$.Stream_List_int._as(stream);
      if (_this._socketError) {
        stream.listen$1(_null).cancel$0(0);
        return A.Future_Future$value(_this.outbound, type$.dynamic);
      }
      if (_this.ignoreBody) {
        t1 = type$.dynamic;
        stream.drain$1$0(t1).catchError$1(new A._HttpOutgoing_addStream_closure());
        future = _this.writeHeaders$0();
        if (future != null)
          return future.then$1$1(new A._HttpOutgoing_addStream_closure0(_this), t1);
        return _this.close$0(0);
      }
      controller = A.StreamController_StreamController(_null, _null, _null, _null, true, type$.List_int);
      sub = stream.listen$4$cancelOnError$onDone$onError(new A._HttpOutgoing_addStream_onData(_this, controller), true, controller.get$close(controller), controller.get$addError());
      controller.set$onCancel(0, sub.get$cancel(sub));
      controller.set$onPause(0, sub.get$pause(sub));
      controller.set$onResume(0, sub.get$resume(sub));
      if (!_this.headersWritten) {
        future = _this.writeHeaders$0();
        if (future != null)
          sub.pause$1(0, future);
      }
      return _this.socket.addStream$1(0, new A._ControllerStream(controller, A._instanceType(controller)._eval$1("_ControllerStream<1>"))).then$1$2$onError(new A._HttpOutgoing_addStream_closure1(_this), new A._HttpOutgoing_addStream_closure2(_this), type$.dynamic);
    },
    close$0(_) {
      var t1, t2, t3, error, contentLength, future, _this = this,
        closeFuture = _this._closeFuture;
      if (closeFuture != null)
        return closeFuture;
      t1 = _this.outbound;
      t1.toString;
      if (_this._socketError)
        return A.Future_Future$value(t1, type$.dynamic);
      if (t1._httpRequest._httpConnection.__http$_state === 2)
        return A.Future_Future$value(t1, type$.dynamic);
      if (!_this.headersWritten && !_this.ignoreBody) {
        t2 = t1.headers;
        t3 = t2._contentLength;
        if (t3 === -1) {
          t2.set$chunkedTransferEncoding(false);
          t2.set$contentLength(0);
        } else if (t3 > 0) {
          error = new A.HttpException("No content even though contentLength was specified to be greater than 0: " + t3 + ".", t1.__http$_uri);
          _this._doneCompleter.completeError$1(error);
          t1 = A._interceptUserError(error, null);
          t2 = new A._Future($.Zone__current, type$._Future_dynamic);
          t2._asyncCompleteErrorObject$1(t1);
          return _this._closeFuture = t2;
        }
      }
      contentLength = _this.contentLength;
      if (contentLength != null) {
        t2 = _this._bytesWritten;
        if (t2 < contentLength) {
          error = new A.HttpException("Content size below specified contentLength.  " + t2 + " bytes written but expected " + A.S(contentLength) + ".", t1.__http$_uri);
          _this._doneCompleter.completeError$1(error);
          t1 = A._interceptUserError(error, null);
          t2 = new A._Future($.Zone__current, type$._Future_dynamic);
          t2._asyncCompleteErrorObject$1(t1);
          return _this._closeFuture = t2;
        }
      }
      t1 = new A._HttpOutgoing_close_finalize(_this, t1);
      future = _this.writeHeaders$0();
      if (future != null)
        return _this._closeFuture = future.whenComplete$1(t1);
      return _this._closeFuture = t1.call$0();
    },
    _addGZipChunk$2(chunk, add) {
      var t1, t2, currentLength, newLength, _this = this;
      type$.List_int._as(chunk);
      type$.void_Function_List_int._as(add);
      if (!_this.outbound._bufferOutput) {
        add.call$1(chunk);
        return;
      }
      t1 = _this._gzipBuffer;
      t1.toString;
      t2 = J.getInterceptor$asx(chunk);
      if (t2.get$length(chunk) > 8192 - _this._gzipBufferLength) {
        add.call$1(J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t1), t1.byteOffset, _this._gzipBufferLength));
        _this._gzipBuffer = new Uint8Array(8192);
        _this._gzipBufferLength = 0;
      }
      if (t2.get$length(chunk) > 8192)
        add.call$1(chunk);
      else {
        currentLength = _this._gzipBufferLength;
        newLength = currentLength + t2.get$length(chunk);
        t1 = _this._gzipBuffer;
        t1.toString;
        B.NativeUint8List_methods.setRange$3(t1, currentLength, newLength, chunk);
        _this._gzipBufferLength = newLength;
      }
    },
    _addChunk$2(chunk, add) {
      var t1, t2, t3, _this = this;
      type$.List_int._as(chunk);
      type$.void_Function_List_int._as(add);
      if (!_this.outbound._bufferOutput) {
        t1 = _this.__http$_buffer;
        if (t1 != null) {
          add.call$1(J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t1), _this.__http$_buffer.byteOffset, _this.__http$_length));
          _this.__http$_buffer = null;
          _this.__http$_length = 0;
        }
        add.call$1(chunk);
        return;
      }
      t1 = J.getInterceptor$asx(chunk);
      t2 = t1.get$length(chunk);
      t3 = _this.__http$_buffer;
      if (t2 > t3.length - _this.__http$_length) {
        add.call$1(J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t3), _this.__http$_buffer.byteOffset, _this.__http$_length));
        _this.__http$_buffer = new Uint8Array(8192);
        _this.__http$_length = 0;
      }
      if (t1.get$length(chunk) > 8192)
        add.call$1(chunk);
      else {
        t2 = _this.__http$_buffer;
        t2.toString;
        t3 = _this.__http$_length;
        B.NativeUint8List_methods.setRange$3(t2, t3, t3 + t1.get$length(chunk), chunk);
        _this.__http$_length = _this.__http$_length + t1.get$length(chunk);
      }
    },
    _chunkHeader$1($length) {
      var size, len, size0, t1, footerAndHeader, index, t2;
      if ($length === 0) {
        if (this._pendingChunkedFooter === 2)
          return B.List_nhL;
        return B.List_5IB;
      }
      size = this._pendingChunkedFooter;
      for (len = $length, size0 = size; len > 0;) {
        ++size0;
        len = B.JSInt_methods._shrOtherPositive$1(len, 4);
      }
      t1 = size0 + 2;
      footerAndHeader = new Uint8Array(t1);
      if (size === 2) {
        footerAndHeader[0] = 13;
        footerAndHeader[1] = 10;
      }
      for (index = size0; index > size;) {
        --index;
        t2 = B.List_XJC[$length & 15];
        if (!(index < t1))
          return A.ioore(footerAndHeader, index);
        footerAndHeader[index] = t2;
        $length = B.JSInt_methods._shrOtherPositive$1($length, 4);
      }
      if (!(size0 < t1))
        return A.ioore(footerAndHeader, size0);
      footerAndHeader[size0] = 13;
      t2 = size0 + 1;
      if (!(t2 < t1))
        return A.ioore(footerAndHeader, t2);
      footerAndHeader[t2] = 10;
      return footerAndHeader;
    },
    $isStreamConsumer: 1
  };
  A._HttpOutgoing_writeHeaders_closure.prototype = {
    call$1(__wc0_formal) {
    },
    $signature: 3
  };
  A._HttpOutgoing_writeHeaders_closure0.prototype = {
    call$1(__wc1_formal) {
      return this.response._writeHeader$0();
    },
    $signature: 73
  };
  A._HttpOutgoing_addStream_closure.prototype = {
    call$1(__wc0_formal) {
    },
    $signature: 3
  };
  A._HttpOutgoing_addStream_closure0.prototype = {
    call$1(__wc1_formal) {
      return this.$this.close$0(0);
    },
    $signature: 101
  };
  A._HttpOutgoing_addStream_onData.prototype = {
    call$1(data) {
      var t1, t2, t3, contentLength, _this = this;
      type$.List_int._as(data);
      t1 = _this.$this;
      if (t1._socketError)
        return;
      t2 = J.getInterceptor$asx(data);
      if (t2.get$isEmpty(data))
        return;
      if (t1.chunked) {
        if (t1._gzip) {
          t2 = _this.controller;
          t3 = type$.void_Function_List_int;
          t1._gzipAdd = t3._as(t2.get$add(t2));
          t2 = t1._gzipSink;
          t1._addGZipChunk$2(data, t3._as(t2.get$add(t2)));
          t1._gzipAdd = null;
          return;
        }
        t3 = _this.controller;
        t1._addChunk$2(t1._chunkHeader$1(t2.get$length(data)), type$.void_Function_List_int._as(t3.get$add(t3)));
        t1._pendingChunkedFooter = 2;
      } else {
        contentLength = t1.contentLength;
        if (contentLength != null) {
          t2 = t1._bytesWritten = t1._bytesWritten + t2.get$length(data);
          if (t2 > contentLength) {
            _this.controller.addError$1(new A.HttpException("Content size exceeds specified contentLength. " + t2 + " bytes written while expected " + A.S(contentLength) + ". [" + A.String_String$fromCharCodes(data, 0, null) + "]", null));
            return;
          }
        }
      }
      t2 = _this.controller;
      t1._addChunk$2(data, type$.void_Function_List_int._as(t2.get$add(t2)));
    },
    $signature: 18
  };
  A._HttpOutgoing_addStream_closure1.prototype = {
    call$1(__wc2_formal) {
      return this.$this.outbound;
    },
    $signature: 103
  };
  A._HttpOutgoing_addStream_closure2.prototype = {
    call$2(error, stackTrace) {
      var t1 = this.$this;
      if (t1._gzip)
        t1._gzipSink.close$0(0);
      t1._socketError = true;
      t1._doneCompleter.completeError$2(error, stackTrace);
      t1 = t1.outbound;
      if (t1 instanceof A._HttpResponse)
        return t1;
      else
        throw A.wrapException(error);
    },
    $signature: 109
  };
  A._HttpOutgoing_close_finalize.prototype = {
    call$0() {
      var t2, t3,
        t1 = this.$this;
      if (t1.chunked) {
        if (t1._gzip) {
          t2 = t1.socket;
          t1._gzipAdd = t2.get$add(t2);
          if (t1._gzipBufferLength > 0) {
            t2 = t1._gzipSink;
            t2.toString;
            t3 = t1._gzipBuffer;
            t3.toString;
            t3 = type$.List_int._as(J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t3), t1._gzipBuffer.byteOffset, t1._gzipBufferLength));
            t2.addSlice$4(t3, 0, t3.length, false);
          }
          t1._gzipBuffer = null;
          t1._gzipSink.close$0(0);
          t1._gzipAdd = null;
        }
        t2 = t1.socket;
        t1._addChunk$2(t1._chunkHeader$1(0), t2.get$add(t2));
      }
      if (t1.__http$_length > 0) {
        t2 = t1.__http$_buffer;
        t2.toString;
        t1.socket._socket.add$1(0, type$.List_int._as(J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t2), t1.__http$_buffer.byteOffset, t1.__http$_length)));
      }
      t1.__http$_buffer = null;
      t2 = this.outbound;
      return t1.socket.flush$0(0).then$1$2$onError(new A._HttpOutgoing_close_finalize_closure(t1, t2), new A._HttpOutgoing_close_finalize_closure0(t1, t2), type$.dynamic);
    },
    $signature: 6
  };
  A._HttpOutgoing_close_finalize_closure.prototype = {
    call$1(__wc0_formal) {
      var t1 = this.$this;
      t1._doneCompleter.complete$1(0, t1.socket);
      return this.outbound;
    },
    $signature: 130
  };
  A._HttpOutgoing_close_finalize_closure0.prototype = {
    call$2(error, stackTrace) {
      var t1 = this.$this;
      t1._doneCompleter.completeError$2(error, stackTrace);
      t1 = t1.outbound;
      if (t1 instanceof A._HttpResponse)
        return this.outbound;
      else
        throw A.wrapException(error);
    },
    $signature: 145
  };
  A._HttpConnection.prototype = {
    _HttpConnection$2(_socket, _httpServer) {
      var t1, _this = this;
      $.$get$_HttpConnection__connections().$indexSet(0, _this.get$_serviceId(), _this);
      t1 = _this._httpParser;
      t1._socketSubscription = type$.Stream_Uint8List._as(_this._socket).listen$3$onDone$onError(t1.get$__http$_onData(), t1.get$__http$_onDone(), t1.__http$_controller.get$addError());
      _this.__http$_subscription = t1.listen$3$onDone$onError(new A._HttpConnection_closure(_this), new A._HttpConnection_closure0(_this), new A._HttpConnection_closure1(_this));
    },
    destroy$0() {
      var _this = this,
        t1 = _this.__http$_state;
      if (t1 === 2 || t1 === 3)
        return;
      _this.__http$_state = 2;
      _this._socket._socket.destroy$0();
      t1 = _this._list;
      t1.toString;
      t1._unlink$1(A._instanceType(_this)._eval$1("LinkedListEntry.E")._as(_this));
      _this._httpServer._maybePerformCleanup$0();
      $.$get$_HttpConnection__connections().remove$1(0, _this.get$_serviceId());
    },
    detachSocket$0() {
      var t1, t2, _this = this;
      _this.__http$_state = 3;
      t1 = _this._list;
      t1.toString;
      t1._unlink$1(A._instanceType(_this)._eval$1("LinkedListEntry.E")._as(_this));
      _this._httpServer._maybePerformCleanup$0();
      t1 = _this._httpParser;
      t1.__http$_state = 26;
      t2 = t1._socketSubscription;
      t1 = t1.readUnparsedData$0();
      return _this._streamFuture.then$1$1(new A._HttpConnection_detachSocket_closure(_this, new A._HttpDetachedIncoming(t2, t1)), type$.Socket);
    }
  };
  A._HttpConnection_closure.prototype = {
    call$1(incoming) {
      var t1, t2, t3, outgoing, t4, t5, response, request;
      type$._HttpIncoming._as(incoming);
      t1 = this.$this;
      t2 = t1._httpServer;
      t2._idleConnections.remove$1(0, t1);
      t3 = t2._activeConnections;
      t3.$ti._precomputed1._as(t1);
      t3._insertBefore$3$updateFirst(t3._collection$_first, t1, false);
      incoming._dataCompleter.future.then$1$1(new A._HttpConnection__closure(t1), type$.Null);
      t1.__http$_subscription.pause$0(0);
      t1.__http$_state = 0;
      t3 = new A._Future($.Zone__current, type$._Future_Socket);
      outgoing = new A._HttpOutgoing(new A._AsyncCompleter(t3, type$._AsyncCompleter_Socket), t1._socket);
      t4 = incoming.uri;
      t5 = t4.isScheme$1("https") ? 443 : 80;
      response = outgoing.outbound = new A._HttpResponse(t4, outgoing, A._HttpHeaders$(incoming.headers.protocolVersion, t5, t2.defaultResponseHeaders), B.C_Latin1Codec, null, outgoing, new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      if (incoming.statusCode === 400)
        response.set$statusCode(0, 400);
      request = A._HttpRequest$(response, incoming, t2, t1);
      t1._streamFuture = t3.then$1$2$onError(new A._HttpConnection__closure0(t1, response, request, incoming), new A._HttpConnection__closure1(t1), type$.dynamic);
      t1 = request._incoming.method;
      t1.toString;
      outgoing.ignoreBody = t1 === "HEAD";
      response._httpRequest = request;
      if (!t2.closed)
        t2.__http$_controller.add$1(0, request);
      else
        request._httpConnection.destroy$0();
    },
    $signature: 149
  };
  A._HttpConnection__closure.prototype = {
    call$1(closing) {
      if (A._asBool(closing))
        this.$this.destroy$0();
    },
    $signature: 171
  };
  A._HttpConnection__closure0.prototype = {
    call$1(__wc0_formal) {
      var t1, t2, t3, _this = this;
      type$.Socket._as(__wc0_formal);
      t1 = _this.response;
      t1.set$deadline(null);
      t2 = _this.$this;
      if (t2.__http$_state === 3)
        return;
      t3 = false;
      if (t1.headers._persistentConnection)
        if (_this.request._incoming.headers._persistentConnection)
          if (_this.incoming.fullBodyRead) {
            t1 = t2._httpParser;
            t1 = !(t1._connectionUpgrade && t1.__http$_state === 26) && !t2._httpServer.closed;
          } else
            t1 = t3;
        else
          t1 = t3;
      else
        t1 = t3;
      if (t1) {
        t2.__http$_state = 1;
        t2._idleMark = false;
        t1 = t2._httpServer;
        t1._activeConnections.remove$1(0, t2);
        t1 = t1._idleConnections;
        t1.$ti._precomputed1._as(t2);
        t1._insertBefore$3$updateFirst(t1._collection$_first, t2, false);
        t2.__http$_subscription.resume$0(0);
      } else
        t2.destroy$0();
    },
    $signature: 144
  };
  A._HttpConnection__closure1.prototype = {
    call$1(__wc1_formal) {
      this.$this.destroy$0();
    },
    $signature: 3
  };
  A._HttpConnection_closure0.prototype = {
    call$0() {
      this.$this.destroy$0();
    },
    $signature: 0
  };
  A._HttpConnection_closure1.prototype = {
    call$1(error) {
      this.$this.destroy$0();
    },
    $signature: 3
  };
  A._HttpConnection_detachSocket_closure.prototype = {
    call$1(__wc0_formal) {
      var t1 = this.$this;
      $.$get$_HttpConnection__connections().remove$1(0, t1.get$_serviceId());
      return new A._DetachedSocket(this.detachedIncoming, t1._socket);
    },
    $signature: 142
  };
  A._HttpServer.prototype = {
    set$idleTimeout(duration) {
      var _this = this,
        idleTimer = _this._idleTimer;
      if (idleTimer != null) {
        idleTimer.cancel$0(0);
        _this._idleTimer = null;
      }
      if (duration != null)
        _this._idleTimer = A.Timer_Timer$periodic(duration, new A._HttpServer_idleTimeout_closure(_this));
    },
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1, _this = this;
      type$.nullable_void_Function_HttpRequest._as(onData);
      type$.nullable_void_Function._as(onDone);
      t1 = _this.__http$_controller;
      _this._serverSocket.listen$3$onDone$onError(new A._HttpServer_listen_closure(_this), t1.get$close(t1), new A._HttpServer_listen_closure0(_this));
      return new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>")).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    close$1$force(_, force) {
      var result, t1, t2, _i, _this = this;
      A._asBool(force);
      _this.closed = true;
      result = _this._serverSocket.close$0(0);
      _this.set$idleTimeout(null);
      if (force) {
        t1 = _this._activeConnections;
        t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
        t2 = t1.length;
        _i = 0;
        for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].destroy$0();
      }
      t1 = _this._idleConnections;
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
      t2 = t1.length;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].destroy$0();
      _this._maybePerformCleanup$0();
      return result;
    },
    close$0(_) {
      return this.close$1$force(0, false);
    },
    _maybePerformCleanup$0() {
      var _this = this,
        sessionManager = _this._sessionManagerInstance;
      if (_this.closed && _this._idleConnections._collection$_length === 0 && _this._activeConnections._collection$_length === 0 && sessionManager != null) {
        _this._sessionManagerInstance = null;
        $._HttpServer__servers.remove$1(0, _this.get$_serviceId());
      }
    },
    get$port(_) {
      var t1;
      if (this.closed)
        throw A.wrapException(A.HttpException$("HttpServer is not bound to a socket", null));
      t1 = this._serverSocket;
      return t1.get$port(t1);
    },
    get$address() {
      if (this.closed)
        throw A.wrapException(A.HttpException$("HttpServer is not bound to a socket", null));
      return this._serverSocket.get$address();
    },
    $isHttpServer: 1
  };
  A._HttpServer_bind_closure.prototype = {
    call$1(socket) {
      return A._HttpServer$_(socket, true);
    },
    $signature: 135
  };
  A._HttpServer_idleTimeout_closure.prototype = {
    call$1(__wc0_formal) {
      var t1, t2, _i, idle;
      type$.Timer._as(__wc0_formal);
      t1 = this.$this._idleConnections;
      t1 = A.List_List$_of(t1, t1.$ti._eval$1("Iterable.E"));
      t2 = t1.length;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        idle = t1[_i];
        if (idle._idleMark)
          idle.destroy$0();
        else
          idle._idleMark = true;
      }
    },
    $signature: 124
  };
  A._HttpServer_listen_closure.prototype = {
    call$1(socket) {
      var t1, t2;
      type$.Socket._as(socket);
      t1 = socket.get$address();
      t1.get$type(t1);
      socket.setOption$2(B.C_SocketOption, true);
      t1 = this.$this;
      t2 = t1._idleConnections;
      t1 = t2.$ti._precomputed1._as(A._HttpConnection$(socket, t1));
      t2._insertBefore$3$updateFirst(t2._collection$_first, t1, false);
    },
    $signature: 30
  };
  A._HttpServer_listen_closure0.prototype = {
    call$2(error, stackTrace) {
      var t1;
      if (!(error instanceof A.HandshakeException)) {
        t1 = error == null ? type$.Object._as(error) : error;
        this.$this.__http$_controller.addError$2(t1, type$.nullable_StackTrace._as(stackTrace));
      }
    },
    $signature: 119
  };
  A._DetachedSocket.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return this._incoming.listen$4$cancelOnError$onDone$onError(type$.nullable_void_Function_Uint8List._as(onData), cancelOnError, type$.nullable_void_Function._as(onDone), onError);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    listen$2$onDone(onData, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
    },
    add$1(_, bytes) {
      this._socket._socket.add$1(0, type$.List_int._as(bytes));
    },
    addError$2(error, stackTrace) {
      return this._socket.addError$2(error, stackTrace);
    },
    addStream$1(_, stream) {
      return this._socket.addStream$1(0, type$.Stream_List_int._as(stream));
    },
    destroy$0() {
      this._socket._socket.destroy$0();
    },
    flush$0(_) {
      return this._socket.flush$0(0);
    },
    close$0(_) {
      return this._socket.close$0(0);
    },
    get$port(_) {
      return this._socket.get$port(0);
    },
    get$address() {
      return this._socket.get$address();
    },
    get$remoteAddress() {
      return this._socket.get$remoteAddress();
    },
    get$remotePort() {
      return this._socket.get$remotePort();
    },
    setOption$2(option, enabled) {
      return this._socket.setOption$2(option, true);
    },
    $isEventSink: 1,
    $isStreamConsumer: 1,
    $isStreamSink: 1,
    $isSink: 1,
    $isStringSink: 1,
    $isSocket: 1
  };
  A._HttpDetachedStreamSubscription.prototype = {
    asFuture$1$1(futureValue, $T) {
      $T._as(futureValue);
      return this.__http$_subscription.asFuture$1$1(futureValue, $T);
    },
    cancel$0(_) {
      this._isCanceled = true;
      this._injectData = null;
      return this.__http$_subscription.cancel$0(0);
    },
    onData$1(handleData) {
      type$.nullable_void_Function_Uint8List._as(handleData);
      this._userOnData = handleData;
      this.__http$_subscription.onData$1(handleData);
    },
    onDone$1(handleDone) {
      this.__http$_subscription.onDone$1(type$.nullable_void_Function._as(handleDone));
    },
    onError$1(_, handleError) {
      this.__http$_subscription.onError$1(0, handleError);
    },
    pause$1(_, resumeSignal) {
      var _this = this;
      type$.nullable_Future_dynamic._as(resumeSignal);
      if (_this._injectData == null)
        _this.__http$_subscription.pause$1(0, resumeSignal);
      else {
        ++_this._pauseCount;
        if (resumeSignal != null)
          resumeSignal.whenComplete$1(_this.get$resume(_this));
      }
    },
    pause$0(_) {
      return this.pause$1(0, null);
    },
    resume$0(_) {
      var _this = this;
      if (_this._injectData == null)
        _this.__http$_subscription.resume$0(0);
      else {
        --_this._pauseCount;
        _this._maybeScheduleData$0();
      }
    },
    _maybeScheduleData$0() {
      var _this = this;
      if (_this._scheduled)
        return;
      if (_this._pauseCount !== 0)
        return;
      _this._scheduled = true;
      A.scheduleMicrotask(new A._HttpDetachedStreamSubscription__maybeScheduleData_closure(_this));
    },
    $isStreamSubscription: 1
  };
  A._HttpDetachedStreamSubscription__maybeScheduleData_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      t1._scheduled = false;
      if (t1._pauseCount > 0 || t1._isCanceled)
        return;
      t2 = t1._injectData;
      t2.toString;
      t1._injectData = null;
      t1.__http$_subscription.resume$0(0);
      t1 = t1._userOnData;
      if (t1 != null)
        t1.call$1(t2);
    },
    $signature: 0
  };
  A._HttpDetachedIncoming.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var subscription, t1;
      type$.nullable_void_Function_Uint8List._as(onData);
      type$.nullable_void_Function._as(onDone);
      subscription = this.__http$_subscription;
      if (subscription != null) {
        subscription.onData$1(onData);
        subscription.onError$1(0, onError);
        subscription.onDone$1(onDone);
        t1 = this._bufferedData;
        if (t1 == null) {
          subscription.resume$0(0);
          return subscription;
        }
        t1 = new A._HttpDetachedStreamSubscription(subscription, t1, onData);
        t1.resume$0(0);
        return t1;
      } else {
        t1 = this._bufferedData;
        if (t1 == null)
          t1 = new Uint8Array(0);
        return A.Stream_Stream$fromIterable(A._setArrayType([t1], type$.JSArray_Uint8List), type$.Uint8List).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
      }
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A._HttpParser.prototype = {
    _HttpParser$_$1(_requestParser) {
      var _this = this,
        t1 = _this.__http$_controller;
      t1.set$onListen(new A._HttpParser$__closure(_this));
      t1.set$onPause(0, new A._HttpParser$__closure0(_this));
      t1.set$onResume(0, new A._HttpParser$__closure1(_this));
      t1.set$onCancel(0, new A._HttpParser$__closure2(_this));
      _this._reset$0();
    },
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = this.__http$_controller;
      return new A._ControllerStream(t1, A._instanceType(t1)._eval$1("_ControllerStream<1>")).listen$4$cancelOnError$onDone$onError(type$.nullable_void_Function__HttpIncoming._as(onData), cancelOnError, type$.nullable_void_Function._as(onDone), onError);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    _parse$0() {
      var e, s, exception, t1, _this = this;
      try {
        _this._doParse$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.__http$_state;
        if (t1 >= 17 && t1 <= 24) {
          _this.__http$_state = 27;
          _this._reportBodyError$2(e, s);
        } else {
          _this.__http$_state = 27;
          _this._reportHttpError$2(e, s);
        }
      }
    },
    _headersEnd$0() {
      var t1, t2, incoming, _this = this,
        headers = _this.__http$_headers;
      headers._mutable = false;
      t1 = headers._contentLength;
      _this._transferLength = t1;
      t2 = _this._chunked;
      if (t2) {
        _this._transferLength = -1;
        t1 = -1;
      }
      if (_this._messageType === 1 && t1 < 0 && !t2) {
        _this._transferLength = 0;
        t1 = 0;
      }
      if (_this._connectionUpgrade) {
        _this.__http$_state = 26;
        t1 = _this._transferLength = 0;
      }
      incoming = _this._createIncoming$1(t1);
      t1 = _this.__http$_method;
      incoming.method = A.String_String$fromCharCodes(t1, 0, null);
      t2 = _this._uriOrReasonPhrase;
      incoming.uri = A.Uri_parse(A.String_String$fromCharCodes(t2, 0, null));
      B.JSArray_methods.clear$0(t1);
      B.JSArray_methods.clear$0(t2);
      if (_this._connectionUpgrade) {
        _this._parserCalled = false;
        _this._closeIncoming$0();
        _this.__http$_controller.add$1(0, incoming);
        return true;
      }
      t1 = _this._transferLength;
      if (t1 !== 0)
        t2 = _this._messageType === 0 && _this._noMessageBody;
      else
        t2 = true;
      if (t2) {
        _this._reset$0();
        _this._closeIncoming$0();
        _this.__http$_controller.add$1(0, incoming);
        return false;
      } else if (_this._chunked) {
        _this.__http$_state = 19;
        _this._remainingContent = 0;
      } else if (t1 > 0) {
        _this._remainingContent = t1;
        _this.__http$_state = 24;
      } else
        _this.__http$_state = 24;
      _this._parserCalled = false;
      _this.__http$_controller.add$1(0, incoming);
      return true;
    },
    _doParse$0() {
      var t1, t2, t3, t4, t5, t6, t7, t8, index, byte, i, headerField, headerValue, tokens, isResponse, isUpgradeCode, isUpgrade, lowerCaseValue, value, dataAvailable, dataAvailable0, data, lastEvent, _this = this, _null = null,
        _s22_ = "Invalid request method",
        _s22_0 = "Failed to parse HTTP, ",
        _s16_ = " does not match ",
        _s18_ = " does not match 10",
        _s18_0 = " does not match 13";
      _this._parserCalled = true;
      t1 = _this.__http$_state;
      if (t1 === 25)
        throw A.wrapException(A.HttpException$("Data on closed connection", _null));
      if (t1 === 27)
        throw A.wrapException(A.HttpException$("Data on failed connection", _null));
      t1 = type$.List_int;
      t2 = _this._headerField;
      t3 = _this._headerValue;
      t4 = _this._uriOrReasonPhrase;
      t5 = _this.__http$_method;
      while (true) {
        t6 = _this.__http$_buffer;
        t7 = t6 != null;
        t8 = false;
        if (t7)
          if (_this.__http$_index < t6.length) {
            t8 = _this.__http$_state;
            t8 = t8 !== 27 && t8 !== 26;
          }
        if (!t8)
          break;
        t7 = _this._incoming == null;
        if (!(!t7 && _this._bodyPaused))
          t7 = t7 && _this._paused;
        else
          t7 = true;
        if (t7) {
          _this._parserCalled = false;
          return;
        }
        index = _this.__http$_index;
        t7 = t6.length;
        if (!(index >= 0 && index < t7))
          return A.ioore(t6, index);
        byte = t6[index];
        t8 = _this.__http$_index = index + 1;
        switch (_this.__http$_state) {
          case 0:
            if (byte === 72)
              _this.__http$_state = _this._httpVersionIndex = 1;
            else {
              if (!(byte > 31 && byte < 128 && !B.List_H5v[byte]))
                throw A.wrapException(A.HttpException$(_s22_, _null));
              t1._as(t5);
              if (++_this._headersReceivedSize < 1048576)
                B.JSArray_methods.add$1(t5, byte);
              else
                _this._reportSizeLimitError$0();
              _this.__http$_state = 3;
            }
            break;
          case 1:
            t6 = _this._httpVersionIndex;
            t6.toString;
            if (t6 < 4 && byte === B.List_72_84_84_80[t6])
              _this._httpVersionIndex = t6 + 1;
            else if (t6 === 4 && byte === 47) {
              _this._httpVersionIndex = t6 + 1;
              t6 = A.HttpException$("Invalid request line", _null);
              throw A.wrapException(t6);
            } else {
              for (i = 0; i < t6; ++i) {
                if (!(i < 4))
                  return A.ioore(B.List_72_84_84_80, i);
                t7 = B.List_72_84_84_80[i];
                t1._as(t5);
                if (++_this._headersReceivedSize < 1048576)
                  B.JSArray_methods.add$1(t5, t7);
                else
                  _this._reportSizeLimitError$0();
              }
              if (byte === 32)
                _this.__http$_state = 4;
              else {
                t1._as(t5);
                if (++_this._headersReceivedSize < 1048576)
                  B.JSArray_methods.add$1(t5, byte);
                else
                  _this._reportSizeLimitError$0();
                _this._httpVersion = 0;
                _this.__http$_state = 3;
              }
            }
            break;
          case 2:
            t6 = _this._httpVersionIndex;
            t6.toString;
            if (t6 < 7) {
              t7 = B.List_kXu[t6];
              if (byte !== t7)
                A.throwExpression(A.HttpException$(_s22_0 + byte + _s16_ + t7, _null));
              _this._httpVersionIndex = t6 + 1;
            } else {
              t7 = t6 === 7;
              if (t7 && byte === 49) {
                _this._httpVersion = 2;
                _this._httpVersionIndex = t6 + 1;
              } else if (t7 && byte === 48) {
                _this._httpVersion = 1;
                _this._httpVersionIndex = t6 + 1;
              } else if (t6 === 8) {
                if (byte !== 32)
                  A.throwExpression(A.HttpException$(_s22_0 + byte + " does not match 32", _null));
                _this.__http$_state = 7;
              } else
                throw A.wrapException(A.HttpException$("Invalid response line, failed to parse HTTP version", _null));
            }
            break;
          case 3:
            if (byte === 32)
              _this.__http$_state = 4;
            else {
              if (!(byte < 256))
                return A.ioore(B.List_H5v, byte);
              if (B.List_H5v[byte] || byte === 13 || byte === 10)
                throw A.wrapException(A.HttpException$(_s22_, _null));
              t1._as(t5);
              if (++_this._headersReceivedSize < 1048576)
                B.JSArray_methods.add$1(t5, byte);
              else
                _this._reportSizeLimitError$0();
            }
            break;
          case 4:
            if (byte === 32) {
              if (t4.length === 0)
                throw A.wrapException(A.HttpException$("Invalid request, empty URI", _null));
              _this.__http$_state = 5;
              _this._httpVersionIndex = 0;
            } else {
              if (byte === 13 || byte === 10)
                throw A.wrapException(A.HttpException$("Invalid request, unexpected " + byte + " in URI", _null));
              t1._as(t4);
              if (++_this._headersReceivedSize < 1048576)
                B.JSArray_methods.add$1(t4, byte);
              else
                _this._reportSizeLimitError$0();
            }
            break;
          case 5:
            t6 = _this._httpVersionIndex;
            t6.toString;
            if (t6 < 7) {
              t7 = B.List_mxl[t6];
              if (byte !== t7)
                A.throwExpression(A.HttpException$(_s22_0 + byte + _s16_ + t7, _null));
              _this._httpVersionIndex = t6 + 1;
            } else if (t6 === 7)
              if (byte === 49) {
                _this._httpVersion = 2;
                _this._httpVersionIndex = t6 + 1;
              } else if (byte === 48) {
                _this._httpVersion = 1;
                _this._httpVersionIndex = t6 + 1;
              } else
                throw A.wrapException(A.HttpException$("Invalid response, invalid HTTP version", _null));
            else if (byte === 13)
              _this.__http$_state = 6;
            else if (byte === 10) {
              _this.__http$_state = 6;
              _this.__http$_index = t8 - 1;
            }
            break;
          case 6:
            if (byte !== 10)
              A.throwExpression(A.HttpException$(_s22_0 + byte + _s18_, _null));
            _this._messageType = 1;
            _this.__http$_state = 10;
            break;
          case 7:
            if (byte === 32)
              _this.__http$_state = 8;
            else if (byte === 13)
              _this.__http$_state = 9;
            else if (byte === 10) {
              _this.__http$_state = 9;
              _this.__http$_index = t8 - 1;
            } else {
              t6 = ++_this._statusCodeLength;
              if (byte < 48 || byte > 57)
                throw A.wrapException(A.HttpException$("Invalid response status code with " + byte, _null));
              else if (t6 > 3)
                throw A.wrapException(A.HttpException$("Invalid response, status code is over 3 digits", _null));
              else
                _this._statusCode = _this._statusCode * 10 + byte - 48;
            }
            break;
          case 8:
            if (byte === 13)
              _this.__http$_state = 9;
            else if (byte === 10) {
              _this.__http$_state = 9;
              _this.__http$_index = t8 - 1;
            } else {
              t1._as(t4);
              if (++_this._headersReceivedSize < 1048576)
                B.JSArray_methods.add$1(t4, byte);
              else
                _this._reportSizeLimitError$0();
            }
            break;
          case 9:
            if (byte !== 10)
              A.throwExpression(A.HttpException$(_s22_0 + byte + _s18_, _null));
            t6 = _this._statusCode;
            if (t6 <= 199 || t6 === 204 || t6 === 304)
              _this._noMessageBody = true;
            _this.__http$_state = 10;
            break;
          case 10:
            t6 = _this.get$version(0);
            t6.toString;
            _this.__http$_headers = A._HttpHeaders$(t6, 80, _null);
            if (byte === 13)
              _this.__http$_state = 16;
            else if (byte === 10) {
              _this.__http$_state = 16;
              --_this.__http$_index;
            } else {
              t6 = (byte - 65 & 127) < 26 ? byte | 32 : byte;
              t1._as(t2);
              if (++_this._headersReceivedSize < 1048576)
                B.JSArray_methods.add$1(t2, t6);
              else
                _this._reportSizeLimitError$0();
              _this.__http$_state = 11;
            }
            break;
          case 11:
            if (byte === 58)
              _this.__http$_state = 12;
            else {
              if (!(byte > 31 && byte < 128 && !B.List_H5v[byte]))
                throw A.wrapException(A.HttpException$("Invalid header field name, with " + byte, _null));
              t6 = (byte - 65 & 127) < 26 ? byte | 32 : byte;
              t1._as(t2);
              if (++_this._headersReceivedSize < 1048576)
                B.JSArray_methods.add$1(t2, t6);
              else
                _this._reportSizeLimitError$0();
            }
            break;
          case 12:
            if (byte === 13)
              _this.__http$_state = 14;
            else if (byte === 10)
              _this.__http$_state = 15;
            else if (byte !== 32 && byte !== 9) {
              t1._as(t3);
              if (byte === 0)
                A.throwExpression(A.HttpException$("Illegal value " + byte + " in HTTP header", _null));
              if (++_this._headersReceivedSize < 1048576)
                B.JSArray_methods.add$1(t3, byte);
              else
                _this._reportSizeLimitError$0();
              _this.__http$_state = 13;
            }
            break;
          case 13:
            if (byte === 13)
              _this.__http$_state = 14;
            else if (byte === 10)
              _this.__http$_state = 15;
            else {
              t1._as(t3);
              if (byte === 0)
                A.throwExpression(A.HttpException$("Illegal value " + byte + " in HTTP header", _null));
              if (++_this._headersReceivedSize < 1048576)
                B.JSArray_methods.add$1(t3, byte);
              else
                _this._reportSizeLimitError$0();
            }
            break;
          case 14:
            if (byte !== 10)
              A.throwExpression(A.HttpException$(_s22_0 + byte + _s18_, _null));
            _this.__http$_state = 15;
            break;
          case 15:
            if (byte === 32 || byte === 9) {
              t1._as(t3);
              if (++_this._headersReceivedSize < 1048576)
                B.JSArray_methods.add$1(t3, 32);
              else
                _this._reportSizeLimitError$0();
              _this.__http$_state = 12;
            } else {
              headerField = A.String_String$fromCharCodes(t2, 0, _null);
              A._HttpParser__removeTrailingSpaces(t3);
              headerValue = A.String_String$fromCharCodes(t3, 0, _null);
              t6 = headerField === "content-length";
              if (t6) {
                if (_this._contentLength)
                  throw A.wrapException(A.HttpException$("The Content-Length header occurred more than once, at most one is allowed.", _null));
                else if (!_this._transferEncoding)
                  _this._contentLength = true;
              } else if (headerField === "transfer-encoding") {
                _this._transferEncoding = true;
                if (A._HttpParser__caseInsensitiveCompare(new A.CodeUnits("chunked"), t3))
                  _this._chunked = true;
                _this._contentLength = false;
              }
              t7 = _this.__http$_headers;
              t7.toString;
              if (headerField === "connection") {
                tokens = A._HttpParser__tokenizeFieldValue(headerValue);
                isResponse = _this._messageType === 0;
                t6 = _this._statusCode;
                isUpgradeCode = t6 === 426 || t6 === 101;
                for (t6 = !isResponse, i = 0; i < tokens.length; ++i) {
                  isUpgrade = A._HttpParser__caseInsensitiveCompare(new A.CodeUnits("upgrade"), new A.CodeUnits(tokens[i]));
                  if (!(isUpgrade && t6))
                    t8 = isUpgrade && isResponse && isUpgradeCode;
                  else
                    t8 = true;
                  if (t8)
                    _this._connectionUpgrade = true;
                  if (!(i < tokens.length))
                    return A.ioore(tokens, i);
                  t8 = tokens[i];
                  lowerCaseValue = t8.toLowerCase();
                  if (lowerCaseValue === "close")
                    t7._persistentConnection = false;
                  else if (lowerCaseValue === "keep-alive")
                    t7._persistentConnection = true;
                  t7._addValue$2(headerField, t8);
                }
              } else if (!t6 || !_this._transferEncoding)
                t7.__http$_add$2(0, headerField, headerValue);
              B.JSArray_methods.clear$0(t2);
              B.JSArray_methods.clear$0(t3);
              if (byte === 13)
                _this.__http$_state = 16;
              else if (byte === 10) {
                _this.__http$_state = 16;
                --_this.__http$_index;
              } else {
                _this.__http$_state = 11;
                t6 = (byte - 65 & 127) < 26 ? byte | 32 : byte;
                t1._as(t2);
                if (++_this._headersReceivedSize < 1048576)
                  B.JSArray_methods.add$1(t2, t6);
                else
                  _this._reportSizeLimitError$0();
              }
            }
            break;
          case 16:
            if (byte !== 10)
              A.throwExpression(A.HttpException$(_s22_0 + byte + _s18_, _null));
            if (_this._headersEnd$0())
              return;
            break;
          case 17:
            if (byte === 10) {
              _this.__http$_state = 18;
              _this.__http$_index = t8 - 1;
              break;
            }
            if (byte !== 13)
              A.throwExpression(A.HttpException$(_s22_0 + byte + _s18_0, _null));
            _this.__http$_state = 18;
            break;
          case 18:
            if (byte !== 10)
              A.throwExpression(A.HttpException$(_s22_0 + byte + _s18_, _null));
            _this.__http$_state = 19;
            break;
          case 19:
            if (byte === 13)
              _this.__http$_state = 21;
            else if (byte === 10) {
              _this.__http$_state = 21;
              _this.__http$_index = t8 - 1;
            } else if (byte === 59)
              _this.__http$_state = 20;
            else {
              value = _this._expectHexDigit$1(byte);
              t6 = _this._remainingContent;
              if (t6 > 134217727)
                throw A.wrapException(A.HttpException$("Chunk size overflows the integer", _null));
              _this._remainingContent = t6 * 16 + value;
            }
            break;
          case 20:
            if (byte === 13)
              _this.__http$_state = 21;
            else if (byte === 10) {
              _this.__http$_state = 21;
              _this.__http$_index = t8 - 1;
            }
            break;
          case 21:
            if (byte !== 10)
              A.throwExpression(A.HttpException$(_s22_0 + byte + _s18_, _null));
            if (_this._remainingContent > 0)
              _this.__http$_state = 24;
            else
              _this.__http$_state = 22;
            break;
          case 22:
            if (byte === 10) {
              _this.__http$_state = 23;
              _this.__http$_index = t8 - 1;
              break;
            }
            if (byte !== 13)
              A.throwExpression(A.HttpException$(_s22_0 + byte + _s18_0, _null));
            break;
          case 23:
            if (byte !== 10)
              A.throwExpression(A.HttpException$(_s22_0 + byte + _s18_, _null));
            _this._reset$0();
            _this._closeIncoming$0();
            break;
          case 24:
            --t8;
            _this.__http$_index = t8;
            dataAvailable = t7 - t8;
            dataAvailable0 = _this._remainingContent;
            if (dataAvailable0 >= 0 && dataAvailable > dataAvailable0)
              dataAvailable = dataAvailable0;
            data = J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(t6), t6.byteOffset + _this.__http$_index, dataAvailable);
            t6 = _this._bodyController;
            t6.toString;
            t7 = A._instanceType(t6);
            t7._precomputed1._as(data);
            t8 = t6._state;
            if (t8 >= 4)
              A.throwExpression(t6._badEventState$0());
            if ((t8 & 1) !== 0)
              t6._sendData$1(data);
            else if ((t8 & 3) === 0) {
              t6 = t6._ensurePendingEvents$0();
              t7 = new A._DelayedData(data, t7._eval$1("_DelayedData<1>"));
              lastEvent = t6.lastPendingEvent;
              if (lastEvent == null)
                t6.firstPendingEvent = t6.lastPendingEvent = t7;
              else {
                lastEvent.set$next(0, t7);
                t6.lastPendingEvent = t7;
              }
            }
            t6 = _this._remainingContent;
            if (t6 !== -1)
              t6 = _this._remainingContent = t6 - data.length;
            _this.__http$_index = _this.__http$_index + data.length;
            if (t6 === 0)
              if (!_this._chunked) {
                _this._reset$0();
                _this._closeIncoming$0();
              } else
                _this.__http$_state = 17;
            break;
          case 27:
            break;
          default:
            break;
        }
      }
      _this._parserCalled = false;
      if (t7 && _this.__http$_index === t6.length) {
        _this.__http$_buffer = null;
        _this.__http$_index = -1;
        t1 = _this.__http$_state;
        if (t1 !== 26 && t1 !== 27)
          _this._socketSubscription.resume$0(0);
      }
    },
    __http$_onData$1(buffer) {
      var _this = this;
      type$.Uint8List._as(buffer);
      _this._socketSubscription.pause$0(0);
      _this.__http$_buffer = buffer;
      _this.__http$_index = 0;
      _this._parse$0();
    },
    __http$_onDone$0() {
      var t1, t2, _this = this;
      _this._socketSubscription = null;
      t1 = _this.__http$_state;
      if (t1 === 25 || t1 === 27)
        return;
      if (_this._incoming != null) {
        t2 = false;
        if (t1 !== 26) {
          t2 = !(t1 === 24 && !_this._chunked && _this._transferLength === -1);
          t1 = t2;
        } else
          t1 = t2;
        if (t1)
          _this._reportBodyError$1(new A.HttpException("Connection closed while receiving data", null));
        _this._closeIncoming$1(true);
        _this.__http$_controller.close$0(0);
        return;
      }
      if (t1 === 0) {
        _this.__http$_controller.close$0(0);
        return;
      }
      if (t1 === 26) {
        _this.__http$_controller.close$0(0);
        return;
      }
      if (t1 < 17) {
        _this.__http$_state = 27;
        _this._reportHttpError$1(new A.HttpException("Connection closed before full header was received", null));
        _this.__http$_controller.close$0(0);
        return;
      }
      if (!_this._chunked && _this._transferLength === -1)
        _this.__http$_state = 25;
      else {
        _this.__http$_state = 27;
        _this._reportHttpError$1(new A.HttpException("Connection closed before full body was received", null));
      }
      _this.__http$_controller.close$0(0);
    },
    get$version(_) {
      switch (this._httpVersion) {
        case 1:
          return "1.0";
        case 2:
          return "1.1";
      }
      return null;
    },
    readUnparsedData$0() {
      var index, result, _this = this,
        buffer = _this.__http$_buffer;
      if (buffer == null)
        return null;
      index = _this.__http$_index;
      if (index === buffer.length)
        return null;
      result = B.NativeUint8List_methods.sublist$1(buffer, index);
      _this.__http$_buffer = null;
      _this.__http$_index = -1;
      return result;
    },
    _reset$0() {
      var _this = this;
      if (_this.__http$_state === 26)
        return;
      _this._messageType = _this.__http$_state = 0;
      B.JSArray_methods.clear$0(_this._headerField);
      B.JSArray_methods.clear$0(_this._headerValue);
      _this._headersReceivedSize = 0;
      B.JSArray_methods.clear$0(_this.__http$_method);
      B.JSArray_methods.clear$0(_this._uriOrReasonPhrase);
      _this._httpVersion = _this._statusCodeLength = _this._statusCode = 0;
      _this._transferLength = -1;
      _this._noMessageBody = _this._chunked = _this._connectionUpgrade = false;
      _this._remainingContent = -1;
      _this._transferEncoding = _this._contentLength = false;
      _this.__http$_headers = null;
    },
    _expectHexDigit$1(byte) {
      if (48 <= byte && byte <= 57)
        return byte - 48;
      else if (65 <= byte && byte <= 70)
        return byte - 65 + 10;
      else if (97 <= byte && byte <= 102)
        return byte - 97 + 10;
      else
        throw A.wrapException(A.HttpException$("Failed to parse HTTP, " + byte + " is expected to be a Hex digit", null));
    },
    _reportSizeLimitError$0() {
      var method,
        t1 = this.__http$_state;
      switch (t1) {
        case 0:
        case 1:
        case 3:
          method = "Method";
          break;
        case 4:
          method = "URI";
          break;
        case 8:
          method = "Reason phrase";
          break;
        case 10:
        case 11:
          method = "Header field";
          break;
        case 12:
        case 13:
          method = "Header value";
          break;
        default:
          throw A.wrapException(A.UnsupportedError$("Unexpected state: " + t1));
      }
      throw A.wrapException(A.HttpException$(method + " exceeds the 1048576 size limit", null));
    },
    _createIncoming$1(transferLength) {
      var incoming, _this = this, _null = null,
        controller = _this._bodyController = A.StreamController_StreamController(_null, _null, _null, _null, true, type$.Uint8List),
        t1 = _this.__http$_headers;
      t1.toString;
      incoming = _this._incoming = new A._HttpIncoming(new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_bool), type$._AsyncCompleter_bool), new A._ControllerStream(controller, A._instanceType(controller)._eval$1("_ControllerStream<1>")), t1);
      controller.set$onListen(new A._HttpParser__createIncoming_closure(_this, incoming));
      controller.set$onPause(0, new A._HttpParser__createIncoming_closure0(_this, incoming));
      controller.set$onResume(0, new A._HttpParser__createIncoming_closure1(_this, incoming));
      controller.set$onCancel(0, new A._HttpParser__createIncoming_closure2(_this, incoming));
      _this._bodyPaused = true;
      _this._pauseStateChanged$0();
      return incoming;
    },
    _closeIncoming$1(closing) {
      var controller, _this = this,
        tmp = _this._incoming;
      if (tmp == null)
        return;
      tmp.hasSubscriber = tmp.fullBodyRead = true;
      tmp._dataCompleter.complete$1(0, closing);
      _this._incoming = null;
      controller = _this._bodyController;
      if (controller != null) {
        controller.close$0(0);
        _this._bodyController = null;
      }
      _this._bodyPaused = false;
      _this._pauseStateChanged$0();
    },
    _closeIncoming$0() {
      return this._closeIncoming$1(false);
    },
    _pauseStateChanged$0() {
      var _this = this;
      if (_this._incoming != null) {
        if (!_this._bodyPaused && !_this._parserCalled)
          _this._parse$0();
      } else if (!_this._paused && !_this._parserCalled)
        _this._parse$0();
    },
    _reportHttpError$2(error, stackTrace) {
      var t1 = this._socketSubscription;
      if (t1 != null)
        t1.cancel$0(0);
      this.__http$_state = 27;
      t1 = this.__http$_controller;
      t1.addError$2(error, type$.nullable_StackTrace._as(stackTrace));
      t1.close$0(0);
    },
    _reportHttpError$1(error) {
      return this._reportHttpError$2(error, null);
    },
    _reportBodyError$2(error, stackTrace) {
      var _this = this,
        t1 = _this._socketSubscription;
      if (t1 != null)
        t1.cancel$0(0);
      _this.__http$_state = 27;
      t1 = _this._bodyController;
      if (t1 != null)
        t1.addError$2(error, type$.nullable_StackTrace._as(stackTrace));
      t1 = _this._bodyController;
      if (t1 != null)
        t1.close$0(0);
    },
    _reportBodyError$1(error) {
      return this._reportBodyError$2(error, null);
    }
  };
  A._HttpParser$__closure.prototype = {
    call$0() {
      this.$this._paused = false;
    },
    $signature: 0
  };
  A._HttpParser$__closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._paused = true;
      t1._pauseStateChanged$0();
    },
    $signature: 0
  };
  A._HttpParser$__closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._paused = false;
      t1._pauseStateChanged$0();
    },
    $signature: 0
  };
  A._HttpParser$__closure2.prototype = {
    call$0() {
      var t1 = this.$this._socketSubscription;
      if (t1 != null)
        t1.cancel$0(0);
    },
    $signature: 1
  };
  A._HttpParser__createIncoming_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (this.incoming !== t1._incoming)
        return;
      t1._bodyPaused = false;
      t1._pauseStateChanged$0();
    },
    $signature: 0
  };
  A._HttpParser__createIncoming_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      if (this.incoming !== t1._incoming)
        return;
      t1._bodyPaused = true;
      t1._pauseStateChanged$0();
    },
    $signature: 0
  };
  A._HttpParser__createIncoming_closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      if (this.incoming !== t1._incoming)
        return;
      t1._bodyPaused = false;
      t1._pauseStateChanged$0();
    },
    $signature: 0
  };
  A._HttpParser__createIncoming_closure2.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      if (this.incoming !== t1._incoming)
        return;
      t2 = t1._socketSubscription;
      if (t2 != null)
        t2.cancel$0(0);
      t1._closeIncoming$1(true);
      t1.__http$_controller.close$0(0);
    },
    $signature: 1
  };
  A._HttpSessionManager.prototype = {};
  A.__HttpConnection_LinkedListEntry__ServiceObject.prototype = {};
  A.__HttpServer_Stream__ServiceObject.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._instanceTypeFromConstructor(this));
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.bool);
    },
    $isTrustedGetRuntimeType: 1,
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    $isTrustedGetRuntimeType: 1,
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {$isJSObject: 1};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return B.Type_JSObject_ttY;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JavaScriptBigInt.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JavaScriptSymbol.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, 29);
      receiver.push(value);
    },
    removeAt$1(receiver, index) {
      var t1;
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "removeAt", 1);
      t1 = receiver.length;
      if (index >= t1)
        throw A.wrapException(A.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    insert$2(receiver, index, value) {
      var t1;
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "insert", 2);
      t1 = receiver.length;
      if (index > t1)
        throw A.wrapException(A.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2(receiver, index, iterable) {
      var insertionLength, end;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "insertAll", 2);
      A.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!type$.EfficientLengthIterable_dynamic._is(iterable))
        iterable = J.toList$0$ax(iterable);
      insertionLength = J.get$length$asx(iterable);
      receiver.length = receiver.length + insertionLength;
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    removeLast$0(receiver) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "removeLast", 1);
      if (receiver.length === 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, -1));
      return receiver.pop();
    },
    remove$1(receiver, element) {
      var i;
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "remove", 1);
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    _removeWhere$2(receiver, test, removeMatching) {
      var retained, end, i, element, t1;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      retained = [];
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (!test.call$1(element))
          retained.push(element);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      t1 = retained.length;
      if (t1 === end)
        return;
      this.set$length(receiver, t1);
      for (i = 0; i < retained.length; ++i)
        receiver[i] = retained[i];
    },
    where$1(receiver, f) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.WhereIterable(receiver, t1._eval$1("bool(1)")._as(f), t1._eval$1("WhereIterable<1>"));
    },
    addAll$1(receiver, collection) {
      var t1;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "addAll", 2);
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current(t1));
    },
    _addAllFromArray$1(receiver, array) {
      var len, i;
      type$.JSArray_dynamic._as(array);
      len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    clear$0(receiver) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "clear", "clear");
      receiver.length = 0;
    },
    forEach$1(receiver, f) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("~(1)")._as(f);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        this.$indexSet(list, i, A.S(receiver[i]));
      return list.join(separator);
    },
    join$0(receiver) {
      return this.join$1(receiver, "");
    },
    take$1(receiver, n) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(n, "count", type$.int), A._arrayInstanceType(receiver)._precomputed1);
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    fold$1$2(receiver, initialValue, combine, $T) {
      var $length, value, i;
      $T._as(initialValue);
      A._arrayInstanceType(receiver)._bind$1($T)._eval$1("1(1,2)")._as(combine);
      $length = receiver.length;
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$single(receiver) {
      var t1 = receiver.length;
      if (t1 === 1) {
        if (0 >= t1)
          return A.ioore(receiver, 0);
        return receiver[0];
      }
      if (t1 === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      throw A.wrapException(A.IterableElementError_tooMany());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(iterable);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, 5);
      A.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    any$1(receiver, test) {
      var end, i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (test.call$1(receiver[i]))
          return true;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    sort$1(receiver, compare) {
      var len, a, b, undefineds, i,
        t1 = A._arrayInstanceType(receiver);
      t1._eval$1("int(1,1)?")._as(compare);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, "sort");
      len = receiver.length;
      if (len < 2)
        return;
      if (compare == null)
        compare = J._interceptors_JSArray__compareAny$closure();
      if (len === 2) {
        a = receiver[0];
        b = receiver[1];
        t1 = compare.call$2(a, b);
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 0) {
          receiver[0] = b;
          receiver[1] = a;
        }
        return;
      }
      undefineds = 0;
      if (t1._precomputed1._is(null))
        for (i = 0; i < receiver.length; ++i)
          if (receiver[i] === void 0) {
            receiver[i] = null;
            ++undefineds;
          }
      receiver.sort(A.convertDartClosureToJS(compare, 2));
      if (undefineds > 0)
        this._replaceSomeNullsWithUndefined$1(receiver, undefineds);
    },
    _replaceSomeNullsWithUndefined$1(receiver, count) {
      var i0,
        i = receiver.length;
      for (; i0 = i - 1, i > 0; i = i0)
        if (receiver[i0] === null) {
          receiver[i0] = void 0;
          --count;
          if (count === 0)
            break;
        }
    },
    indexOf$1(receiver, element) {
      var i,
        $length = receiver.length;
      if (0 >= $length)
        return -1;
      for (i = 0; i < $length; ++i) {
        if (!(i < receiver.length))
          return A.ioore(receiver, i);
        if (J.$eq$(receiver[i], element))
          return i;
      }
      return -1;
    },
    contains$1(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable(receiver, growable) {
      var t1 = A._setArrayType(receiver.slice(0), A._arrayInstanceType(receiver));
      return t1;
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    set$length(receiver, newLength) {
      receiver.$flags & 1 && A.throwUnsupportedOperation(receiver, "set length", "change the length of");
      if (newLength < 0)
        throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        A._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver);
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    indexWhere$1(receiver, test) {
      var i;
      A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
      if (0 >= receiver.length)
        return -1;
      for (i = 0; i < receiver.length; ++i)
        if (test.call$1(receiver[i]))
          return i;
      return -1;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._arrayInstanceType(receiver));
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current(_) {
      var t1 = this.__interceptors$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this.__interceptors$_length !== $length) {
        t1 = A.throwConcurrentModificationError(t1);
        throw A.wrapException(t1);
      }
      t2 = _this._index;
      if (t2 >= $length) {
        _this.__interceptors$_current = null;
        return false;
      }
      _this.__interceptors$_current = t1[t2];
      _this._index = t2 + 1;
      return true;
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    compareTo$1(receiver, b) {
      var bIsNegative;
      A._asNum(b);
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    toInt$0(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".toInt()"));
    },
    round$0(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
    },
    roundToDouble$0(receiver) {
      if (receiver < 0)
        return -Math.round(-receiver);
      else
        return Math.round(receiver);
    },
    toStringAsFixed$1(receiver, fractionDigits) {
      var result;
      if (fractionDigits > 20)
        throw A.wrapException(A.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    },
    toRadixString$1(receiver, radix) {
      var result, t1, t2, match, exponent;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      t1 = result.length;
      t2 = t1 - 1;
      if (!(t2 >= 0))
        return A.ioore(result, t2);
      if (result.charCodeAt(t2) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return A.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return A.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $add(receiver, other) {
      return receiver + other;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      return result + other;
    },
    $tdiv(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + other));
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.num);
    },
    $isComparable: 1,
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.int);
    },
    $isTrustedGetRuntimeType: 1,
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.double);
    },
    $isTrustedGetRuntimeType: 1
  };
  J.JSString.prototype = {
    allMatches$2(receiver, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1(receiver, string) {
      return this.allMatches$2(receiver, string, 0);
    },
    matchAsPrefix$2(receiver, string, start) {
      var t1, t2, i, t3, _null = null;
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, _null, _null));
      t1 = receiver.length;
      t2 = string.length;
      if (start + t1 > t2)
        return _null;
      for (i = 0; i < t1; ++i) {
        t3 = start + i;
        if (!(t3 >= 0 && t3 < t2))
          return A.ioore(string, t3);
        if (string.charCodeAt(t3) !== receiver.charCodeAt(i))
          return _null;
      }
      return new A.StringMatch(start, receiver);
    },
    endsWith$1(receiver, other) {
      var otherLength = other.length,
        t1 = receiver.length;
      if (otherLength > t1)
        return false;
      return other === this.substring$1(receiver, t1 - otherLength);
    },
    replaceFirst$2(receiver, from, to) {
      A.RangeError_checkValueInInterval(0, 0, receiver.length, "startIndex");
      return A.stringReplaceFirstUnchecked(receiver, from, to, 0);
    },
    split$1(receiver, pattern) {
      var t1;
      if (typeof pattern == "string")
        return A._setArrayType(receiver.split(pattern), type$.JSArray_String);
      else {
        if (pattern instanceof A.JSSyntaxRegExp) {
          t1 = pattern._hasCapturesCache;
          t1 = !(t1 == null ? pattern._hasCapturesCache = pattern._computeHasCaptures$0() : t1);
        } else
          t1 = false;
        if (t1)
          return A._setArrayType(receiver.split(pattern._nativeRegExp), type$.JSArray_String);
        else
          return this._defaultSplit$1(receiver, pattern);
      }
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length);
      return A.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    _defaultSplit$1(receiver, pattern) {
      var t1, start, $length, match, matchStart, matchEnd,
        result = A._setArrayType([], type$.JSArray_String);
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), start = 0, $length = 1; t1.moveNext$0();) {
        match = t1.get$current(t1);
        matchStart = match.get$start(match);
        matchEnd = match.get$end(match);
        $length = matchEnd - matchStart;
        if ($length === 0 && start === matchStart)
          continue;
        B.JSArray_methods.add$1(result, this.substring$2(receiver, start, matchStart));
        start = matchEnd;
      }
      if (start < receiver.length || $length > 0)
        B.JSArray_methods.add$1(result, this.substring$1(receiver, start));
      return result;
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      if (typeof pattern == "string") {
        endIndex = index + pattern.length;
        if (endIndex > receiver.length)
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    },
    startsWith$1(receiver, pattern) {
      return this.startsWith$2(receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    substring$1(receiver, start) {
      return this.substring$2(receiver, start, null);
    },
    toLowerCase$0(receiver) {
      return receiver.toLowerCase();
    },
    toUpperCase$0(receiver) {
      return receiver.toUpperCase();
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (0 >= endIndex)
        return A.ioore(result, 0);
      if (result.charCodeAt(0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      if (!(t1 >= 0))
        return A.ioore(result, t1);
      endIndex0 = result.charCodeAt(t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    trimRight$0(receiver) {
      var t1,
        result = receiver.trimEnd(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      t1 = endIndex - 1;
      if (!(t1 >= 0))
        return A.ioore(result, t1);
      if (result.charCodeAt(t1) !== 133)
        return result;
      return result.substring(0, J.JSString__skipTrailingWhitespace(result, t1));
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    padRight$1(receiver, width) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return receiver + this.$mul(" ", delta);
    },
    indexOf$2(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1(receiver, pattern) {
      return this.indexOf$2(receiver, pattern, 0);
    },
    lastIndexOf$2(receiver, pattern, start) {
      var t1, t2;
      if (start == null)
        start = receiver.length;
      else if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = pattern.length;
      t2 = receiver.length;
      if (start + t1 > t2)
        start = t2 - t1;
      return receiver.lastIndexOf(pattern, start);
    },
    lastIndexOf$1(receiver, pattern) {
      return this.lastIndexOf$2(receiver, pattern, null);
    },
    contains$1(receiver, other) {
      return A.stringContainsUnchecked(receiver, other, 0);
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    compareTo$1(receiver, other) {
      var t1;
      A._asString(other);
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.String);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isJSIndexable: 1,
    $isTrustedGetRuntimeType: 1,
    $isComparable: 1,
    $isPattern: 1,
    $isString: 1
  };
  A.CastStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("~(2)?")._as(onData);
      t2 = this._source.listen$3$cancelOnError$onDone(null, cancelOnError, type$.nullable_void_Function._as(onDone));
      t1 = new A.CastStreamSubscription(t2, $.Zone__current, t1._eval$1("CastStreamSubscription<1,2>"));
      t2.onData$1(t1.get$_onData());
      t1.onData$1(onData);
      t1.onError$1(0, onError);
      return t1;
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    cast$1$0(_, $R) {
      return new A.CastStream(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastStream<1,2>"));
    }
  };
  A.CastStreamSubscription.prototype = {
    cancel$0(_) {
      return this._source.cancel$0(0);
    },
    onData$1(handleData) {
      var t1 = this.$ti;
      t1._eval$1("~(2)?")._as(handleData);
      this._handleData = handleData == null ? null : this.__internal$_zone.registerUnaryCallback$2$1(handleData, type$.dynamic, t1._rest[1]);
    },
    onError$1(_, handleError) {
      var _this = this;
      _this._source.onError$1(0, handleError);
      if (handleError == null)
        _this._handleError = null;
      else if (type$.void_Function_Object_StackTrace._is(handleError))
        _this._handleError = _this.__internal$_zone.registerBinaryCallback$3$1(handleError, type$.dynamic, type$.Object, type$.StackTrace);
      else if (type$.void_Function_Object._is(handleError))
        _this._handleError = _this.__internal$_zone.registerUnaryCallback$2$1(handleError, type$.dynamic, type$.Object);
      else
        throw A.wrapException(A.ArgumentError$(string$.handle, null));
    },
    _onData$1(data) {
      var targetData, error, stack, handleError, t2, exception, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(data);
      t2 = _this._handleData;
      if (t2 == null)
        return;
      targetData = null;
      try {
        targetData = t1._rest[1]._as(data);
      } catch (exception) {
        error = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        handleError = _this._handleError;
        if (handleError == null)
          _this.__internal$_zone.handleUncaughtError$2(error, stack);
        else {
          t1 = type$.Object;
          t2 = _this.__internal$_zone;
          if (type$.void_Function_Object_StackTrace._is(handleError))
            t2.runBinaryGuarded$2$3(handleError, error, stack, t1, type$.StackTrace);
          else
            t2.runUnaryGuarded$1$2(type$.void_Function_Object._as(handleError), error, t1);
        }
        return;
      }
      _this.__internal$_zone.runUnaryGuarded$1$2(t2, targetData, t1._rest[1]);
    },
    pause$1(_, resumeSignal) {
      this._source.pause$1(0, type$.nullable_Future_dynamic._as(resumeSignal));
    },
    pause$0(_) {
      return this.pause$1(0, null);
    },
    resume$0(_) {
      this._source.resume$0(0);
    },
    asFuture$1$1(futureValue, $E) {
      return this._source.asFuture$1$1(futureValue, $E);
    },
    $isStreamSubscription: 1
  };
  A._BytesBuilder.prototype = {
    add$1(_, bytes) {
      var typedBytes;
      type$.List_int._as(bytes);
      typedBytes = type$.Uint8List._is(bytes) ? bytes : new Uint8Array(A._ensureNativeList(bytes));
      B.JSArray_methods.add$1(this._chunks, typedBytes);
      this.__internal$_length = this.__internal$_length + typedBytes.length;
    },
    takeBytes$0() {
      var t2, t3, buffer, offset, _i, chunk, offset0, _this = this,
        t1 = _this.__internal$_length;
      if (t1 === 0)
        return $.$get$_CopyingBytesBuilder__emptyList0();
      t2 = _this._chunks;
      t3 = t2.length;
      if (t3 === 1) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        buffer = t2[0];
        _this.__internal$_length = 0;
        B.JSArray_methods.clear$0(t2);
        return buffer;
      }
      buffer = new Uint8Array(t1);
      for (offset = 0, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i, offset = offset0) {
        chunk = t2[_i];
        offset0 = offset + chunk.length;
        B.NativeUint8List_methods.setRange$3(buffer, offset, offset0, chunk);
      }
      _this.__internal$_length = 0;
      B.JSArray_methods.clear$0(t2);
      return buffer;
    },
    get$length(_) {
      return this.__internal$_length;
    },
    $isBytesBuilder: 1
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), A._instanceType(this)._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    take$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.take$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    get$first(_) {
      return A._instanceType(this)._rest[1]._as(J.get$first$ax(this.get$_source()));
    },
    get$single(_) {
      return A._instanceType(this)._rest[1]._as(J.get$single$ax(this.get$_source()));
    },
    contains$1(_, other) {
      return J.contains$1$asx(this.get$_source(), other);
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current(_) {
      var t1 = this._source;
      return this.$ti._rest[1]._as(t1.get$current(t1));
    },
    $isIterator: 1
  };
  A.CastIterable.prototype = {
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet(_, index, value) {
      var t1 = this.$ti;
      J.$indexSet$ax(this._source, index, t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    set$length(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1(_, value) {
      var t1 = this.$ti;
      J.add$1$ax(this._source, t1._precomputed1._as(t1._rest[1]._as(value)));
    },
    sort$1(_, compare) {
      var t1;
      this.$ti._eval$1("int(2,2)?")._as(compare);
      t1 = compare == null ? null : new A._CastListBase_sort_closure(this, compare);
      J.sort$1$ax(this._source, t1);
    },
    remove$1(_, value) {
      return J.remove$1$ax(this._source, value);
    },
    setRange$4(_, start, end, iterable, skipCount) {
      var t1 = this.$ti;
      J.setRange$4$ax(this._source, start, end, A.CastIterable_CastIterable(t1._eval$1("Iterable<2>")._as(iterable), t1._rest[1], t1._precomputed1), skipCount);
    },
    setRange$3(_, start, end, iterable) {
      return this.setRange$4(0, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A._CastListBase_sort_closure.prototype = {
    call$2(v1, v2) {
      var t1 = this.$this.$ti,
        t2 = t1._precomputed1;
      t2._as(v1);
      t2._as(v2);
      t1 = t1._rest[1];
      return this.compare.call$2(t1._as(v1), t1._as(v2));
    },
    $signature() {
      return this.$this.$ti._eval$1("int(1,1)");
    }
  };
  A.CastList.prototype = {
    cast$1$0(_, $R) {
      return new A.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source() {
      return this._source;
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this._string.length;
    },
    $index(_, i) {
      var t1 = this._string;
      if (!(i >= 0 && i < t1.length))
        return A.ioore(t1, i);
      return t1.charCodeAt(i);
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      return A.Future_Future$value(null, type$.void);
    },
    $signature: 104
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$first(_) {
      if (this.get$length(this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    get$last(_) {
      var _this = this;
      if (_this.get$length(_this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return _this.elementAt$1(0, _this.get$length(_this) - 1);
    },
    get$single(_) {
      var _this = this;
      if (_this.get$length(_this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      if (_this.get$length(_this) > 1)
        throw A.wrapException(A.IterableElementError_tooMany());
      return _this.elementAt$1(0, 0);
    },
    contains$1(_, element) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(_this.elementAt$1(0, i), element))
          return true;
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return false;
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    join$0(_) {
      return this.join$1(0, "");
    },
    where$1(_, test) {
      return this.super$Iterable$where(0, A._instanceType(this)._eval$1("bool(ListIterable.E)")._as(test));
    },
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return new A.MappedListIterable(this, t1._bind$1($T)._eval$1("1(ListIterable.E)")._as(toElement), t1._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    reduce$1(_, combine) {
      var $length, value, i, _this = this;
      A._instanceType(_this)._eval$1("ListIterable.E(ListIterable.E,ListIterable.E)")._as(combine);
      $length = _this.get$length(_this);
      if ($length === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      value = _this.elementAt$1(0, 0);
      for (i = 1; i < $length; ++i) {
        value = combine.call$2(value, _this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return value;
    },
    fold$1$2(_, initialValue, combine, $T) {
      var $length, value, i, _this = this;
      $T._as(initialValue);
      A._instanceType(_this)._bind$1($T)._eval$1("1(1,ListIterable.E)")._as(combine);
      $length = _this.get$length(_this);
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, _this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return value;
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    take$1(_, count) {
      return A.SubListIterable$(this, 0, A.checkNotNullable(count, "count", type$.int), A._instanceType(this)._eval$1("ListIterable.E"));
    }
  };
  A.SubListIterable.prototype = {
    SubListIterable$3(_iterable, _start, _endOrLength, $E) {
      var endOrLength,
        t1 = this._start;
      A.RangeError_checkNotNegative(t1, "start");
      endOrLength = this._endOrLength;
      if (endOrLength != null) {
        A.RangeError_checkNotNegative(endOrLength, "end");
        if (t1 > endOrLength)
          throw A.wrapException(A.RangeError$range(t1, 0, endOrLength, "start", null));
      }
    },
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$withLength(index, _this.get$length(0), _this, null, "index"));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    take$1(_, count) {
      var endOrLength, t1, newEnd, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      endOrLength = _this._endOrLength;
      t1 = _this._start;
      if (endOrLength == null)
        return A.SubListIterable$(_this.__internal$_iterable, t1, B.JSInt_methods.$add(t1, count), _this.$ti._precomputed1);
      else {
        newEnd = B.JSInt_methods.$add(t1, count);
        if (endOrLength < newEnd)
          return _this;
        return A.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);
      }
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = J.JSArray_JSArray$fixed(0, _this.$ti._precomputed1);
        return t1;
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), false, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        B.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    }
  };
  A.ListIterator.prototype = {
    get$current(_) {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.__internal$_current = null;
        return false;
      }
      _this.__internal$_current = t2.elementAt$1(t1, t3);
      ++_this.__internal$_index;
      return true;
    },
    $isIterator: 1
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, A._instanceType(this)._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    get$first(_) {
      return this._f.call$1(J.get$first$ax(this.__internal$_iterable));
    },
    get$single(_) {
      return this._f.call$1(J.get$single$ax(this.__internal$_iterable));
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.__internal$_current = _this._f.call$1(t1.get$current(t1));
        return true;
      }
      _this.__internal$_current = null;
      return false;
    },
    get$current(_) {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    $isIterator: 1
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.WhereIterable.prototype = {
    get$iterator(_) {
      return new A.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("WhereIterator<1>"));
    },
    map$1$1(_, toElement, $T) {
      var t1 = this.$ti;
      return new A.MappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(toElement), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    }
  };
  A.WhereIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (t2.call$1(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    },
    $isIterator: 1
  };
  A.ExpandIterable.prototype = {
    get$iterator(_) {
      return new A.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, B.C_EmptyIterator, this.$ti._eval$1("ExpandIterator<1,2>"));
    }
  };
  A.ExpandIterator.prototype = {
    get$current(_) {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    moveNext$0() {
      var t2, t3, _this = this,
        t1 = _this._currentExpansion;
      if (t1 == null)
        return false;
      for (t2 = _this._iterator, t3 = _this._f; !t1.moveNext$0();) {
        _this.__internal$_current = null;
        if (t2.moveNext$0()) {
          _this._currentExpansion = null;
          t1 = J.get$iterator$ax(t3.call$1(t2.get$current(t2)));
          _this._currentExpansion = t1;
        } else
          return false;
      }
      t1 = _this._currentExpansion;
      _this.__internal$_current = t1.get$current(t1);
      return true;
    },
    $isIterator: 1
  };
  A.TakeIterable.prototype = {
    get$iterator(_) {
      return new A.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, A._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  A.EfficientLengthTakeIterable.prototype = {
    get$length(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  A.TakeIterator.prototype = {
    moveNext$0() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current(_) {
      var t1;
      if (this._remaining < 0) {
        this.$ti._precomputed1._as(null);
        return null;
      }
      t1 = this._iterator;
      return t1.get$current(t1);
    },
    $isIterator: 1
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      return new A.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, A._instanceType(this)._eval$1("SkipIterator<1>"));
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count", type$.int);
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    },
    $isIterator: 1
  };
  A.SkipWhileIterable.prototype = {
    get$iterator(_) {
      return new A.SkipWhileIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("SkipWhileIterator<1>"));
    }
  };
  A.SkipWhileIterator.prototype = {
    moveNext$0() {
      var t1, t2, _this = this;
      if (!_this._hasSkipped) {
        _this._hasSkipped = true;
        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)
          if (!t2.call$1(t1.get$current(t1)))
            return true;
      }
      return _this._iterator.moveNext$0();
    },
    get$current(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    },
    $isIterator: 1
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    get$first(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$single(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    contains$1(_, element) {
      return false;
    },
    map$1$1(_, toElement, $T) {
      this.$ti._bind$1($T)._eval$1("1(2)")._as(toElement);
      return new A.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    take$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    toList$1$growable(_, growable) {
      var t1 = J.JSArray_JSArray$fixed(0, this.$ti._precomputed1);
      return t1;
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    $isIterator: 1
  };
  A.WhereTypeIterable.prototype = {
    get$iterator(_) {
      return new A.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  A.WhereTypeIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current(_) {
      var t1 = this._source;
      return this.$ti._precomputed1._as(t1.get$current(t1));
    },
    $isIterator: 1
  };
  A.FixedLengthListMixin.prototype = {
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1(receiver, value) {
      A.instanceType(receiver)._eval$1("FixedLengthListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
    },
    addAll$1(receiver, iterable) {
      A.instanceType(receiver)._eval$1("Iterable<FixedLengthListMixin.E>")._as(iterable);
      throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
    },
    remove$1(receiver, element) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from a fixed-length list"));
    }
  };
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1(_, value) {
      A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to an unmodifiable list"));
    },
    remove$1(_, element) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from an unmodifiable list"));
    },
    sort$1(_, compare) {
      A._instanceType(this)._eval$1("int(UnmodifiableListMixin.E,UnmodifiableListMixin.E)?")._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    setRange$4(_, start, end, iterable, skipCount) {
      A._instanceType(this)._eval$1("Iterable<UnmodifiableListMixin.E>")._as(iterable);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    setRange$3(_, start, end, iterable) {
      return this.setRange$4(0, start, end, iterable, 0);
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A.ReversedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  A.Symbol.prototype = {
    get$hashCode(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 664597 * B.JSString_methods.get$hashCode(this.__internal$_name) & 536870911;
      this._hashCode = hash;
      return hash;
    },
    toString$0(_) {
      return 'Symbol("' + this.__internal$_name + '")';
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Symbol && this.__internal$_name === other.__internal$_name;
    }
  };
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A._Record_2.prototype = {$recipe: "+(1,2)", $shape: 1};
  A._Record_2_attributes_children.prototype = {$recipe: "+attributes,children(1,2)", $shape: 2};
  A._Record_3.prototype = {$recipe: "+(1,2,3)", $shape: 3};
  A.ConstantMapView.prototype = {};
  A.ConstantMap.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    addAll$1(_, other) {
      A._instanceType(this)._eval$1("Map<1,2>")._as(other);
      A.ConstantMap__throwUnmodifiable();
    },
    get$entries(_) {
      return new A._SyncStarIterable(this.entries$body$ConstantMap(0), A._instanceType(this)._eval$1("_SyncStarIterable<MapEntry<1,2>>"));
    },
    entries$body$ConstantMap($async$_) {
      var $async$self = this;
      return function() {
        var _ = $async$_;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, t2, t3, key, t4;
        return function $async$get$entries($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys($async$self), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self), t3 = t2._rest[1], t2 = t2._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current(t1);
                t4 = $async$self.$index(0, key);
                $async$goto = 4;
                return $async$iterator._async$_current = new A.MapEntry(key, t4 == null ? t3._as(t4) : t4, t2), 1;
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    map$2$1(_, transform, K2, V2) {
      var result = A.LinkedHashMap_LinkedHashMap$_empty(K2, V2);
      this.forEach$1(0, new A.ConstantMap_map_closure(this, A._instanceType(this)._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(3,4)")._as(transform), result));
      return result;
    },
    $isMap: 1
  };
  A.ConstantMap_map_closure.prototype = {
    call$2(key, value) {
      var t1 = A._instanceType(this.$this),
        entry = this.transform.call$2(t1._precomputed1._as(key), t1._rest[1]._as(value));
      this.result.$indexSet(0, entry.key, entry.value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this._values.length;
    },
    get$_keys() {
      var keys = this.$keys;
      if (keys == null) {
        keys = Object.keys(this._jsIndex);
        this.$keys = keys;
      }
      return keys;
    },
    containsKey$1(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(0, key))
        return null;
      return this._values[this._jsIndex[key]];
    },
    forEach$1(_, f) {
      var keys, values, t1, i;
      this.$ti._eval$1("~(1,2)")._as(f);
      keys = this.get$_keys();
      values = this._values;
      for (t1 = keys.length, i = 0; i < t1; ++i)
        f.call$2(keys[i], values[i]);
    },
    get$keys(_) {
      return new A._KeysOrValues(this.get$_keys(), this.$ti._eval$1("_KeysOrValues<1>"));
    }
  };
  A._KeysOrValues.prototype = {
    get$length(_) {
      return this._elements.length;
    },
    get$isEmpty(_) {
      return 0 === this._elements.length;
    },
    get$isNotEmpty(_) {
      return 0 !== this._elements.length;
    },
    get$iterator(_) {
      var t1 = this._elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    }
  };
  A._KeysOrValuesOrElementsIterator.prototype = {
    get$current(_) {
      var t1 = this.__js_helper$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this.__js_helper$_index;
      if (t1 >= _this._length) {
        _this.__js_helper$_current = null;
        return false;
      }
      _this.__js_helper$_current = _this._elements[t1];
      _this.__js_helper$_index = t1 + 1;
      return true;
    },
    $isIterator: 1
  };
  A.ConstantSet.prototype = {};
  A.ConstantStringSet.prototype = {
    get$length(_) {
      return this._length;
    },
    get$isEmpty(_) {
      return this._length === 0;
    },
    get$isNotEmpty(_) {
      return this._length !== 0;
    },
    get$iterator(_) {
      var t1, _this = this,
        keys = _this.$keys;
      if (keys == null) {
        keys = Object.keys(_this._jsIndex);
        _this.$keys = keys;
      }
      t1 = keys;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, _this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    },
    contains$1(_, key) {
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    }
  };
  A.Instantiation.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Instantiation1 && this._genericClosure.$eq(0, other._genericClosure) && A.getRuntimeTypeOfClosure(this) === A.getRuntimeTypeOfClosure(other);
    },
    get$hashCode(_) {
      return A.Object_hash(this._genericClosure, A.getRuntimeTypeOfClosure(this), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = B.JSArray_methods.join$1([A.createRuntimeType(this.$ti._precomputed1)], ", ");
      return this._genericClosure.toString$0(0) + " with " + ("<" + t1 + ">");
    }
  };
  A.Instantiation1.prototype = {
    call$2(a0, a1) {
      return this._genericClosure.call$1$2(a0, a1, this.$ti._rest[0]);
    },
    call$4(a0, a1, a2, a3) {
      return this._genericClosure.call$1$4(a0, a1, a2, a3, this.$ti._rest[0]);
    },
    $signature() {
      return A.instantiatedGenericFunctionType(A.closureFunctionType(this._genericClosure), this.$ti);
    }
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      return "Null check operator used on a null value";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    get$runtimeType(_) {
      var rti = A.closureFunctionType(this);
      return A.createRuntimeType(rti == null ? A.instanceType(this) : rti);
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this._length;
    },
    get$isEmpty(_) {
      return this._length === 0;
    },
    get$isNotEmpty(_) {
      return this._length !== 0;
    },
    get$keys(_) {
      return new A.LinkedHashMapKeysIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeysIterable<1>"));
    },
    get$entries(_) {
      return new A.LinkedHashMapEntriesIterable(this, A._instanceType(this)._eval$1("LinkedHashMapEntriesIterable<1,2>"));
    },
    containsKey$1(_, key) {
      var strings, nums;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else
        return this.internalContainsKey$1(key);
    },
    internalContainsKey$1(key) {
      var rest = this.__js_helper$_rest;
      if (rest == null)
        return false;
      return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
    },
    addAll$1(_, other) {
      J.forEach$1$ax(A._instanceType(this)._eval$1("Map<1,2>")._as(other), new A.JsLinkedHashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2(_, key, ifAbsent) {
      var t2, value, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._eval$1("2()")._as(ifAbsent);
      if (_this.containsKey$1(0, key)) {
        t2 = _this.$index(0, key);
        return t2 == null ? t1._rest[1]._as(t2) : t2;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this.__js_helper$_removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 0x3fffffff) === key)
        return _this.__js_helper$_removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this;
      A._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell,
        t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    __js_helper$_removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var _this = this,
        t1 = A._instanceType(_this),
        cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this._length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this._length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    $isLinkedHashMap: 1
  };
  A.JsLinkedHashMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1.$indexSet(0, t2._precomputed1._as(key), t2._rest[1]._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeysIterable.prototype = {
    get$length(_) {
      return this.__js_helper$_map._length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_map._length === 0;
    },
    get$iterator(_) {
      var t1 = this.__js_helper$_map;
      return new A.LinkedHashMapKeyIterator(t1, t1._modifications, t1._first, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
    },
    contains$1(_, element) {
      return this.__js_helper$_map.containsKey$1(0, element);
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current(_) {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this.__js_helper$_map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellKey;
        _this._cell = cell._next;
        return true;
      }
    },
    $isIterator: 1
  };
  A.LinkedHashMapValuesIterable.prototype = {
    get$length(_) {
      return this.__js_helper$_map._length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_map._length === 0;
    },
    get$iterator(_) {
      var t1 = this.__js_helper$_map;
      return new A.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, this.$ti._eval$1("LinkedHashMapValueIterator<1>"));
    }
  };
  A.LinkedHashMapValueIterator.prototype = {
    get$current(_) {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this.__js_helper$_map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellValue;
        _this._cell = cell._next;
        return true;
      }
    },
    $isIterator: 1
  };
  A.LinkedHashMapEntriesIterable.prototype = {
    get$length(_) {
      return this.__js_helper$_map._length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_map._length === 0;
    },
    get$iterator(_) {
      var t1 = this.__js_helper$_map;
      return new A.LinkedHashMapEntryIterator(t1, t1._modifications, t1._first, this.$ti._eval$1("LinkedHashMapEntryIterator<1,2>"));
    }
  };
  A.LinkedHashMapEntryIterator.prototype = {
    get$current(_) {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this.__js_helper$_map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = new A.MapEntry(cell.hashMapCellKey, cell.hashMapCellValue, _this.$ti._eval$1("MapEntry<1,2>"));
        _this._cell = cell._next;
        return true;
      }
    },
    $isIterator: 1
  };
  A.JsIdentityLinkedHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.objectHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].hashMapCellKey;
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 32
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 95
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(A._asString(tag));
    },
    $signature: 92
  };
  A._Record.prototype = {
    get$runtimeType(_) {
      return A.createRuntimeType(this._getRti$0());
    },
    _getRti$0() {
      return A.evaluateRtiForRecord(this.$recipe, this._getFieldValues$0());
    },
    toString$0(_) {
      return this._toString$1(false);
    },
    _toString$1(safe) {
      var t2, separator, i, key, value,
        keys = this._fieldKeys$0(),
        values = this._getFieldValues$0(),
        t1 = (safe ? "" + "Record " : "") + "(";
      for (t2 = keys.length, separator = "", i = 0; i < t2; ++i, separator = ", ") {
        t1 += separator;
        key = keys[i];
        if (typeof key == "string")
          t1 = t1 + key + ": ";
        if (!(i < values.length))
          return A.ioore(values, i);
        value = values[i];
        t1 = safe ? t1 + A.Primitives_safeToString(value) : t1 + A.S(value);
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _fieldKeys$0() {
      var t1,
        shapeTag = this.$shape;
      for (; $._Record__computedFieldKeys.length <= shapeTag;)
        B.JSArray_methods.add$1($._Record__computedFieldKeys, null);
      t1 = $._Record__computedFieldKeys[shapeTag];
      if (t1 == null) {
        t1 = this._computeFieldKeys$0();
        B.JSArray_methods.$indexSet($._Record__computedFieldKeys, shapeTag, t1);
      }
      return t1;
    },
    _computeFieldKeys$0() {
      var i, names, last,
        recipe = this.$recipe,
        position = recipe.indexOf("("),
        joinedNames = recipe.substring(1, position),
        fields = recipe.substring(position),
        arity = fields === "()" ? 0 : fields.replace(/[^,]/g, "").length + 1,
        result = A._setArrayType(new Array(arity), type$.JSArray_Object);
      for (i = 0; i < arity; ++i)
        result[i] = i;
      if (joinedNames !== "") {
        names = joinedNames.split(",");
        i = names.length;
        for (last = arity; i > 0;) {
          --last;
          --i;
          B.JSArray_methods.$indexSet(result, last, names[i]);
        }
      }
      return A.List_List$unmodifiable(result, type$.Object);
    }
  };
  A._Record2.prototype = {
    _getFieldValues$0() {
      return [this._0, this._1];
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._Record2 && this.$shape === other.$shape && J.$eq$(this._0, other._0) && J.$eq$(this._1, other._1);
    },
    get$hashCode(_) {
      return A.Object_hash(this.$shape, this._0, this._1, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._Record3.prototype = {
    _getFieldValues$0() {
      return [this._0, this._1, this._2];
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A._Record3 && _this.$shape === other.$shape && J.$eq$(_this._0, other._0) && J.$eq$(_this._1, other._1) && J.$eq$(_this._2, other._2);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.$shape, _this._0, _this._1, _this._2, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    get$_nativeGlobalVersion() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, "g");
    },
    get$_nativeAnchoredVersion() {
      var _this = this,
        t1 = _this._nativeAnchoredRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeAnchoredRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, "y");
    },
    _computeHasCaptures$0() {
      var t2,
        t1 = this.pattern;
      if (!B.JSString_methods.contains$1(t1, "("))
        return false;
      t2 = this._nativeRegExp.unicode ? "u" : "";
      return new RegExp("(?:)|" + t1, t2).exec("").length > 1;
    },
    firstMatch$1(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new A._MatchImplementation(m);
    },
    allMatches$2(_, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._AllMatchesIterable(this, string, start);
    },
    allMatches$1(_, string) {
      return this.allMatches$2(0, string, 0);
    },
    _execGlobal$2(string, start) {
      var match,
        regexp = this.get$_nativeGlobalVersion();
      if (regexp == null)
        regexp = type$.Object._as(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    },
    _execAnchored$2(string, start) {
      var match,
        regexp = this.get$_nativeAnchoredVersion();
      if (regexp == null)
        regexp = type$.Object._as(regexp);
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    },
    matchAsPrefix$2(_, string, start) {
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, null, null));
      return this._execAnchored$2(string, start);
    },
    matchAsPrefix$1(_, string) {
      return this.matchAsPrefix$2(0, string, 0);
    },
    $isPattern: 1,
    $isRegExp: 1
  };
  A._MatchImplementation.prototype = {
    get$start(_) {
      return this._match.index;
    },
    get$end(_) {
      var t1 = this._match;
      return t1.index + t1[0].length;
    },
    $index(_, index) {
      var t1 = this._match;
      if (!(index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    namedGroup$1($name) {
      var result,
        groups = this._match.groups;
      if (groups != null) {
        result = groups[$name];
        if (result != null || $name in groups)
          return result;
      }
      throw A.wrapException(A.ArgumentError$value($name, "name", "Not a capture group name"));
    },
    $isMatch: 1,
    $isRegExpMatch: 1
  };
  A._AllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._AllMatchesIterator(this._re, this.__js_helper$_string, this.__js_helper$_start);
    }
  };
  A._AllMatchesIterator.prototype = {
    get$current(_) {
      var t1 = this.__js_helper$_current;
      return t1 == null ? type$.RegExpMatch._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, t3, match, nextIndex, t4, _this = this,
        string = _this.__js_helper$_string;
      if (string == null)
        return false;
      t1 = _this._nextIndex;
      t2 = string.length;
      if (t1 <= t2) {
        t3 = _this._regExp;
        match = t3._execGlobal$2(string, t1);
        if (match != null) {
          _this.__js_helper$_current = match;
          nextIndex = match.get$end(0);
          if (match._match.index === nextIndex) {
            t1 = false;
            if (t3._nativeRegExp.unicode) {
              t3 = _this._nextIndex;
              t4 = t3 + 1;
              if (t4 < t2) {
                if (!(t3 >= 0 && t3 < t2))
                  return A.ioore(string, t3);
                t3 = string.charCodeAt(t3);
                if (t3 >= 55296 && t3 <= 56319) {
                  if (!(t4 >= 0))
                    return A.ioore(string, t4);
                  t1 = string.charCodeAt(t4);
                  t1 = t1 >= 56320 && t1 <= 57343;
                }
              }
            }
            nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;
          }
          _this._nextIndex = nextIndex;
          return true;
        }
      }
      _this.__js_helper$_string = _this.__js_helper$_current = null;
      return false;
    },
    $isIterator: 1
  };
  A.StringMatch.prototype = {
    get$end(_) {
      return this.start + this.pattern.length;
    },
    $index(_, g) {
      if (g !== 0)
        A.throwExpression(A.RangeError$value(g, null));
      return this.pattern;
    },
    $isMatch: 1,
    get$start(receiver) {
      return this.start;
    }
  };
  A._StringAllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    },
    get$first(_) {
      var t1 = this._pattern,
        index = this._input.indexOf(t1, this.__js_helper$_index);
      if (index >= 0)
        return new A.StringMatch(index, t1);
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current(_) {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    },
    $isIterator: 1
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this.__late_helper$_value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this.__late_helper$_name + "' has not been initialized."));
      return t1;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$lengthInBytes(receiver) {
      return receiver.byteLength;
    },
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_rqD;
    },
    asUint8List$2(receiver, offsetInBytes, $length) {
      var t1 = new Uint8Array(receiver, offsetInBytes, $length);
      return t1;
    },
    $isTrustedGetRuntimeType: 1,
    $isNativeByteBuffer: 1,
    $isByteBuffer: 1
  };
  A.NativeTypedData.prototype = {
    get$buffer(receiver) {
      if (((receiver.$flags | 0) & 2) !== 0)
        return new A._UnmodifiableNativeByteBufferView(receiver.buffer);
      else
        return receiver.buffer;
    },
    _invalidPosition$3(receiver, position, $length, $name) {
      var t1 = A.RangeError$range(position, 0, $length, $name, null);
      throw A.wrapException(t1);
    },
    _checkPosition$3(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    }
  };
  A._UnmodifiableNativeByteBufferView.prototype = {
    get$lengthInBytes(_) {
      return this._data.byteLength;
    },
    asUint8List$2(_, offsetInBytes, $length) {
      var result = A.NativeUint8List_NativeUint8List$view(this._data, offsetInBytes, $length);
      result.$flags = 3;
      return result;
    },
    $isByteBuffer: 1
  };
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_9dB;
    },
    $isTrustedGetRuntimeType: 1,
    $isByteData: 1
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    _setRangeFast$4(receiver, start, end, source, skipCount) {
      var count, sourceLength,
        targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        throw A.wrapException(A.RangeError$range(start, 0, end, null, null));
      count = end - start;
      if (skipCount < 0)
        throw A.wrapException(A.ArgumentError$(skipCount, null));
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw A.wrapException(A.StateError$("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asDouble(value);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      type$.Iterable_double._as(iterable);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, 5);
      if (type$.NativeTypedArrayOfDouble._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListBase$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._asInt(value);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      type$.Iterable_int._as(iterable);
      receiver.$flags & 2 && A.throwUnsupportedOperation(receiver, 5);
      if (type$.NativeTypedArrayOfInt._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListBase$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeFloat32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float32List_9Kz;
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isFloat32List: 1
  };
  A.NativeFloat64List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float64List_9Kz;
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isFloat64List: 1
  };
  A.NativeInt16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int16List_s5h;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isInt16List: 1
  };
  A.NativeInt32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int32List_O8Z;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isInt32List: 1
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_rFV;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isInt8List: 1
  };
  A.NativeUint16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint16List_kmP;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isUint16List: 1
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_kmP;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint32Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isUint32List: 1
  };
  A.NativeUint8ClampedList.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8ClampedList_04U;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isTypedDataList: 1,
    $isUint8ClampedList: 1
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_8Eb;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isNativeUint8List: 1,
    $isTypedDataList: 1,
    $isUint8List: 1
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    },
    $isType: 1
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(__wc0_formal) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 3
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 86
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 1
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 1
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    },
    _TimerImpl$periodic$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setInterval(A.convertDartClosureToJS(new A._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("Periodic timer."));
    },
    cancel$0(_) {
      var t1;
      if (self.setTimeout != null) {
        t1 = this._handle;
        if (t1 == null)
          return;
        if (this._once)
          self.clearTimeout(t1);
        else
          self.clearInterval(t1);
        this._handle = null;
      } else
        throw A.wrapException(A.UnsupportedError$("Canceling a timer."));
    },
    $isTimer: 1
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._handle = null;
      t1._tick = 1;
      this.callback.call$0();
    },
    $signature: 0
  };
  A._TimerImpl$periodic_closure.prototype = {
    call$0() {
      var duration, _this = this,
        t1 = _this.$this,
        tick = t1._tick + 1,
        t2 = _this.milliseconds;
      if (t2 > 0) {
        duration = Date.now() - _this.start;
        if (duration > (tick + 1) * t2)
          tick = B.JSInt_methods.$tdiv(duration, t2);
      }
      t1._tick = tick;
      _this.callback.call$1(t1);
    },
    $signature: 1
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(_, value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/?")._as(value);
      if (value == null)
        value = t1._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t2 = _this._future;
        if (t1._eval$1("Future<1>")._is(value))
          t2._chainFuture$1(value);
        else
          t2._completeWithValue$1(value);
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeErrorObject$1(new A.AsyncError(e, st));
      else
        t1._asyncCompleteErrorObject$1(new A.AsyncError(e, st));
    },
    $isCompleter: 1
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 8
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    $signature: 75
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(A._asInt(errorCode), result);
    },
    $signature: 68
  };
  A._asyncStarHelper_closure.prototype = {
    call$0() {
      var t3,
        t1 = this.controller,
        t2 = t1.___AsyncStarStreamController_controller_A;
      t2 === $ && A.throwLateFieldNI("controller");
      t3 = t2._state;
      if ((t3 & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t3 & 2) === 0) {
        t1.isSuspended = true;
        return;
      }
      t1 = t1.cancelationFuture != null ? 2 : 0;
      this.bodyFunction.call$2(t1, null);
    },
    $signature: 0
  };
  A._asyncStarHelper_closure0.prototype = {
    call$1(__wc0_formal) {
      var errorCode = this.controller.cancelationFuture != null ? 2 : 0;
      this.bodyFunction.call$2(errorCode, null);
    },
    $signature: 3
  };
  A._AsyncStarStreamController.prototype = {
    _AsyncStarStreamController$1(body, $T) {
      var _this = this,
        t1 = new A._AsyncStarStreamController__resumeBody(body);
      _this.___AsyncStarStreamController_controller_A = _this.$ti._eval$1("StreamController<1>")._as(A.StreamController_StreamController(new A._AsyncStarStreamController_closure(_this, body), new A._AsyncStarStreamController_closure0(t1), null, new A._AsyncStarStreamController_closure1(_this, t1), false, $T));
    }
  };
  A._AsyncStarStreamController__resumeBody.prototype = {
    call$0() {
      A.scheduleMicrotask(new A._AsyncStarStreamController__resumeBody_closure(this.body));
    },
    $signature: 1
  };
  A._AsyncStarStreamController__resumeBody_closure.prototype = {
    call$0() {
      this.body.call$2(0, null);
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure0.prototype = {
    call$0() {
      this._resumeBody.call$0();
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.isSuspended) {
        t1.isSuspended = false;
        this._resumeBody.call$0();
      }
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___AsyncStarStreamController_controller_A;
      t2 === $ && A.throwLateFieldNI("controller");
      if ((t2._state & 4) === 0) {
        t1.cancelationFuture = new A._Future($.Zone__current, type$._Future_dynamic);
        if (t1.isSuspended) {
          t1.isSuspended = false;
          A.scheduleMicrotask(new A._AsyncStarStreamController__closure(this.body));
        }
        return t1.cancelationFuture;
      }
    },
    $signature: 65
  };
  A._AsyncStarStreamController__closure.prototype = {
    call$0() {
      this.body.call$2(2, null);
    },
    $signature: 0
  };
  A._IterationMarker.prototype = {
    toString$0(_) {
      return "IterationMarker(" + this.state + ", " + A.S(this.value) + ")";
    }
  };
  A._SyncStarIterator.prototype = {
    get$current(_) {
      var t1 = this._async$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    _resumeBody$2(errorCode, errorValue) {
      var body, t1, exception;
      errorCode = A._asInt(errorCode);
      errorValue = errorValue;
      body = this._async$_body;
      for (; true;)
        try {
          t1 = body(this, errorCode, errorValue);
          return t1;
        } catch (exception) {
          errorValue = exception;
          errorCode = 1;
        }
    },
    moveNext$0() {
      var nestedIterator, t1, exception, value, suspendedBodies, _this = this, errorValue = null, errorCode = 0;
      for (; true;) {
        nestedIterator = _this._nestedIterator;
        if (nestedIterator != null)
          try {
            if (nestedIterator.moveNext$0()) {
              t1 = nestedIterator;
              _this._async$_current = t1.get$current(t1);
              return true;
            } else
              _this._nestedIterator = null;
          } catch (exception) {
            errorValue = exception;
            errorCode = 1;
            _this._nestedIterator = null;
          }
        value = _this._resumeBody$2(errorCode, errorValue);
        if (1 === value)
          return true;
        if (0 === value) {
          _this._async$_current = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._async$_body = A._SyncStarIterator__terminatedBody;
            return false;
          }
          if (0 >= suspendedBodies.length)
            return A.ioore(suspendedBodies, -1);
          _this._async$_body = suspendedBodies.pop();
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (2 === value) {
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (3 === value) {
          errorValue = _this._datum;
          _this._datum = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._async$_current = null;
            _this._async$_body = A._SyncStarIterator__terminatedBody;
            throw errorValue;
            return false;
          }
          if (0 >= suspendedBodies.length)
            return A.ioore(suspendedBodies, -1);
          _this._async$_body = suspendedBodies.pop();
          errorCode = 1;
          continue;
        }
        throw A.wrapException(A.StateError$("sync*"));
      }
      return false;
    },
    _yieldStar$1(iterable) {
      var t1, t2, _this = this;
      if (iterable instanceof A._SyncStarIterable) {
        t1 = iterable._outerHelper();
        t2 = _this._suspendedBodies;
        if (t2 == null)
          t2 = _this._suspendedBodies = [];
        B.JSArray_methods.add$1(t2, _this._async$_body);
        _this._async$_body = t1;
        return 2;
      } else {
        _this._nestedIterator = J.get$iterator$ax(iterable);
        return 2;
      }
    },
    $isIterator: 1
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper(), this.$ti._eval$1("_SyncStarIterator<1>"));
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.Future_Future$microtask_closure.prototype = {
    call$0() {
      var e, s, exception, t1, t2, t3, computationResult = null;
      try {
        computationResult = this.computation.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = e;
        t2 = s;
        t3 = A._interceptError(t1, t2);
        if (t3 == null)
          t1 = new A.AsyncError(t1, t2);
        else
          t1 = t3;
        this.result._completeErrorObject$1(t1);
        return;
      }
      this.result._complete$1(computationResult);
    },
    $signature: 0
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      type$.Object._as(error);
      type$.nullable_StackTrace._as(stackTrace);
      if ((this.future._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      this._completeErrorObject$1(A._interceptUserError(error, stackTrace));
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    },
    $isCompleter: 1
  };
  A._AsyncCompleter.prototype = {
    complete$1(_, value) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("1/?")._as(value);
      t2 = this.future;
      if ((t2._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t2._asyncComplete$1(t1._eval$1("1/")._as(value));
    },
    _completeErrorObject$1(error) {
      this.future._asyncCompleteErrorObject$1(error);
    }
  };
  A._SyncCompleter.prototype = {
    complete$1(_, value) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("1/?")._as(value);
      t2 = this.future;
      if ((t2._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t2._complete$1(t1._eval$1("1/")._as(value));
    },
    complete$0(_) {
      return this.complete$1(0, null);
    },
    _completeErrorObject$1(error) {
      this.future._completeErrorObject$1(error);
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1(asyncError) {
      var exception, _this = this,
        errorCallback = _this.errorCallback,
        result = null,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = asyncError.error,
        t4 = _this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t4.runBinary$3$3(errorCallback, t3, asyncError.stackTrace, t1, t2, type$.StackTrace);
      else
        result = t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), t3, t1, t2);
      try {
        t1 = _this.$ti._eval$1("2/")._as(result);
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((_this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    then$1$2$onError(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else {
        f = currentZone.registerUnaryCallback$2$1(f, $R._eval$1("0/"), t1._precomputed1);
        if (onError != null)
          onError = A._registerErrorHandler(onError, currentZone);
      }
      result = new A._Future($.Zone__current, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      f.toString;
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 19, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _ignore$0() {
      var t1, source, t2;
      if (((this._state |= 1) & 4) !== 0) {
        t1 = type$._Future_dynamic;
        source = this;
        do
          source = t1._as(source._resultOrListeners);
        while (t2 = source._state, (t2 & 4) !== 0);
        source._state = t2 | 1;
      }
    },
    catchError$2$test(onError, test) {
      var t1, t2, result;
      type$.nullable_bool_Function_Object._as(test);
      t1 = this.$ti;
      t2 = $.Zone__current;
      result = new A._Future(t2, t1);
      if (t2 !== B.C__RootZone) {
        onError = A._registerErrorHandler(onError, t2);
        if (test != null)
          test = t2.registerUnaryCallback$2$1(test, type$.bool, type$.Object);
      }
      t2 = test == null ? 2 : 6;
      this._addListener$1(new A._FutureListener(result, t2, test, onError, t1._eval$1("_FutureListener<1,1>")));
      return result;
    },
    catchError$1(onError) {
      return this.catchError$2$test(onError, null);
    },
    whenComplete$1(action) {
      var t1, t2, result;
      type$.dynamic_Function._as(action);
      t1 = this.$ti;
      t2 = $.Zone__current;
      result = new A._Future(t2, t1);
      if (t2 !== B.C__RootZone)
        action = t2.registerCallback$1$1(action, type$.dynamic);
      this._addListener$1(new A._FutureListener(result, 8, action, null, t1._eval$1("_FutureListener<1,1>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        _this._zone.scheduleMicrotask$1(new A._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        _this._zone.scheduleMicrotask$1(new A._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0() {
      var current = type$.nullable__FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _complete$1(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value))
        A._Future__chainCoreFuture(value, _this, true);
      else {
        listeners = _this._removeListeners$0();
        t1._precomputed1._as(value);
        _this._state = 8;
        _this._resultOrListeners = value;
        A._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeWithResultOf$1(source) {
      var t1, t2, listeners, _this = this;
      if ((source._state & 16) !== 0) {
        t1 = _this._zone;
        t2 = source._zone;
        t1 = !(t1 === t2 || t1.get$errorZone() === t2.get$errorZone());
      } else
        t1 = false;
      if (t1)
        return;
      listeners = _this._removeListeners$0();
      _this._cloneResult$1(source);
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeErrorObject$1(error) {
      var listeners = this._removeListeners$0();
      this._setErrorObject$1(error);
      A._Future__propagateToListeners(this, listeners);
    },
    _completeError$2(error, stackTrace) {
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      this._completeErrorObject$1(new A.AsyncError(error, stackTrace));
    },
    _asyncComplete$1(value) {
      var t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1(value) {
      var _this = this;
      _this.$ti._precomputed1._as(value);
      _this._state ^= 2;
      _this._zone.scheduleMicrotask$1(new A._Future__asyncCompleteWithValue_closure(_this, value));
    },
    _chainFuture$1(value) {
      A._Future__chainCoreFuture(this.$ti._eval$1("Future<1>")._as(value), this, false);
      return;
    },
    _asyncCompleteErrorObject$1(error) {
      this._state ^= 2;
      this._zone.scheduleMicrotask$1(new A._Future__asyncCompleteErrorObject_closure(this, error));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainCoreFuture_closure.prototype = {
    call$0() {
      A._Future__chainCoreFuture(this._box_0.source, this.target, true);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__asyncCompleteErrorObject_closure.prototype = {
    call$0() {
      this.$this._completeErrorObject$1(this.error);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, t3, originalSource, joinedResult, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        if (_this.hasError && type$.AsyncError._as(_this._box_1.source._resultOrListeners).error === e) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        } else {
          t1 = e;
          t2 = s;
          if (t2 == null)
            t2 = A.AsyncError_defaultStackTrace(t1);
          t3 = _this._box_0;
          t3.listenerValueOrError = new A.AsyncError(t1, t2);
          t1 = t3;
        }
        t1.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
          t1.listenerHasError = true;
        }
        return;
      }
      if (completeResult instanceof A._Future) {
        originalSource = _this._box_1.source;
        joinedResult = new A._Future(originalSource._zone, originalSource.$ti);
        completeResult.then$1$2$onError(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(joinedResult, originalSource), new A._Future__propagateToListeners_handleWhenCompleteCallback_closure0(joinedResult), type$.void);
        t1 = _this._box_0;
        t1.listenerValueOrError = joinedResult;
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(__wc0_formal) {
      this.joinedResult._completeWithResultOf$1(this.originalSource);
    },
    $signature: 3
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure0.prototype = {
    call$2(e, s) {
      type$.Object._as(e);
      type$.StackTrace._as(s);
      this.joinedResult._completeErrorObject$1(new A.AsyncError(e, s));
    },
    $signature: 15
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, t3, t4, t5, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t3 = t2.$ti;
        t4 = t3._precomputed1;
        t5 = t4._as(this.sourceResult);
        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t3._eval$1("2/(1)")._as(t2.callback), t5, t3._eval$1("2/"), t4);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = e;
        t2 = s;
        if (t2 == null)
          t2 = A.AsyncError_defaultStackTrace(t1);
        t3 = this._box_0;
        t3.listenerValueOrError = new A.AsyncError(t1, t2);
        t3.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, t3, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        if (t1.error === e) {
          t2 = _this._box_0;
          t2.listenerValueOrError = t1;
          t1 = t2;
        } else {
          t1 = e;
          t2 = s;
          if (t2 == null)
            t2 = A.AsyncError_defaultStackTrace(t1);
          t3 = _this._box_0;
          t3.listenerValueOrError = new A.AsyncError(t1, t2);
          t1 = t3;
        }
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    handleError$2$test(onError, test) {
      var callback;
      type$.nullable_bool_Function_dynamic._as(test);
      if (type$.void_Function_Object_StackTrace._is(onError))
        callback = onError;
      else if (type$.void_Function_Object._is(onError))
        callback = new A.Stream_handleError_closure(onError);
      else
        throw A.wrapException(A.ArgumentError$value(onError, "onError", "Error handler must accept one Object or one Object and a StackTrace as arguments."));
      return new A._HandleErrorStream(callback, test, this, A._instanceType(this)._eval$1("_HandleErrorStream<Stream.T>"));
    },
    fold$1$2(_, initialValue, combine, $S) {
      var result, subscription, t1 = {};
      $S._as(initialValue);
      A._instanceType(this)._bind$1($S)._eval$1("1(1,Stream.T)")._as(combine);
      result = new A._Future($.Zone__current, $S._eval$1("_Future<0>"));
      t1.value = initialValue;
      subscription = this.listen$4$cancelOnError$onDone$onError(null, true, new A.Stream_fold_closure(t1, result), result.get$_completeError());
      subscription.onData$1(new A.Stream_fold_closure0(t1, this, combine, subscription, result, $S));
      return result;
    },
    forEach$1(_, action) {
      var future, subscription;
      A._instanceType(this)._eval$1("~(Stream.T)")._as(action);
      future = new A._Future($.Zone__current, type$._Future_dynamic);
      subscription = this.listen$4$cancelOnError$onDone$onError(null, true, new A.Stream_forEach_closure(future), future.get$_completeError());
      subscription.onData$1(new A.Stream_forEach_closure0(this, action, subscription, future));
      return future;
    },
    get$length(_) {
      var t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new A.Stream_length_closure(t1, this), true, new A.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    },
    cast$1$0(_, $R) {
      return new A.CastStream(this, A._instanceType(this)._eval$1("@<Stream.T>")._bind$1($R)._eval$1("CastStream<1,2>"));
    },
    toList$0(_) {
      var t1 = A._instanceType(this),
        result = A._setArrayType([], t1._eval$1("JSArray<Stream.T>")),
        future = new A._Future($.Zone__current, t1._eval$1("_Future<List<Stream.T>>"));
      this.listen$4$cancelOnError$onDone$onError(new A.Stream_toList_closure(this, result), true, new A.Stream_toList_closure0(future, result), future.get$_completeError());
      return future;
    },
    drain$1$0($E) {
      var futureValue;
      $E._as(null);
      futureValue = null;
      return this.listen$2$cancelOnError(null, true).asFuture$1$1(futureValue, $E);
    }
  };
  A.Stream_Stream$fromIterable_closure.prototype = {
    call$1(controller) {
      var e, s, error, t2, exception, error0, zone, t1 = {};
      this.T._eval$1("MultiStreamController<0>")._as(controller);
      t1.iterator = null;
      try {
        t2 = this.elements;
        t1.iterator = new J.ArrayIterator(t2, t2.length, A._arrayInstanceType(t2)._eval$1("ArrayIterator<1>"));
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = e;
        t2 = s;
        error0 = A._interceptError(t1, t2);
        if (error0 == null)
          error0 = new A.AsyncError(t1, t2 == null ? A.AsyncError_defaultStackTrace(t1) : t2);
        error = error0;
        controller.addError$2(error.error, error.stackTrace);
        controller.close$0(0);
        return;
      }
      zone = $.Zone__current;
      t1.isScheduled = true;
      t2 = new A.Stream_Stream$fromIterable_closure_next(t1, controller, zone);
      controller.set$onResume(0, new A.Stream_Stream$fromIterable__closure(t1, zone, t2));
      zone.scheduleMicrotask$1(t2);
    },
    $signature() {
      return this.T._eval$1("~(MultiStreamController<0>)");
    }
  };
  A.Stream_Stream$fromIterable_closure_next.prototype = {
    call$0() {
      var hasNext, e, s, error, e0, s0, error0, t2, exception, t3, _this = this,
        t1 = _this.controller;
      if ((t1._state & 1) !== 0)
        t2 = (t1.get$_subscription()._state & 4) !== 0;
      else
        t2 = true;
      if (t2) {
        _this._box_0.isScheduled = false;
        return;
      }
      hasNext = null;
      try {
        hasNext = _this._box_0.iterator.moveNext$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t2 = e;
        t3 = s;
        error0 = A._interceptError(t2, t3);
        if (error0 == null)
          error0 = new A.AsyncError(t2, t3 == null ? A.AsyncError_defaultStackTrace(t2) : t3);
        error = error0;
        t1.addErrorSync$2(error.error, error.stackTrace);
        t1.closeSync$0();
        return;
      }
      if (hasNext) {
        try {
          t2 = _this._box_0.iterator;
          t3 = t2.__interceptors$_current;
          t2 = t3 == null ? t2.$ti._precomputed1._as(t3) : t3;
          t1.$ti._precomputed1._as(t2);
          t3 = t1._state;
          if (t3 >= 4)
            A.throwExpression(t1._badEventState$0());
          if ((t3 & 1) !== 0)
            t1.get$_subscription()._add$1(0, t2);
        } catch (exception) {
          e0 = A.unwrapException(exception);
          s0 = A.getTraceFromException(exception);
          t2 = e0;
          t3 = s0;
          error = A._interceptError(t2, t3);
          if (error == null)
            error = new A.AsyncError(t2, t3 == null ? A.AsyncError_defaultStackTrace(t2) : t3);
          error0 = error;
          t1.addErrorSync$2(error0.error, error0.stackTrace);
        }
        if ((t1._state & 1) !== 0) {
          t1 = t1.get$_subscription()._state;
          t1 = (t1 & 4) === 0;
        } else
          t1 = false;
        if (t1)
          _this.zone.scheduleMicrotask$1(_this);
        else
          _this._box_0.isScheduled = false;
      } else
        t1.closeSync$0();
    },
    $signature: 0
  };
  A.Stream_Stream$fromIterable__closure.prototype = {
    call$0() {
      var t1 = this._box_0;
      if (!t1.isScheduled) {
        t1.isScheduled = true;
        this.zone.scheduleMicrotask$1(this.next);
      }
    },
    $signature: 0
  };
  A.Stream_handleError_closure.prototype = {
    call$2(error, __wc0_formal) {
      this.onError.call$1(error);
    },
    $signature: 7
  };
  A.Stream_fold_closure.prototype = {
    call$0() {
      this.result._complete$1(this._box_0.value);
    },
    $signature: 0
  };
  A.Stream_fold_closure0.prototype = {
    call$1(element) {
      var _this = this,
        t1 = _this._box_0,
        t2 = _this.S;
      A._runUserCode(new A.Stream_fold__closure(t1, _this.combine, A._instanceType(_this.$this)._eval$1("Stream.T")._as(element), t2), new A.Stream_fold__closure0(t1, t2), A._cancelAndErrorClosure(_this.subscription, _this.result), t2);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.Stream_fold__closure.prototype = {
    call$0() {
      return this.combine.call$2(this._box_0.value, this.element);
    },
    $signature() {
      return this.S._eval$1("0()");
    }
  };
  A.Stream_fold__closure0.prototype = {
    call$1(newValue) {
      this._box_0.value = this.S._as(newValue);
    },
    $signature() {
      return this.S._eval$1("Null(0)");
    }
  };
  A.Stream_forEach_closure.prototype = {
    call$0() {
      this.future._complete$1(null);
    },
    $signature: 0
  };
  A.Stream_forEach_closure0.prototype = {
    call$1(element) {
      var _this = this;
      A._runUserCode(new A.Stream_forEach__closure(_this.action, A._instanceType(_this.$this)._eval$1("Stream.T")._as(element)), new A.Stream_forEach__closure0(), A._cancelAndErrorClosure(_this.subscription, _this.future), type$.void);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.Stream_forEach__closure.prototype = {
    call$0() {
      return this.action.call$1(this.element);
    },
    $signature: 0
  };
  A.Stream_forEach__closure0.prototype = {
    call$1(__wc0_formal) {
    },
    $signature: 56
  };
  A.Stream_length_closure.prototype = {
    call$1(__wc0_formal) {
      A._instanceType(this.$this)._eval$1("Stream.T")._as(__wc0_formal);
      ++this._box_0.count;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._complete$1(this._box_0.count);
    },
    $signature: 0
  };
  A.Stream_toList_closure.prototype = {
    call$1(data) {
      B.JSArray_methods.add$1(this.result, A._instanceType(this.$this)._eval$1("Stream.T")._as(data));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.Stream_toList_closure0.prototype = {
    call$0() {
      this.future._complete$1(this.result);
    },
    $signature: 0
  };
  A.StreamView.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return this._async$_stream.listen$4$cancelOnError$onDone$onError(A._instanceType(this)._eval$1("~(StreamView.T)?")._as(onData), cancelOnError, type$.nullable_void_Function._as(onDone), onError);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A._StreamController.prototype = {
    get$_pendingEvents() {
      var t1, _this = this;
      if ((_this._state & 8) === 0)
        return A._instanceType(_this)._eval$1("_PendingEvents<1>?")._as(_this._varData);
      t1 = A._instanceType(_this);
      return t1._eval$1("_PendingEvents<1>?")._as(t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData)._varData);
    },
    _ensurePendingEvents$0() {
      var events, t1, state, _this = this;
      if ((_this._state & 8) === 0) {
        events = _this._varData;
        if (events == null)
          events = _this._varData = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<1>"));
        return A._instanceType(_this)._eval$1("_PendingEvents<1>")._as(events);
      }
      t1 = A._instanceType(_this);
      state = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
      events = state._varData;
      if (events == null)
        events = state._varData = new A._PendingEvents(t1._eval$1("_PendingEvents<1>"));
      return t1._eval$1("_PendingEvents<1>")._as(events);
    },
    get$_subscription() {
      var varData = this._varData;
      if ((this._state & 8) !== 0)
        varData = type$._StreamControllerAddStreamState_nullable_Object._as(varData)._varData;
      return A._instanceType(this)._eval$1("_ControllerSubscription<1>")._as(varData);
    },
    _badEventState$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add event after closing");
      return new A.StateError("Cannot add event while adding a stream");
    },
    addStream$2$cancelOnError(_, source, cancelOnError) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("Stream<1>")._as(source);
      t2 = _this._state;
      if (t2 >= 4)
        throw A.wrapException(_this._badEventState$0());
      if ((t2 & 2) !== 0) {
        t1 = new A._Future($.Zone__current, type$._Future_dynamic);
        t1._asyncComplete$1(null);
        return t1;
      }
      t2 = _this._varData;
      t3 = cancelOnError === true;
      t4 = new A._Future($.Zone__current, type$._Future_dynamic);
      t5 = t1._eval$1("~(1)")._as(_this.get$_add(_this));
      t6 = t3 ? A._AddStreamState_makeErrorHandler(_this) : _this.get$_addError();
      t6 = source.listen$4$cancelOnError$onDone$onError(t5, t3, _this.get$_close(), t6);
      t3 = _this._state;
      if ((t3 & 1) !== 0 ? (_this.get$_subscription()._state & 4) !== 0 : (t3 & 2) === 0)
        t6.pause$0(0);
      _this._varData = new A._StreamControllerAddStreamState(t2, t4, t6, t1._eval$1("_StreamControllerAddStreamState<1>"));
      _this._state |= 8;
      return t4;
    },
    _ensureDoneFuture$0() {
      var t1 = this._doneFuture;
      if (t1 == null)
        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new A._Future($.Zone__current, type$._Future_void);
      return t1;
    },
    add$1(_, value) {
      var _this = this;
      A._instanceType(_this)._precomputed1._as(value);
      if (_this._state >= 4)
        throw A.wrapException(_this._badEventState$0());
      _this._add$1(0, value);
    },
    addError$2(error, stackTrace) {
      var _0_0;
      type$.Object._as(error);
      type$.nullable_StackTrace._as(stackTrace);
      if (this._state >= 4)
        throw A.wrapException(this._badEventState$0());
      _0_0 = A._interceptUserError(error, stackTrace);
      this._addError$2(_0_0.error, _0_0.stackTrace);
    },
    addError$1(error) {
      return this.addError$2(error, null);
    },
    close$0(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return _this._ensureDoneFuture$0();
      if (t1 >= 4)
        throw A.wrapException(_this._badEventState$0());
      _this._closeUnchecked$0();
      return _this._ensureDoneFuture$0();
    },
    _closeUnchecked$0() {
      var t1 = this._state |= 4;
      if ((t1 & 1) !== 0)
        this._sendDone$0();
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, B.C__DelayedDone);
    },
    _add$1(_, value) {
      var t2, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(value);
      t2 = _this._state;
      if ((t2 & 1) !== 0)
        _this._sendData$1(value);
      else if ((t2 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new A._DelayedData(value, t1._eval$1("_DelayedData<1>")));
    },
    _addError$2(error, stackTrace) {
      var t1;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendError$2(error, stackTrace);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new A._DelayedError(error, stackTrace));
    },
    _close$0() {
      var _this = this,
        addState = A._instanceType(_this)._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
      _this._varData = addState._varData;
      _this._state &= 4294967287;
      addState.addStreamFuture._asyncComplete$1(null);
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, subscription, pendingEvents, addState, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      if ((_this._state & 3) !== 0)
        throw A.wrapException(A.StateError$("Stream has already been listened to."));
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      t4 = onError != null ? 32 : 0;
      subscription = new A._ControllerSubscription(_this, A._BufferingStreamSubscription__registerDataHandler(t2, onData, t1._precomputed1), A._BufferingStreamSubscription__registerErrorHandler(t2, onError), A._BufferingStreamSubscription__registerDoneHandler(t2, onDone), t2, t3 | t4, t1._eval$1("_ControllerSubscription<1>"));
      pendingEvents = _this.get$_pendingEvents();
      if (((_this._state |= 1) & 8) !== 0) {
        addState = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData);
        addState._varData = subscription;
        addState.addSubscription.resume$0(0);
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new A._StreamController__subscribe_closure(_this));
      return subscription;
    },
    _recordCancel$1(subscription) {
      var result, onCancel, cancelResult, e, s, exception, result0, t2, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("StreamSubscription<1>")._as(subscription);
      result = null;
      if ((_this._state & 8) !== 0)
        result = t1._eval$1("_StreamControllerAddStreamState<1>")._as(_this._varData).cancel$0(0);
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      onCancel = _this.onCancel;
      if (onCancel != null)
        if (result == null)
          try {
            cancelResult = onCancel.call$0();
            if (cancelResult instanceof A._Future)
              result = cancelResult;
          } catch (exception) {
            e = A.unwrapException(exception);
            s = A.getTraceFromException(exception);
            result0 = new A._Future($.Zone__current, type$._Future_void);
            t1 = type$.Object._as(e);
            t2 = type$.StackTrace._as(s);
            result0._asyncCompleteErrorObject$1(new A.AsyncError(t1, t2));
            result = result0;
          }
        else
          result = result.whenComplete$1(onCancel);
      t1 = new A._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    },
    set$onListen(onListen) {
      this.onListen = type$.nullable_void_Function._as(onListen);
    },
    set$onPause(_, onPause) {
      this.onPause = type$.nullable_void_Function._as(onPause);
    },
    set$onResume(_, onResume) {
      this.onResume = type$.nullable_void_Function._as(onResume);
    },
    set$onCancel(_, onCancel) {
      this.onCancel = type$.nullable_void_Function._as(onCancel);
    },
    $isEventSink: 1,
    $isStreamConsumer: 1,
    $isStreamSink: 1,
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1,
    $isSink: 1
  };
  A._StreamController__subscribe_closure.prototype = {
    call$0() {
      A._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  A._StreamController__recordCancel_complete.prototype = {
    call$0() {
      var doneFuture = this.$this._doneFuture;
      if (doneFuture != null && (doneFuture._state & 30) === 0)
        doneFuture._asyncComplete$1(null);
    },
    $signature: 0
  };
  A._SyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      this.$ti._precomputed1._as(data);
      this.get$_subscription()._add$1(0, data);
    },
    _sendError$2(error, stackTrace) {
      this.get$_subscription()._addError$2(error, stackTrace);
    },
    _sendDone$0() {
      this.get$_subscription()._close$0();
    }
  };
  A._AsyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      var t1 = A._instanceType(this);
      t1._precomputed1._as(data);
      this.get$_subscription()._addPending$1(new A._DelayedData(data, t1._eval$1("_DelayedData<1>")));
    },
    _sendError$2(error, stackTrace) {
      this.get$_subscription()._addPending$1(new A._DelayedError(error, stackTrace));
    },
    _sendDone$0() {
      this.get$_subscription()._addPending$1(B.C__DelayedDone);
    }
  };
  A._AsyncStreamController.prototype = {};
  A._SyncStreamController.prototype = {};
  A._ControllerStream.prototype = {
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._ControllerStream && other._controller === this._controller;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0() {
      var t1 = this._controller,
        t2 = A._instanceType(t1);
      t2._eval$1("StreamSubscription<1>")._as(this);
      if ((t1._state & 8) !== 0)
        t2._eval$1("_StreamControllerAddStreamState<1>")._as(t1._varData).addSubscription.pause$0(0);
      A._runGuarded(t1.onPause);
    },
    _onResume$0() {
      var t1 = this._controller,
        t2 = A._instanceType(t1);
      t2._eval$1("StreamSubscription<1>")._as(this);
      if ((t1._state & 8) !== 0)
        t2._eval$1("_StreamControllerAddStreamState<1>")._as(t1._varData).addSubscription.resume$0(0);
      A._runGuarded(t1.onResume);
    }
  };
  A._StreamSinkWrapper.prototype = {
    add$1(_, data) {
      this._async$_target.add$1(0, this.$ti._precomputed1._as(data));
    },
    addError$2(error, stackTrace) {
      this._async$_target.addError$2(type$.Object._as(error), type$.nullable_StackTrace._as(stackTrace));
    },
    addError$1(error) {
      return this.addError$2(error, null);
    },
    close$0(_) {
      return this._async$_target.close$0(0);
    },
    $isEventSink: 1,
    $isStreamConsumer: 1,
    $isStreamSink: 1,
    $isSink: 1
  };
  A._AddStreamState.prototype = {
    cancel$0(_) {
      var cancel = this.addSubscription.cancel$0(0);
      return cancel.whenComplete$1(new A._AddStreamState_cancel_closure(this));
    }
  };
  A._AddStreamState_makeErrorHandler_closure.prototype = {
    call$2(e, s) {
      var t1 = this.controller;
      t1._addError$2(type$.Object._as(e), type$.StackTrace._as(s));
      t1._close$0();
    },
    $signature: 15
  };
  A._AddStreamState_cancel_closure.prototype = {
    call$0() {
      this.$this.addStreamFuture._asyncComplete$1(null);
    },
    $signature: 1
  };
  A._StreamControllerAddStreamState.prototype = {};
  A._BufferingStreamSubscription.prototype = {
    _setPendingEvents$1(pendingEvents) {
      var _this = this;
      A._instanceType(_this)._eval$1("_PendingEvents<_BufferingStreamSubscription.T>?")._as(pendingEvents);
      if (pendingEvents == null)
        return;
      _this._pending = pendingEvents;
      if (pendingEvents.lastPendingEvent != null) {
        _this._state = (_this._state | 128) >>> 0;
        pendingEvents.schedule$1(_this);
      }
    },
    onData$1(handleData) {
      var t1 = A._instanceType(this);
      this._async$_onData = A._BufferingStreamSubscription__registerDataHandler(this._zone, t1._eval$1("~(_BufferingStreamSubscription.T)?")._as(handleData), t1._eval$1("_BufferingStreamSubscription.T"));
    },
    onError$1(_, handleError) {
      var _this = this,
        t1 = _this._state;
      if (handleError == null)
        _this._state = (t1 & 4294967263) >>> 0;
      else
        _this._state = (t1 | 32) >>> 0;
      _this._onError = A._BufferingStreamSubscription__registerErrorHandler(_this._zone, handleError);
    },
    onDone$1(handleDone) {
      this._onDone = A._BufferingStreamSubscription__registerDoneHandler(this._zone, type$.nullable_void_Function._as(handleDone));
    },
    pause$1(_, resumeSignal) {
      var t1, t2, _this = this;
      type$.nullable_Future_void._as(resumeSignal);
      t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      _this._state = (t1 + 256 | 4) >>> 0;
      if (resumeSignal != null)
        resumeSignal.whenComplete$1(_this.get$resume(_this));
      if (t1 < 256) {
        t2 = _this._pending;
        if (t2 != null)
          if (t2._state === 1)
            t2._state = 3;
      }
      if ((t1 & 4) === 0 && (_this._state & 64) === 0)
        _this._guardCallback$1(_this.get$_onPause());
    },
    pause$0(_) {
      return this.pause$1(0, null);
    },
    resume$0(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 256) {
        t1 = _this._state = t1 - 256;
        if (t1 < 256)
          if ((t1 & 128) !== 0 && _this._pending.lastPendingEvent != null)
            _this._pending.schedule$1(_this);
          else {
            t1 = (t1 & 4294967291) >>> 0;
            _this._state = t1;
            if ((t1 & 64) === 0)
              _this._guardCallback$1(_this.get$_onResume());
          }
      }
    },
    cancel$0(_) {
      var _this = this,
        t1 = (_this._state & 4294967279) >>> 0;
      _this._state = t1;
      if ((t1 & 8) === 0)
        _this._cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    asFuture$1$1(futureValue, $E) {
      var result, _this = this, t1 = {};
      t1.resultValue = null;
      if (!$E._is(null))
        throw A.wrapException(A.ArgumentError$notNull("futureValue"));
      $E._as(futureValue);
      t1.resultValue = futureValue;
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      _this._onDone = new A._BufferingStreamSubscription_asFuture_closure(t1, result);
      _this._state = (_this._state | 32) >>> 0;
      _this._onError = new A._BufferingStreamSubscription_asFuture_closure0(_this, result);
      return result;
    },
    _cancel$0() {
      var t2, _this = this,
        t1 = _this._state = (_this._state | 8) >>> 0;
      if ((t1 & 128) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 64) === 0)
        _this._pending = null;
      _this._cancelFuture = _this._onCancel$0();
    },
    _add$1(_, data) {
      var t2, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("_BufferingStreamSubscription.T")._as(data);
      t2 = _this._state;
      if ((t2 & 8) !== 0)
        return;
      if (t2 < 64)
        _this._sendData$1(data);
      else
        _this._addPending$1(new A._DelayedData(data, t1._eval$1("_DelayedData<_BufferingStreamSubscription.T>")));
    },
    _addError$2(error, stackTrace) {
      var t1;
      if (type$.Error._is(error))
        A.Primitives_trySetStackTrace(error, stackTrace);
      t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 64)
        this._sendError$2(error, stackTrace);
      else
        this._addPending$1(new A._DelayedError(error, stackTrace));
    },
    _close$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      _this._state = t1;
      if (t1 < 64)
        _this._sendDone$0();
      else
        _this._addPending$1(B.C__DelayedDone);
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var t1, _this = this,
        pending = _this._pending;
      if (pending == null)
        pending = _this._pending = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<_BufferingStreamSubscription.T>"));
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 128) === 0) {
        t1 = (t1 | 128) >>> 0;
        _this._state = t1;
        if (t1 < 256)
          pending.schedule$1(_this);
      }
    },
    _sendData$1(data) {
      var t2, _this = this,
        t1 = A._instanceType(_this)._eval$1("_BufferingStreamSubscription.T");
      t1._as(data);
      t2 = _this._state;
      _this._state = (t2 | 64) >>> 0;
      _this._zone.runUnaryGuarded$1$2(_this._async$_onData, data, t1);
      _this._state = (_this._state & 4294967231) >>> 0;
      _this._checkState$1((t2 & 4) !== 0);
    },
    _sendError$2(error, stackTrace) {
      var cancelFuture, _this = this,
        t1 = _this._state,
        t2 = new A._BufferingStreamSubscription__sendError_sendError(_this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        _this._state = (t1 | 16) >>> 0;
        _this._cancel$0();
        cancelFuture = _this._cancelFuture;
        if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
          cancelFuture.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        _this._checkState$1((t1 & 4) !== 0);
      }
    },
    _sendDone$0() {
      var cancelFuture, _this = this,
        t1 = new A._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._cancel$0();
      _this._state = (_this._state | 16) >>> 0;
      cancelFuture = _this._cancelFuture;
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1(callback) {
      var t1, _this = this;
      type$.void_Function._as(callback);
      t1 = _this._state;
      _this._state = (t1 | 64) >>> 0;
      callback.call$0();
      _this._state = (_this._state & 4294967231) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 128) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = (t1 & 4294967167) >>> 0;
        t2 = false;
        if ((t1 & 4) !== 0)
          if (t1 < 256) {
            t2 = _this._pending;
            t2 = t2 == null ? null : t2.lastPendingEvent == null;
            t2 = t2 !== false;
          }
        if (t2) {
          t1 = (t1 & 4294967291) >>> 0;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = (t1 ^ 64) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = (_this._state & 4294967231) >>> 0;
        _this._state = t1;
      }
      if ((t1 & 128) !== 0 && t1 < 256)
        _this._pending.schedule$1(_this);
    },
    $isStreamSubscription: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1
  };
  A._BufferingStreamSubscription_asFuture_closure.prototype = {
    call$0() {
      this.result._complete$1(this._box_0.resultValue);
    },
    $signature: 0
  };
  A._BufferingStreamSubscription_asFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      var cancelFuture, t1;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      cancelFuture = this.$this.cancel$0(0);
      t1 = this.result;
      if (cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(new A._BufferingStreamSubscription_asFuture__closure(t1, error, stackTrace));
      else
        t1._completeErrorObject$1(new A.AsyncError(error, stackTrace));
    },
    $signature: 15
  };
  A._BufferingStreamSubscription_asFuture__closure.prototype = {
    call$0() {
      this.result._completeErrorObject$1(new A.AsyncError(this.error, this.stackTrace));
    },
    $signature: 1
  };
  A._BufferingStreamSubscription__sendError_sendError.prototype = {
    call$0() {
      var onError, t3, t4,
        t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 64) >>> 0;
      onError = t1._onError;
      t2 = this.error;
      t3 = type$.Object;
      t4 = t1._zone;
      if (type$.void_Function_Object_StackTrace._is(onError))
        t4.runBinaryGuarded$2$3(onError, t2, this.stackTrace, t3, type$.StackTrace);
      else
        t4.runUnaryGuarded$1$2(type$.void_Function_Object._as(onError), t2, t3);
      t1._state = (t1._state & 4294967231) >>> 0;
    },
    $signature: 0
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 74) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967231) >>> 0;
    },
    $signature: 0
  };
  A._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t1 = this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      return this._controller._subscribe$4(t1._eval$1("~(1)?")._as(onData), onError, onDone, cancelOnError === true);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A._DelayedEvent.prototype = {
    set$next(_, next) {
      this.next = type$.nullable__DelayedEvent_dynamic._as(next);
    },
    get$next(receiver) {
      return this.next;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      this.$ti._eval$1("_EventDispatch<1>")._as(dispatch)._sendData$1(this.value);
    }
  };
  A._DelayedError.prototype = {
    perform$1(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      dispatch._sendDone$0();
    },
    get$next(_) {
      return null;
    },
    set$next(_, __wc0_formal) {
      throw A.wrapException(A.StateError$("No events after a done."));
    },
    $is_DelayedEvent: 1
  };
  A._PendingEvents.prototype = {
    schedule$1(dispatch) {
      var t1, _this = this;
      _this.$ti._eval$1("_EventDispatch<1>")._as(dispatch);
      t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      A.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    },
    add$1(_, $event) {
      var _this = this,
        lastEvent = _this.lastPendingEvent;
      if (lastEvent == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        lastEvent.set$next(0, $event);
        _this.lastPendingEvent = $event;
      }
    }
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var t2, $event, nextEvent,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t2 = t1.$ti._eval$1("_EventDispatch<1>")._as(this.dispatch);
      $event = t1.firstPendingEvent;
      nextEvent = $event.get$next($event);
      t1.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        t1.lastPendingEvent = null;
      $event.perform$1(t2);
    },
    $signature: 0
  };
  A._DoneStreamSubscription.prototype = {
    onData$1(handleData) {
      this.$ti._eval$1("~(1)?")._as(handleData);
    },
    onError$1(_, handleError) {
    },
    pause$1(_, resumeSignal) {
      var t1, _this = this;
      type$.nullable_Future_void._as(resumeSignal);
      t1 = _this._state;
      if (t1 >= 0) {
        _this._state = t1 + 2;
        if (resumeSignal != null)
          resumeSignal.whenComplete$1(_this.get$resume(_this));
      }
    },
    pause$0(_) {
      return this.pause$1(0, null);
    },
    resume$0(_) {
      var _this = this,
        resumeState = _this._state - 2;
      if (resumeState < 0)
        return;
      if (resumeState === 0) {
        _this._state = 1;
        A.scheduleMicrotask(_this.get$_onMicrotask());
      } else
        _this._state = resumeState;
    },
    cancel$0(_) {
      this._state = -1;
      this._onDone = null;
      return $.$get$Future__nullFuture();
    },
    asFuture$1$1(futureValue, $E) {
      var result, t1 = {};
      t1.resultValue = null;
      if (!$E._is(null))
        throw A.wrapException(A.ArgumentError$notNull("futureValue"));
      $E._as(futureValue);
      t1.resultValue = futureValue;
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      if (this._state >= 0)
        this._onDone = this._zone.registerCallback$1$1(new A._DoneStreamSubscription_asFuture_closure(t1, result), type$.void);
      return result;
    },
    _onMicrotask$0() {
      var _0_0, _this = this,
        unscheduledState = _this._state - 1;
      if (unscheduledState === 0) {
        _this._state = -1;
        _0_0 = _this._onDone;
        if (_0_0 != null) {
          _this._onDone = null;
          _this._zone.runGuarded$1(_0_0);
        }
      } else
        _this._state = unscheduledState;
    },
    $isStreamSubscription: 1
  };
  A._DoneStreamSubscription_asFuture_closure.prototype = {
    call$0() {
      this.result._completeWithValue$1(this._box_0.resultValue);
    },
    $signature: 0
  };
  A._StreamIterator.prototype = {};
  A._EmptyStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t2,
        t1 = this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      t2 = $.Zone__current;
      t1 = new A._DoneStreamSubscription(t2, t1._eval$1("_DoneStreamSubscription<1>"));
      A.scheduleMicrotask(t1.get$_onMicrotask());
      if (onDone != null)
        t1._onDone = t2.registerCallback$1$1(onDone, type$.void);
      return t1;
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A._MultiStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var controller, _null = null,
        t1 = this.$ti;
      t1._eval$1("~(1)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      controller = new A._MultiStreamController(_null, _null, _null, _null, t1._eval$1("_MultiStreamController<1>"));
      controller.set$onListen(new A._MultiStream_listen_closure(this, controller));
      return controller._subscribe$4(onData, onError, onDone, cancelOnError === true);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  A._MultiStream_listen_closure.prototype = {
    call$0() {
      this.$this._onListen.call$1(this.controller);
    },
    $signature: 0
  };
  A._MultiStreamController.prototype = {
    addErrorSync$2(error, stackTrace) {
      var t1 = this._state;
      if (t1 >= 4)
        throw A.wrapException(this._badEventState$0());
      if ((t1 & 1) !== 0) {
        t1 = this.get$_subscription();
        t1._addError$2(error, stackTrace);
      }
    },
    closeSync$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return;
      if (t1 >= 4)
        throw A.wrapException(_this._badEventState$0());
      t1 |= 4;
      _this._state = t1;
      if ((t1 & 1) !== 0)
        _this.get$_subscription()._close$0();
    },
    $isMultiStreamController: 1
  };
  A._cancelAndError_closure.prototype = {
    call$0() {
      return this.future._completeErrorObject$1(this.error);
    },
    $signature: 0
  };
  A._cancelAndErrorClosure_closure.prototype = {
    call$2(error, stackTrace) {
      type$.StackTrace._as(stackTrace);
      A._cancelAndError(this.subscription, this.future, new A.AsyncError(error, stackTrace));
    },
    $signature: 7
  };
  A._ForwardingStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t2, t3, t4,
        t1 = A._instanceType(this);
      t1._eval$1("~(_ForwardingStream.T)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      t2 = $.Zone__current;
      t3 = cancelOnError === true ? 1 : 0;
      t4 = onError != null ? 32 : 0;
      t1 = new A._ForwardingStreamSubscription(this, A._BufferingStreamSubscription__registerDataHandler(t2, onData, t1._eval$1("_ForwardingStream.T")), A._BufferingStreamSubscription__registerErrorHandler(t2, onError), A._BufferingStreamSubscription__registerDoneHandler(t2, onDone), t2, t3 | t4, t1._eval$1("_ForwardingStreamSubscription<_ForwardingStream.S,_ForwardingStream.T>"));
      t1._subscription = this._async$_source.listen$3$onDone$onError(t1.get$_async$_handleData(), t1.get$_handleDone(), t1.get$_async$_handleError());
      return t1;
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    _async$_handleError$3(error, stackTrace, sink) {
      A._instanceType(this)._eval$1("_EventSink<_ForwardingStream.T>")._as(sink)._addError$2(error, stackTrace);
    }
  };
  A._ForwardingStreamSubscription.prototype = {
    _add$1(_, data) {
      this.$ti._rest[1]._as(data);
      if ((this._state & 2) !== 0)
        return;
      this.super$_BufferingStreamSubscription$_add(0, data);
    },
    _addError$2(error, stackTrace) {
      if ((this._state & 2) !== 0)
        return;
      this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
    },
    _onPause$0() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.pause$0(0);
    },
    _onResume$0() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.resume$0(0);
    },
    _onCancel$0() {
      var subscription = this._subscription;
      if (subscription != null) {
        this._subscription = null;
        return subscription.cancel$0(0);
      }
      return null;
    },
    _async$_handleData$1(data) {
      this._async$_stream._async$_handleData$2(this.$ti._precomputed1._as(data), this);
    },
    _async$_handleError$2(error, stackTrace) {
      var t1;
      type$.StackTrace._as(stackTrace);
      t1 = error == null ? type$.Object._as(error) : error;
      this._async$_stream._async$_handleError$3(t1, stackTrace, this);
    },
    _handleDone$0() {
      A._instanceType(this._async$_stream)._eval$1("_EventSink<_ForwardingStream.T>")._as(this)._close$0();
    }
  };
  A._HandleErrorStream.prototype = {
    _async$_handleData$2(data, sink) {
      var t1 = this.$ti;
      t1._precomputed1._as(data);
      t1._eval$1("_EventSink<1>")._as(sink)._add$1(0, data);
    },
    _async$_handleError$3(error, stackTrace, sink) {
      var matches, test, e, s, e0, s0, exception;
      this.$ti._eval$1("_EventSink<1>")._as(sink);
      matches = true;
      test = this._test;
      if (test != null)
        try {
          matches = test.call$1(error);
        } catch (exception) {
          e = A.unwrapException(exception);
          s = A.getTraceFromException(exception);
          A._addErrorWithReplacement(sink, e, s);
          return;
        }
      if (matches)
        try {
          this._onError.call$2(error, stackTrace);
        } catch (exception) {
          e0 = A.unwrapException(exception);
          s0 = A.getTraceFromException(exception);
          if (e0 === error)
            sink._addError$2(error, stackTrace);
          else
            A._addErrorWithReplacement(sink, e0, s0);
          return;
        }
      else
        sink._addError$2(error, stackTrace);
    }
  };
  A._EventSinkWrapper.prototype = {
    add$1(_, data) {
      var t1 = this._async$_sink;
      data = t1.$ti._rest[1]._as(this.$ti._precomputed1._as(data));
      if ((t1._state & 2) !== 0)
        A.throwExpression(A.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_add(0, data);
    },
    addError$2(error, stackTrace) {
      var t1 = this._async$_sink;
      if ((t1._state & 2) !== 0)
        A.throwExpression(A.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_addError(error, stackTrace);
    },
    close$0(_) {
      var t1 = this._async$_sink;
      if ((t1._state & 2) !== 0)
        A.throwExpression(A.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_close();
    },
    $isEventSink: 1,
    $isSink: 1
  };
  A._SinkTransformerStreamSubscription.prototype = {
    _onPause$0() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.pause$0(0);
    },
    _onResume$0() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.resume$0(0);
    },
    _onCancel$0() {
      var subscription = this._subscription;
      if (subscription != null) {
        this._subscription = null;
        return subscription.cancel$0(0);
      }
      return null;
    },
    _async$_handleData$1(data) {
      var e, s, t1, exception, t2, _this = this;
      _this.$ti._precomputed1._as(data);
      try {
        t1 = _this.___SinkTransformerStreamSubscription__transformerSink_A;
        t1 === $ && A.throwLateFieldNI("_transformerSink");
        t1.add$1(0, data);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.Object._as(e);
        t2 = type$.StackTrace._as(s);
        if ((_this._state & 2) !== 0)
          A.throwExpression(A.StateError$("Stream is already closed"));
        _this.super$_BufferingStreamSubscription$_addError(t1, t2);
      }
    },
    _async$_handleError$2(error, stackTrace) {
      var e, s, t2, t3, exception, _this = this,
        _s24_ = "Stream is already closed",
        t1 = type$.Object;
      t1._as(error);
      t2 = type$.StackTrace;
      t2._as(stackTrace);
      try {
        t3 = _this.___SinkTransformerStreamSubscription__transformerSink_A;
        t3 === $ && A.throwLateFieldNI("_transformerSink");
        t3.addError$2(error, stackTrace);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        if (e === error) {
          if ((_this._state & 2) !== 0)
            A.throwExpression(A.StateError$(_s24_));
          _this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
        } else {
          t1 = t1._as(e);
          t2 = t2._as(s);
          if ((_this._state & 2) !== 0)
            A.throwExpression(A.StateError$(_s24_));
          _this.super$_BufferingStreamSubscription$_addError(t1, t2);
        }
      }
    },
    _handleDone$0() {
      var e, s, t1, exception, t2, _this = this;
      try {
        _this._subscription = null;
        t1 = _this.___SinkTransformerStreamSubscription__transformerSink_A;
        t1 === $ && A.throwLateFieldNI("_transformerSink");
        t1.close$0(0);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.Object._as(e);
        t2 = type$.StackTrace._as(s);
        if ((_this._state & 2) !== 0)
          A.throwExpression(A.StateError$("Stream is already closed"));
        _this.super$_BufferingStreamSubscription$_addError(t1, t2);
      }
    }
  };
  A._BoundSinkStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      var t2, t3, t4, subscription,
        t1 = this.$ti;
      t1._eval$1("~(2)?")._as(onData);
      type$.nullable_void_Function._as(onDone);
      t2 = $.Zone__current;
      t3 = cancelOnError === true ? 1 : 0;
      t4 = onError != null ? 32 : 0;
      subscription = new A._SinkTransformerStreamSubscription(A._BufferingStreamSubscription__registerDataHandler(t2, onData, t1._rest[1]), A._BufferingStreamSubscription__registerErrorHandler(t2, onError), A._BufferingStreamSubscription__registerDoneHandler(t2, onDone), t2, t3 | t4, t1._eval$1("_SinkTransformerStreamSubscription<1,2>"));
      subscription.___SinkTransformerStreamSubscription__transformerSink_A = t1._eval$1("EventSink<1>")._as(this._sinkMapper.call$1(new A._EventSinkWrapper(subscription, t1._eval$1("_EventSinkWrapper<2>"))));
      subscription._subscription = this._async$_stream.listen$3$onDone$onError(subscription.get$_async$_handleData(), subscription.get$_handleDone(), subscription.get$_async$_handleError());
      return subscription;
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    listen$2$onDone(onData, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
    }
  };
  A._ZoneFunction.prototype = {};
  A._ZoneSpecification.prototype = {$isZoneSpecification: 1};
  A._ZoneDelegate.prototype = {$isZoneDelegate: 1};
  A._Zone.prototype = {
    _processUncaughtError$3(zone, error, stackTrace) {
      var implZone, handler, parentDelegate, parentZone, currentZone, e, s, implementation, t1, exception;
      type$.StackTrace._as(stackTrace);
      implementation = this.get$_handleUncaughtError();
      implZone = implementation.zone;
      if (implZone === B.C__RootZone) {
        A._rootHandleError(error, stackTrace);
        return;
      }
      handler = implementation.$function;
      parentDelegate = implZone.get$_parentDelegate();
      t1 = J.get$parent$z(implZone);
      t1.toString;
      parentZone = t1;
      currentZone = $.Zone__current;
      try {
        $.Zone__current = parentZone;
        handler.call$5(implZone, parentDelegate, zone, error, stackTrace);
        $.Zone__current = currentZone;
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        $.Zone__current = currentZone;
        t1 = error === e ? stackTrace : s;
        parentZone._processUncaughtError$3(implZone, e, t1);
      }
    },
    $isZone: 1
  };
  A._CustomZone.prototype = {
    get$_delegate() {
      var t1 = this._delegateCache;
      return t1 == null ? this._delegateCache = new A._ZoneDelegate(this) : t1;
    },
    get$_parentDelegate() {
      return this.parent.get$_delegate();
    },
    get$errorZone() {
      return this._handleUncaughtError.zone;
    },
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        this.run$1$1(f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        this._processUncaughtError$3(this, type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2(f, arg, $T) {
      var e, s, exception;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        this.runUnary$2$2(f, arg, type$.void, $T);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        this._processUncaughtError$3(this, type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runBinaryGuarded$2$3(f, arg1, arg2, T1, T2) {
      var e, s, exception;
      T1._eval$1("@<0>")._bind$1(T2)._eval$1("~(1,2)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      try {
        this.runBinary$3$3(f, arg1, arg2, type$.void, T1, T2);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        this._processUncaughtError$3(this, type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    bindCallback$1$1(f, $R) {
      return new A._CustomZone_bindCallback_closure(this, this.registerCallback$1$1($R._eval$1("0()")._as(f), $R), $R);
    },
    bindUnaryCallback$2$1(f, $R, $T) {
      return new A._CustomZone_bindUnaryCallback_closure(this, this.registerUnaryCallback$2$1($R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f), $R, $T), $T, $R);
    },
    bindCallbackGuarded$1(f) {
      return new A._CustomZone_bindCallbackGuarded_closure(this, this.registerCallback$1$1(type$.void_Function._as(f), type$.void));
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._CustomZone_bindUnaryCallbackGuarded_closure(this, this.registerUnaryCallback$2$1($T._eval$1("~(0)")._as(f), type$.void, $T), $T);
    },
    $index(_, key) {
      var value,
        t1 = this._async$_map,
        result = t1.$index(0, key);
      if (result != null || t1.containsKey$1(0, key))
        return result;
      value = this.parent.$index(0, key);
      if (value != null)
        t1.$indexSet(0, key, value);
      return value;
    },
    handleUncaughtError$2(error, stackTrace) {
      this._processUncaughtError$3(this, error, type$.StackTrace._as(stackTrace));
    },
    fork$2$specification$zoneValues(specification, zoneValues) {
      var implementation = this._fork,
        t1 = implementation.zone;
      return implementation.$function.call$5(t1, t1.get$_parentDelegate(), this, specification, zoneValues);
    },
    run$1$1(f, $R) {
      var implementation, t1;
      $R._eval$1("0()")._as(f);
      implementation = this._async$_run;
      t1 = implementation.zone;
      return implementation.$function.call$1$4(t1, t1.get$_parentDelegate(), this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      var implementation, t1;
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      implementation = this._runUnary;
      t1 = implementation.zone;
      return implementation.$function.call$2$5(t1, t1.get$_parentDelegate(), this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, T1, T2) {
      var implementation, t1;
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      implementation = this._runBinary;
      t1 = implementation.zone;
      return implementation.$function.call$3$6(t1, t1.get$_parentDelegate(), this, f, arg1, arg2, $R, T1, T2);
    },
    registerCallback$1$1(callback, $R) {
      var implementation, t1;
      $R._eval$1("0()")._as(callback);
      implementation = this._registerCallback;
      t1 = implementation.zone;
      return implementation.$function.call$1$4(t1, t1.get$_parentDelegate(), this, callback, $R);
    },
    registerUnaryCallback$2$1(callback, $R, $T) {
      var implementation, t1;
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(callback);
      implementation = this._registerUnaryCallback;
      t1 = implementation.zone;
      return implementation.$function.call$2$4(t1, t1.get$_parentDelegate(), this, callback, $R, $T);
    },
    registerBinaryCallback$3$1(callback, $R, T1, T2) {
      var implementation, t1;
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(callback);
      implementation = this._registerBinaryCallback;
      t1 = implementation.zone;
      return implementation.$function.call$3$4(t1, t1.get$_parentDelegate(), this, callback, $R, T1, T2);
    },
    errorCallback$2(error, stackTrace) {
      var implementation = this._errorCallback,
        implementationZone = implementation.zone;
      if (implementationZone === B.C__RootZone)
        return null;
      return implementation.$function.call$5(implementationZone, implementationZone.get$_parentDelegate(), this, error, stackTrace);
    },
    scheduleMicrotask$1(f) {
      var implementation, t1;
      type$.void_Function._as(f);
      implementation = this._scheduleMicrotask;
      t1 = implementation.zone;
      return implementation.$function.call$4(t1, t1.get$_parentDelegate(), this, f);
    },
    createPeriodicTimer$2(duration, f) {
      var implementation, t1;
      type$.void_Function_Timer._as(f);
      implementation = this._createPeriodicTimer;
      t1 = implementation.zone;
      return implementation.$function.call$5(t1, t1.get$_parentDelegate(), this, duration, f);
    },
    print$1(_, line) {
      var implementation = this._print,
        t1 = implementation.zone;
      return implementation.$function.call$4(t1, t1.get$_parentDelegate(), this, line);
    },
    get$_async$_run() {
      return this._async$_run;
    },
    get$_runUnary() {
      return this._runUnary;
    },
    get$_runBinary() {
      return this._runBinary;
    },
    get$_registerCallback() {
      return this._registerCallback;
    },
    get$_registerUnaryCallback() {
      return this._registerUnaryCallback;
    },
    get$_registerBinaryCallback() {
      return this._registerBinaryCallback;
    },
    get$_errorCallback() {
      return this._errorCallback;
    },
    get$_scheduleMicrotask() {
      return this._scheduleMicrotask;
    },
    get$_createTimer() {
      return this._createTimer;
    },
    get$_createPeriodicTimer() {
      return this._createPeriodicTimer;
    },
    get$_print() {
      return this._print;
    },
    get$_fork() {
      return this._fork;
    },
    get$_handleUncaughtError() {
      return this._handleUncaughtError;
    },
    get$parent(receiver) {
      return this.parent;
    },
    get$_async$_map() {
      return this._async$_map;
    }
  };
  A._CustomZone_bindCallback_closure.prototype = {
    call$0() {
      return this.$this.run$1$1(this.registered, this.R);
    },
    $signature() {
      return this.R._eval$1("0()");
    }
  };
  A._CustomZone_bindUnaryCallback_closure.prototype = {
    call$1(arg) {
      var _this = this,
        t1 = _this.T;
      return _this.$this.runUnary$2$2(_this.registered, t1._as(arg), _this.R, t1);
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T)._eval$1("1(2)");
    }
  };
  A._CustomZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.registered);
    },
    $signature: 0
  };
  A._CustomZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.registered, t1._as(arg), t1);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A._rootHandleError_closure.prototype = {
    call$0() {
      A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    get$_async$_run() {
      return B._ZoneFunction__RootZone__rootRun;
    },
    get$_runUnary() {
      return B._ZoneFunction__RootZone__rootRunUnary;
    },
    get$_runBinary() {
      return B._ZoneFunction__RootZone__rootRunBinary;
    },
    get$_registerCallback() {
      return B._ZoneFunction__RootZone__rootRegisterCallback;
    },
    get$_registerUnaryCallback() {
      return B._ZoneFunction_Xkh;
    },
    get$_registerBinaryCallback() {
      return B._ZoneFunction_e9o;
    },
    get$_errorCallback() {
      return B._ZoneFunction__RootZone__rootErrorCallback;
    },
    get$_scheduleMicrotask() {
      return B._ZoneFunction__RootZone__rootScheduleMicrotask;
    },
    get$_createTimer() {
      return B._ZoneFunction__RootZone__rootCreateTimer;
    },
    get$_createPeriodicTimer() {
      return B._ZoneFunction_PAY;
    },
    get$_print() {
      return B._ZoneFunction__RootZone__rootPrint;
    },
    get$_fork() {
      return B._ZoneFunction__RootZone__rootFork;
    },
    get$_handleUncaughtError() {
      return B._ZoneFunction_KjJ;
    },
    get$parent(_) {
      return null;
    },
    get$_async$_map() {
      return $.$get$_RootZone__rootMap();
    },
    get$_delegate() {
      var t1 = $._RootZone__rootDelegate;
      return t1 == null ? $._RootZone__rootDelegate = new A._ZoneDelegate(this) : t1;
    },
    get$_parentDelegate() {
      var t1 = $._RootZone__rootDelegate;
      return t1 == null ? $._RootZone__rootDelegate = new A._ZoneDelegate(this) : t1;
    },
    get$errorZone() {
      return this;
    },
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2(f, arg, $T) {
      var e, s, exception;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runBinaryGuarded$2$3(f, arg1, arg2, T1, T2) {
      var e, s, exception;
      T1._eval$1("@<0>")._bind$1(T2)._eval$1("~(1,2)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$2(arg1, arg2);
          return;
        }
        A._rootRunBinary(null, null, this, f, arg1, arg2, type$.void, T1, T2);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    bindCallback$1$1(f, $R) {
      return new A._RootZone_bindCallback_closure(this, $R._eval$1("0()")._as(f), $R);
    },
    bindUnaryCallback$2$1(f, $R, $T) {
      return new A._RootZone_bindUnaryCallback_closure(this, $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f), $T, $R);
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._RootZone_bindUnaryCallbackGuarded_closure(this, $T._eval$1("~(0)")._as(f), $T);
    },
    $index(_, key) {
      return null;
    },
    handleUncaughtError$2(error, stackTrace) {
      A._rootHandleError(error, type$.StackTrace._as(stackTrace));
    },
    fork$2$specification$zoneValues(specification, zoneValues) {
      return A._rootFork(null, null, this, specification, zoneValues);
    },
    run$1$1(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerCallback$1$1(f, $R) {
      return $R._eval$1("0()")._as(f);
    },
    registerUnaryCallback$2$1(f, $R, $T) {
      return $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
    },
    registerBinaryCallback$3$1(f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    },
    errorCallback$2(error, stackTrace) {
      return null;
    },
    scheduleMicrotask$1(f) {
      A._rootScheduleMicrotask(null, null, this, type$.void_Function._as(f));
    },
    createPeriodicTimer$2(duration, f) {
      return A.Timer__createPeriodicTimer(duration, type$.void_Function_Timer._as(f));
    },
    print$1(_, line) {
      A.printString(line);
    }
  };
  A._RootZone_bindCallback_closure.prototype = {
    call$0() {
      return this.$this.run$1$1(this.f, this.R);
    },
    $signature() {
      return this.R._eval$1("0()");
    }
  };
  A._RootZone_bindUnaryCallback_closure.prototype = {
    call$1(arg) {
      var _this = this,
        t1 = _this.T;
      return _this.$this.runUnary$2$2(_this.f, t1._as(arg), _this.R, t1);
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T)._eval$1("1(2)");
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, t1._as(arg), t1);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A.runZonedGuarded_closure.prototype = {
    call$5($self, $parent, zone, error, stackTrace) {
      var e, s, exception, t2,
        t1 = type$.StackTrace;
      t1._as(stackTrace);
      try {
        this.parentZone.runBinary$3$3(this.onError, error, stackTrace, type$.void, type$.Object, t1);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t2 = $parent._delegationTarget;
        if (e === error)
          t2._processUncaughtError$3(zone, error, stackTrace);
        else
          t2._processUncaughtError$3(zone, type$.Object._as(e), t1._as(s));
      }
    },
    $signature: 54
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    get$keys(_) {
      return new A._HashMapKeyIterable(this, A._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(_, key) {
      var strings, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    addAll$1(_, other) {
      J.forEach$1$ax(A._instanceType(this)._eval$1("Map<1,2>")._as(other), new A._HashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(0, key);
    },
    _get$1(_, key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = A._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        A._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._collection$_keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._collection$_keys = null;
        }
      }
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string" && key !== "__proto__")
        return _this._removeHashTableEntry$2(_this._collection$_strings, key);
      else if (typeof key == "number" && (key & 1073741823) === key)
        return _this._removeHashTableEntry$2(_this._collection$_nums, key);
      else
        return _this._remove$1(0, key);
    },
    _remove$1(_, key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._collection$_keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    forEach$1(_, action) {
      var keys, $length, t2, i, key, t3, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1,2)")._as(action);
      keys = _this._computeKeys$0();
      for ($length = keys.length, t2 = t1._precomputed1, t1 = t1._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2._as(key);
        t3 = _this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
        if (keys !== _this._collection$_keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, index, names, entries, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      index = 0;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      }
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _collection$_addHashTableEntry$3(table, key, value) {
      var t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (table[key] == null) {
        ++this._collection$_length;
        this._collection$_keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _removeHashTableEntry$2(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = A._instanceType(this)._rest[1]._as(A._HashMap__getTableEntry(table, key));
        delete table[key];
        --this._collection$_length;
        this._collection$_keys = null;
        return value;
      } else
        return null;
    },
    _computeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    }
  };
  A._HashMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = A._instanceType(t1);
      t1.$indexSet(0, t2._precomputed1._as(key), t2._rest[1]._as(value));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A._IdentityHashMap.prototype = {
    _computeHashCode$1(key) {
      return A.objectHashCode(key) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._CustomHashMap.prototype = {
    $index(_, key) {
      if (!this._validKey.call$1(key))
        return null;
      return this.super$_HashMap$_get(0, key);
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      this.super$_HashMap$_set(t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1(_, key) {
      if (!this._validKey.call$1(key))
        return false;
      return this.super$_HashMap$_containsKey(key);
    },
    remove$1(_, key) {
      if (!this._validKey.call$1(key))
        return null;
      return this.super$_HashMap$_remove(0, key);
    },
    _computeHashCode$1(key) {
      return this._hashCode.call$1(this.$ti._precomputed1._as(key)) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, t1, t2, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this.$ti._precomputed1, t2 = this._equals, i = 0; i < $length; i += 2)
        if (t2.call$2(bucket[i], t1._as(key)))
          return i;
      return -1;
    }
  };
  A._CustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 21
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map._collection$_length;
    },
    get$isEmpty(_) {
      return this._map._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._map._collection$_length !== 0;
    },
    get$iterator(_) {
      var t1 = this._map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    },
    contains$1(_, element) {
      return this._map.containsKey$1(0, element);
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._map;
      if (keys !== t1._collection$_keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = keys[offset];
        _this._offset = offset + 1;
        return true;
      }
    },
    $isIterator: 1
  };
  A._LinkedCustomHashMap.prototype = {
    $index(_, key) {
      if (!this._validKey.call$1(key))
        return null;
      return this.super$JsLinkedHashMap$internalGet(key);
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      this.super$JsLinkedHashMap$internalSet(t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    containsKey$1(_, key) {
      if (!this._validKey.call$1(key))
        return false;
      return this.super$JsLinkedHashMap$internalContainsKey(key);
    },
    remove$1(_, key) {
      if (!this._validKey.call$1(key))
        return null;
      return this.super$JsLinkedHashMap$internalRemove(key);
    },
    internalComputeHashCode$1(key) {
      return this._hashCode.call$1(this.$ti._precomputed1._as(key)) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, t1, t2, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this.$ti._precomputed1, t2 = this._equals, i = 0; i < $length; ++i)
        if (t2.call$2(t1._as(bucket[i].hashMapCellKey), t1._as(key)))
          return i;
      return -1;
    }
  };
  A._LinkedCustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 21
  };
  A._HashSet.prototype = {
    get$iterator(_) {
      return new A._HashSetIterator(this, this._computeElements$0(), A._instanceType(this)._eval$1("_HashSetIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._HashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._HashSet__newHashTable() : nums, element);
      } else
        return _this._collection$_add$1(0, element);
    },
    _collection$_add$1(_, element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      ++_this._collection$_length;
      _this._collection$_elements = null;
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(0, object);
    },
    _remove$1(_, object) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      --_this._collection$_length;
      _this._collection$_elements = null;
      bucket.splice(index, 1);
      if (0 === bucket.length)
        delete rest[hash];
      return true;
    },
    clear$0(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._collection$_elements = null;
        _this._collection$_length = 0;
      }
    },
    _computeElements$0() {
      var strings, index, names, entries, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_elements;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      index = 0;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      }
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_elements = result;
    },
    _collection$_addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (table[element] != null)
        return false;
      table[element] = 0;
      ++this._collection$_length;
      this._collection$_elements = null;
      return true;
    },
    _removeHashTableEntry$2(table, element) {
      if (table != null && table[element] != null) {
        delete table[element];
        --this._collection$_length;
        this._collection$_elements = null;
        return true;
      } else
        return false;
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i], element))
          return i;
      return -1;
    }
  };
  A._HashSetIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        elements = _this._collection$_elements,
        offset = _this._offset,
        t1 = _this._set;
      if (elements !== t1._collection$_elements)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = elements[offset];
        _this._offset = offset + 1;
        return true;
      }
    },
    $isIterator: 1
  };
  A._LinkedHashSet.prototype = {
    get$iterator(_) {
      var _this = this,
        t1 = new A._LinkedHashSetIterator(_this, _this._collection$_modifications, A._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return type$.nullable__LinkedHashSetCell._as(strings[object]) != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        if (nums == null)
          return false;
        return type$.nullable__LinkedHashSetCell._as(nums[object]) != null;
      } else
        return this._contains$1(object);
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    get$first(_) {
      var first = this._collection$_first;
      if (first == null)
        throw A.wrapException(A.StateError$("No elements"));
      return A._instanceType(this)._precomputed1._as(first._element);
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._collection$_add$1(0, element);
    },
    _collection$_add$1(_, element) {
      var rest, hash, bucket, _this = this;
      A._instanceType(_this)._precomputed1._as(element);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    _collection$_addHashTableEntry$2(table, element) {
      A._instanceType(this)._precomputed1._as(element);
      if (type$.nullable__LinkedHashSetCell._as(table[element]) != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(A._instanceType(_this)._precomputed1._as(element));
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._element, element))
          return i;
      return -1;
    }
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = _this.$ti._eval$1("1?")._as(cell._element);
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    },
    $isIterator: 1
  };
  A.UnmodifiableListView.prototype = {
    cast$1$0(_, $R) {
      return new A.UnmodifiableListView(J.cast$1$0$ax(this._collection$_source, $R), $R._eval$1("UnmodifiableListView<0>"));
    },
    get$length(_) {
      return J.get$length$asx(this._collection$_source);
    },
    $index(_, index) {
      return J.elementAt$1$ax(this._collection$_source, index);
    }
  };
  A.HashMap_HashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 52
  };
  A.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 52
  };
  A.LinkedList.prototype = {
    remove$1(_, entry) {
      this.$ti._precomputed1._as(entry);
      if (entry._list !== this)
        return false;
      this._unlink$1(entry);
      return true;
    },
    contains$1(_, entry) {
      entry.get$list(entry);
      return false;
    },
    get$iterator(_) {
      var _this = this;
      return new A._LinkedListIterator(_this, _this._modificationCount, _this._collection$_first, _this.$ti._eval$1("_LinkedListIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$first(_) {
      var t1;
      if (this._collection$_length === 0)
        throw A.wrapException(A.StateError$("No such element"));
      t1 = this._collection$_first;
      t1.toString;
      return t1;
    },
    get$single(_) {
      var t1 = this._collection$_length;
      if (t1 === 0)
        throw A.wrapException(A.StateError$("No such element"));
      if (t1 > 1)
        throw A.wrapException(A.StateError$("Too many elements"));
      t1 = this._collection$_first;
      t1.toString;
      return t1;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    _insertBefore$3$updateFirst(entry, newEntry, updateFirst) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("1?")._as(entry);
      t1._precomputed1._as(newEntry);
      if (newEntry._list != null)
        throw A.wrapException(A.StateError$("LinkedListEntry is already in a LinkedList"));
      ++_this._modificationCount;
      newEntry.set$_list(_this);
      if (_this._collection$_length === 0) {
        newEntry.set$_collection$_next(newEntry);
        newEntry.set$_collection$_previous(newEntry);
        _this._collection$_first = newEntry;
        ++_this._collection$_length;
        return;
      }
      t1 = entry._collection$_previous;
      t1.toString;
      newEntry.set$_collection$_previous(t1);
      newEntry.set$_collection$_next(entry);
      t1.set$_collection$_next(newEntry);
      entry.set$_collection$_previous(newEntry);
      ++_this._collection$_length;
    },
    _unlink$1(entry) {
      var t1, next, _this = this;
      _this.$ti._precomputed1._as(entry);
      ++_this._modificationCount;
      entry._collection$_next.set$_collection$_previous(entry._collection$_previous);
      t1 = entry._collection$_previous;
      next = entry._collection$_next;
      t1.set$_collection$_next(next);
      --_this._collection$_length;
      entry.set$_collection$_previous(null);
      entry.set$_collection$_next(null);
      entry.set$_list(null);
      if (_this._collection$_length === 0)
        _this._collection$_first = null;
      else if (entry === _this._collection$_first)
        _this._collection$_first = next;
    }
  };
  A._LinkedListIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this._list;
      if (_this._modificationCount !== t1._modificationCount)
        throw A.wrapException(A.ConcurrentModificationError$(_this));
      if (t1._collection$_length !== 0)
        t1 = _this._visitedFirst && _this._collection$_next === t1.get$first(0);
      else
        t1 = true;
      if (t1) {
        _this._collection$_current = null;
        return false;
      }
      _this._visitedFirst = true;
      t1 = _this._collection$_next;
      _this._collection$_current = t1;
      _this._collection$_next = t1._collection$_next;
      return true;
    },
    $isIterator: 1
  };
  A.LinkedListEntry.prototype = {
    set$_list(_list) {
      this._list = A._instanceType(this)._eval$1("LinkedList<LinkedListEntry.E>?")._as(_list);
    },
    set$_collection$_next(_next) {
      this._collection$_next = A._instanceType(this)._eval$1("LinkedListEntry.E?")._as(_next);
    },
    set$_collection$_previous(_previous) {
      this._collection$_previous = A._instanceType(this)._eval$1("LinkedListEntry.E?")._as(_previous);
    }
  };
  A.ListBase.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListBase.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    get$last(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, this.get$length(receiver) - 1);
    },
    get$single(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      if (this.get$length(receiver) > 1)
        throw A.wrapException(A.IterableElementError_tooMany());
      return this.$index(receiver, 0);
    },
    contains$1(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(this.$index(receiver, i), element))
          return true;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    every$1(receiver, test) {
      var $length, i;
      A.instanceType(receiver)._eval$1("bool(ListBase.E)")._as(test);
      $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (!test.call$1(this.$index(receiver, i)))
          return false;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return true;
    },
    join$1(receiver, separator) {
      var t1;
      if (this.get$length(receiver) === 0)
        return "";
      t1 = A.StringBuffer__writeAll("", receiver, separator);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    map$1$1(receiver, f, $T) {
      var t1 = A.instanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListBase.E)")._as(f), t1._eval$1("@<ListBase.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    take$1(receiver, count) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(count, "count", type$.int), A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    toList$1$growable(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = J.JSArray_JSArray$growable(0, A.instanceType(receiver)._eval$1("ListBase.E"));
        return t1;
      }
      first = _this.$index(receiver, 0);
      result = A.List_List$filled(_this.get$length(receiver), first, true, A.instanceType(receiver)._eval$1("ListBase.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        B.JSArray_methods.$indexSet(result, i, _this.$index(receiver, i));
      return result;
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    add$1(receiver, element) {
      var t1;
      A.instanceType(receiver)._eval$1("ListBase.E")._as(element);
      t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    remove$1(receiver, element) {
      var i;
      for (i = 0; i < this.get$length(receiver); ++i)
        if (J.$eq$(this.$index(receiver, i), element)) {
          this._closeGap$2(receiver, i, i + 1);
          return true;
        }
      return false;
    },
    _closeGap$2(receiver, start, end) {
      var i, _this = this,
        $length = _this.get$length(receiver),
        size = end - start;
      for (i = end; i < $length; ++i)
        _this.$indexSet(receiver, i - size, _this.$index(receiver, i));
      _this.set$length(receiver, $length - size);
    },
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A.instanceType(receiver)._eval$1("@<ListBase.E>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    sort$1(receiver, compare) {
      var t2,
        t1 = A.instanceType(receiver);
      t1._eval$1("int(ListBase.E,ListBase.E)?")._as(compare);
      t2 = compare == null ? A.collection_ListBase__compareAny$closure() : compare;
      A.Sort__doSort(receiver, 0, this.get$length(receiver) - 1, t2, t1._eval$1("ListBase.E"));
    },
    getRange$2(receiver, start, end) {
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      return A.SubListIterable$(receiver, start, end, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, t1, i;
      A.instanceType(receiver)._eval$1("Iterable<ListBase.E>")._as(iterable);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    setAll$2(receiver, index, iterable) {
      var t1, index0;
      A.instanceType(receiver)._eval$1("Iterable<ListBase.E>")._as(iterable);
      if (type$.List_dynamic._is(iterable))
        this.setRange$3(receiver, index, index + J.get$length$asx(iterable), iterable);
      else
        for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0(); index = index0) {
          index0 = index + 1;
          this.$indexSet(receiver, index, t1.get$current(t1));
        }
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.MapBase.prototype = {
    forEach$1(receiver, action) {
      var t2, key, t3,
        t1 = A.instanceType(receiver);
      t1._eval$1("~(MapBase.K,MapBase.V)")._as(action);
      for (t2 = J.get$iterator$ax(this.get$keys(receiver)), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current(t2);
        t3 = this.$index(receiver, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
      }
    },
    addAll$1(receiver, other) {
      J.forEach$1$ax(A.instanceType(receiver)._eval$1("Map<MapBase.K,MapBase.V>")._as(other), new A.MapBase_addAll_closure(receiver));
    },
    updateAll$1(receiver, update) {
      var t2, key, t3,
        t1 = A.instanceType(receiver);
      t1._eval$1("MapBase.V(MapBase.K,MapBase.V)")._as(update);
      for (t2 = J.get$iterator$ax(this.get$keys(receiver)), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current(t2);
        t3 = this.$index(receiver, key);
        this.$indexSet(receiver, key, update.call$2(key, t3 == null ? t1._as(t3) : t3));
      }
    },
    get$entries(receiver) {
      return J.map$1$1$ax(this.get$keys(receiver), new A.MapBase_entries_closure(receiver), A.instanceType(receiver)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    map$2$1(receiver, transform, K2, V2) {
      var result, t2, key, t3, entry,
        t1 = A.instanceType(receiver);
      t1._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(MapBase.K,MapBase.V)")._as(transform);
      result = A.LinkedHashMap_LinkedHashMap$_empty(K2, V2);
      for (t2 = J.get$iterator$ax(this.get$keys(receiver)), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current(t2);
        t3 = this.$index(receiver, key);
        entry = transform.call$2(key, t3 == null ? t1._as(t3) : t3);
        result.$indexSet(0, entry.key, entry.value);
      }
      return result;
    },
    addEntries$1(receiver, newEntries) {
      var t1, t2;
      A.instanceType(receiver)._eval$1("Iterable<MapEntry<MapBase.K,MapBase.V>>")._as(newEntries);
      for (t1 = newEntries.get$iterator(newEntries); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        this.$indexSet(receiver, t2.key, t2.value);
      }
    },
    containsKey$1(receiver, key) {
      return J.contains$1$asx(this.get$keys(receiver), key);
    },
    get$length(receiver) {
      return J.get$length$asx(this.get$keys(receiver));
    },
    get$isEmpty(receiver) {
      return J.get$isEmpty$asx(this.get$keys(receiver));
    },
    get$isNotEmpty(receiver) {
      return J.get$isNotEmpty$asx(this.get$keys(receiver));
    },
    toString$0(receiver) {
      return A.MapBase_mapToString(receiver);
    },
    $isMap: 1
  };
  A.MapBase_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = A.instanceType(t1);
      J.$indexSet$ax(t1, t2._eval$1("MapBase.K")._as(key), t2._eval$1("MapBase.V")._as(value));
    },
    $signature() {
      return A.instanceType(this.$this)._eval$1("~(MapBase.K,MapBase.V)");
    }
  };
  A.MapBase_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = A.instanceType(t1);
      t2._eval$1("MapBase.K")._as(key);
      t1 = J.$index$asx(t1, key);
      if (t1 == null)
        t1 = t2._eval$1("MapBase.V")._as(t1);
      return new A.MapEntry(key, t1, t2._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    $signature() {
      return A.instanceType(this.$this)._eval$1("MapEntry<MapBase.K,MapBase.V>(MapBase.K)");
    }
  };
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = A.S(k);
      t1._contents = (t1._contents += t2) + ": ";
      t2 = A.S(v);
      t1._contents += t2;
    },
    $signature: 22
  };
  A._UnmodifiableMapMixin.prototype = {
    addAll$1(_, other) {
      A._instanceType(this)._eval$1("Map<_UnmodifiableMapMixin.K,_UnmodifiableMapMixin.V>")._as(other);
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable map"));
    }
  };
  A.MapView.prototype = {
    $index(_, key) {
      return J.$index$asx(this._map, key);
    },
    addAll$1(_, other) {
      J.addAll$1$ax(this._map, A._instanceType(this)._eval$1("Map<MapView.K,MapView.V>")._as(other));
    },
    containsKey$1(_, key) {
      return J.containsKey$1$x(this._map, key);
    },
    forEach$1(_, action) {
      J.forEach$1$ax(this._map, A._instanceType(this)._eval$1("~(MapView.K,MapView.V)")._as(action));
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this._map);
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this._map);
    },
    get$length(_) {
      return J.get$length$asx(this._map);
    },
    get$keys(_) {
      return J.get$keys$x(this._map);
    },
    toString$0(_) {
      return J.toString$0$(this._map);
    },
    get$entries(_) {
      return J.get$entries$x(this._map);
    },
    map$2$1(_, transform, K2, V2) {
      return J.map$2$1$ax(this._map, A._instanceType(this)._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(MapView.K,MapView.V)")._as(transform), K2, V2);
    },
    $isMap: 1
  };
  A.UnmodifiableMapView.prototype = {};
  A.SetBase.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    map$1$1(_, f, $T) {
      var t1 = A._instanceType(this);
      return new A.EfficientLengthMappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    get$single(_) {
      var it, _this = this;
      if (_this.get$length(_this) > 1)
        throw A.wrapException(A.IterableElementError_tooMany());
      it = _this.get$iterator(_this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current(it);
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    take$1(_, n) {
      return A.TakeIterable_TakeIterable(this, n, A._instanceType(this)._precomputed1);
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._precomputed1);
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current(it);
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current(iterator);
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  A._SetBase.prototype = {};
  A._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._convert$_data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._convert$_data._length : this._convert$_computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(0) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(0) > 0;
    },
    get$keys(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._convert$_data;
        return new A.LinkedHashMapKeysIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    $indexSet(_, key, value) {
      var processed, original, _this = this;
      A._asString(key);
      if (_this._processed == null)
        _this._convert$_data.$indexSet(0, key, value);
      else if (_this.containsKey$1(0, key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    addAll$1(_, other) {
      J.forEach$1$ax(type$.Map_String_dynamic._as(other), new A._JsonMap_addAll_closure(this));
    },
    containsKey$1(_, key) {
      if (this._processed == null)
        return this._convert$_data.containsKey$1(0, key);
      if (typeof key != "string")
        return false;
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      type$.void_Function_String_dynamic._as(f);
      if (_this._processed == null)
        return _this._convert$_data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._convert$_data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0() {
      var keys = type$.nullable_List_dynamic._as(this._convert$_data);
      if (keys == null)
        keys = this._convert$_data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._convert$_data;
      result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        B.JSArray_methods.add$1(keys, "");
      else
        B.JSArray_methods.clear$0(keys);
      _this._original = _this._processed = null;
      return _this._convert$_data = result;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMap_addAll_closure.prototype = {
    call$2(key, value) {
      this.$this.$indexSet(0, A._asString(key), value);
    },
    $signature: 11
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      return this._convert$_parent.get$length(0);
    },
    elementAt$1(_, index) {
      var t1 = this._convert$_parent;
      if (t1._processed == null)
        t1 = t1.get$keys(0).elementAt$1(0, index);
      else {
        t1 = t1._convert$_computeKeys$0();
        if (!(index >= 0 && index < t1.length))
          return A.ioore(t1, index);
        t1 = t1[index];
      }
      return t1;
    },
    get$iterator(_) {
      var t1 = this._convert$_parent;
      if (t1._processed == null) {
        t1 = t1.get$keys(0);
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    },
    contains$1(_, key) {
      return this._convert$_parent.containsKey$1(0, key);
    }
  };
  A._JsonDecoderSink.prototype = {
    close$0(_) {
      var t1, t2, _this = this;
      _this.super$_StringSinkConversionSink$close(0);
      t1 = _this._stringSink;
      t2 = t1._contents;
      t1._contents = "";
      t1 = _this._convert$_sink;
      t1.add$1(0, A._parseJson(t2.charCodeAt(0) == 0 ? t2 : t2, _this._reviver));
      t1.close$0(0);
    }
  };
  A._Utf8Decoder__decoder_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 43
  };
  A._Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 43
  };
  A.AsciiCodec.prototype = {
    get$name(_) {
      return "us-ascii";
    },
    encode$1(source) {
      return B.AsciiEncoder_127.convert$1(source);
    },
    get$decoder() {
      return B.AsciiDecoder_false_127;
    }
  };
  A._UnicodeSubsetEncoder.prototype = {
    convert$1(string) {
      var stringLength, end, result, t1, i, codeUnit;
      A._asString(string);
      stringLength = string.length;
      end = A.RangeError_checkValidRange(0, null, stringLength);
      result = new Uint8Array(end);
      for (t1 = ~this._subsetMask, i = 0; i < end; ++i) {
        if (!(i < stringLength))
          return A.ioore(string, i);
        codeUnit = string.charCodeAt(i);
        if ((codeUnit & t1) !== 0)
          throw A.wrapException(A.ArgumentError$value(string, "string", "Contains invalid characters."));
        if (!(i < end))
          return A.ioore(result, i);
        result[i] = codeUnit;
      }
      return result;
    },
    startChunkedConversion$1(sink) {
      var t1;
      type$.Sink_List_int._as(sink);
      t1 = sink instanceof A.ByteConversionSink ? sink : new A._ByteAdapterSink(sink);
      return new A._UnicodeSubsetEncoderSink(t1, this._subsetMask);
    }
  };
  A.AsciiEncoder.prototype = {};
  A._UnicodeSubsetEncoderSink.prototype = {
    close$0(_) {
      this._convert$_sink.close$0(0);
    },
    addSlice$4(source, start, end, isLast) {
      var t2, i, codeUnit, listLength,
        t1 = source.length;
      A.RangeError_checkValidRange(start, end, t1);
      for (t2 = ~this._subsetMask, i = start; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(source, i);
        codeUnit = source.charCodeAt(i);
        if ((codeUnit & t2) !== 0)
          throw A.wrapException(A.ArgumentError$("Source contains invalid character with code point: " + codeUnit + ".", null));
      }
      t1 = this._convert$_sink;
      t2 = new A.CodeUnits(source);
      listLength = t2.get$length(0);
      A.RangeError_checkValidRange(start, end, listLength);
      t2 = A.List_List$_of(t2.getRange$2(t2, start, end), type$.CodeUnits._eval$1("ListBase.E"));
      t1.add$1(0, t2);
      if (isLast)
        t1.close$0(0);
    }
  };
  A._UnicodeSubsetDecoder.prototype = {
    bind$1(stream) {
      return this.super$Converter$bind(type$.Stream_List_int._as(stream));
    }
  };
  A.AsciiDecoder.prototype = {
    startChunkedConversion$1(sink) {
      var stringSink;
      type$.Sink_String._as(sink);
      stringSink = type$.StringConversionSink._is(sink) ? sink : new A._StringAdapterSink(sink);
      if (this._allowInvalid)
        return new A._ErrorHandlingAsciiDecoderSink(stringSink.asUtf8Sink$1(false));
      else
        return new A._SimpleAsciiDecoderSink(stringSink);
    }
  };
  A._ErrorHandlingAsciiDecoderSink.prototype = {
    close$0(_) {
      this._utf8Sink.close$0(0);
    },
    add$1(_, source) {
      type$.List_int._as(source);
      this.addSlice$4(source, 0, J.get$length$asx(source), false);
    },
    addSlice$4(source, start, end, isLast) {
      var t1, t2, i;
      type$.List_int._as(source);
      t1 = J.getInterceptor$asx(source);
      A.RangeError_checkValidRange(start, end, t1.get$length(source));
      for (t2 = this._utf8Sink, i = start; i < end; ++i)
        if ((t1.$index(source, i) & 4294967168) >>> 0 !== 0) {
          if (i > start)
            t2.addSlice$4(source, start, i, false);
          t2.add$1(0, B.List_239_191_189);
          start = i + 1;
        }
      if (start < end)
        t2.addSlice$4(source, start, end, isLast);
      else if (isLast)
        t2.close$0(0);
    }
  };
  A._SimpleAsciiDecoderSink.prototype = {
    close$0(_) {
      this._convert$_sink.close$0(0);
    },
    add$1(_, source) {
      var t1, i;
      type$.List_int._as(source);
      for (t1 = J.getInterceptor$asx(source), i = 0; i < t1.get$length(source); ++i)
        if ((t1.$index(source, i) & 4294967168) >>> 0 !== 0)
          throw A.wrapException(A.FormatException$("Source contains non-ASCII bytes.", null, null));
      this._convert$_sink.add$1(0, A.String_String$fromCharCodes(source, 0, null));
    },
    addSlice$4(source, start, end, isLast) {
      var $length;
      type$.List_int._as(source);
      $length = source.length;
      A.RangeError_checkValidRange(start, end, $length);
      if (start < end)
        this.add$1(0, start !== 0 || end !== $length ? B.NativeUint8List_methods.sublist$2(source, start, end) : source);
      if (isLast)
        this._convert$_sink.close$0(0);
    }
  };
  A.Base64Codec.prototype = {
    normalize$3(_, source, start, end) {
      var inverseAlphabet, t2, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, t3, digit2, char0, value, t4, endLength, $length,
        _s64_ = string$.ABCDEF,
        _s31_ = "Invalid base64 encoding length ",
        t1 = source.length;
      end = A.RangeError_checkValidRange(start, end, t1);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (t2 = inverseAlphabet.length, i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        if (!(i < t1))
          return A.ioore(source, i);
        char = source.charCodeAt(i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            if (!(i0 < t1))
              return A.ioore(source, i0);
            digit1 = A.hexDigitValue(source.charCodeAt(i0));
            t3 = i0 + 1;
            if (!(t3 < t1))
              return A.ioore(source, t3);
            digit2 = A.hexDigitValue(source.charCodeAt(t3));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          if (!(char0 >= 0 && char0 < t2))
            return A.ioore(inverseAlphabet, char0);
          value = inverseAlphabet[char0];
          if (value >= 0) {
            if (!(value < 64))
              return A.ioore(_s64_, value);
            char0 = _s64_.charCodeAt(value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t3 = buffer == null ? null : buffer._contents.length;
                if (t3 == null)
                  t3 = 0;
                firstPadding = t3 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t3 = buffer;
            } else
              t3 = buffer;
            t3._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t4 = A.Primitives_stringFromCharCode(char);
            t3._contents += t4;
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = B.JSString_methods.substring$2(source, sliceStart, end);
        t1 = buffer._contents += t1;
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {
    startChunkedConversion$1(sink) {
      var t1,
        _s64_ = string$.ABCDEF;
      type$.Sink_String._as(sink);
      if (type$.StringConversionSink._is(sink)) {
        t1 = sink.asUtf8Sink$1(false);
        return new A._Utf8Base64EncoderSink(t1, new A._Base64Encoder(_s64_));
      }
      return new A._AsciiBase64EncoderSink(sink, new A._BufferCachingBase64Encoder(_s64_));
    }
  };
  A._Base64Encoder.prototype = {
    createBuffer$1(_, bufferLength) {
      return new Uint8Array(bufferLength);
    },
    encode$4(bytes, start, end, isLast) {
      var byteCount, fullChunks, bufferLength, output, _this = this;
      type$.List_int._as(bytes);
      byteCount = (_this._convert$_state & 3) + (end - start);
      fullChunks = B.JSInt_methods._tdivFast$1(byteCount, 3);
      bufferLength = fullChunks * 4;
      if (isLast && byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = _this.createBuffer$1(0, bufferLength);
      _this._convert$_state = A._Base64Encoder_encodeChunk(_this._alphabet, bytes, start, end, isLast, output, 0, _this._convert$_state);
      if (bufferLength > 0)
        return output;
      return null;
    }
  };
  A._BufferCachingBase64Encoder.prototype = {
    createBuffer$1(_, bufferLength) {
      var buffer = this.bufferCache;
      if (buffer == null || buffer.length < bufferLength)
        buffer = this.bufferCache = new Uint8Array(bufferLength);
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(buffer), buffer.byteOffset, bufferLength);
    }
  };
  A._Base64EncoderSink.prototype = {
    add$1(_, source) {
      type$.List_int._as(source);
      this._convert$_add$4(0, source, 0, J.get$length$asx(source), false);
    },
    close$0(_) {
      this._convert$_add$4(0, B.List_empty1, 0, 0, true);
    },
    addSlice$4(source, start, end, isLast) {
      type$.List_int._as(source);
      A.RangeError_checkValidRange(start, end, source.length);
      this._convert$_add$4(0, source, start, end, isLast);
    }
  };
  A._AsciiBase64EncoderSink.prototype = {
    _convert$_add$4(_, source, start, end, isLast) {
      var buffer = this._encoder.encode$4(type$.List_int._as(source), start, end, isLast);
      if (buffer != null)
        this._convert$_sink.add$1(0, A.String_String$fromCharCodes(buffer, 0, null));
      if (isLast)
        this._convert$_sink.close$0(0);
    }
  };
  A._Utf8Base64EncoderSink.prototype = {
    _convert$_add$4(_, source, start, end, isLast) {
      var buffer = this._encoder.encode$4(type$.List_int._as(source), start, end, isLast);
      if (buffer != null)
        this._convert$_sink.addSlice$4(buffer, 0, buffer.length, isLast);
    }
  };
  A.ByteConversionSink.prototype = {
    addSlice$4(chunk, start, end, isLast) {
      this.add$1(0, B.NativeUint8List_methods.sublist$2(type$.List_int._as(chunk), start, end));
      if (isLast)
        this.close$0(0);
    },
    $isSink: 1
  };
  A._ByteAdapterSink.prototype = {
    add$1(_, chunk) {
      this._convert$_sink.add$1(0, type$.List_int._as(chunk));
    },
    close$0(_) {
      this._convert$_sink.close$0(0);
    }
  };
  A._ByteCallbackSink.prototype = {
    add$1(_, chunk) {
      var t1, t2, t3, v, grown, _this = this;
      type$.Iterable_int._as(chunk);
      t1 = _this._buffer;
      t2 = _this._bufferIndex;
      t3 = J.getInterceptor$asx(chunk);
      if (t3.get$length(chunk) > t1.length - t2) {
        t1 = _this._buffer;
        v = t3.get$length(chunk) + t1.length - 1;
        v |= B.JSInt_methods._shrOtherPositive$1(v, 1);
        v |= v >>> 2;
        v |= v >>> 4;
        v |= v >>> 8;
        grown = new Uint8Array((((v | v >>> 16) >>> 0) + 1) * 2);
        t1 = _this._buffer;
        B.NativeUint8List_methods.setRange$3(grown, 0, t1.length, t1);
        _this._buffer = grown;
      }
      t1 = _this._buffer;
      t2 = _this._bufferIndex;
      B.NativeUint8List_methods.setRange$3(t1, t2, t2 + t3.get$length(chunk), chunk);
      _this._bufferIndex = _this._bufferIndex + t3.get$length(chunk);
    },
    close$0(_) {
      this._convert$_callback.call$1(B.NativeUint8List_methods.sublist$2(this._buffer, 0, this._bufferIndex));
    }
  };
  A.ChunkedConversionSink.prototype = {$isSink: 1};
  A._ConverterStreamEventSink.prototype = {
    add$1(_, o) {
      this._chunkedSink.add$1(0, this.$ti._precomputed1._as(o));
    },
    addError$2(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      this._eventSink.addError$2(error, stackTrace);
    },
    close$0(_) {
      this._chunkedSink.close$0(0);
    },
    $isEventSink: 1,
    $isSink: 1
  };
  A.Codec.prototype = {};
  A._FusedCodec.prototype = {};
  A.Converter.prototype = {
    startChunkedConversion$1(sink) {
      A._instanceType(this)._eval$1("Sink<Converter.T>")._as(sink);
      throw A.wrapException(A.UnsupportedError$("This converter does not support chunked conversions: " + this.toString$0(0)));
    },
    bind$1(stream) {
      var t1 = A._instanceType(this);
      return new A._BoundSinkStream(new A.Converter_bind_closure(this), t1._eval$1("Stream<Converter.S>")._as(stream), type$.$env_1_1_dynamic._bind$1(t1._eval$1("Converter.T"))._eval$1("_BoundSinkStream<1,2>"));
    }
  };
  A.Converter_bind_closure.prototype = {
    call$1(sink) {
      return new A._ConverterStreamEventSink(sink, this.$this.startChunkedConversion$1(sink), type$._ConverterStreamEventSink_dynamic_dynamic);
    },
    $signature: 58
  };
  A.Encoding.prototype = {
    decodeStream$1(byteStream) {
      type$.Stream_List_int._as(byteStream);
      return this.get$decoder().bind$1(byteStream).fold$1$2(0, new A.StringBuffer(""), new A.Encoding_decodeStream_closure(), type$.StringBuffer).then$1$1(new A.Encoding_decodeStream_closure0(), type$.String);
    }
  };
  A.Encoding_decodeStream_closure.prototype = {
    call$2(buffer, string) {
      type$.StringBuffer._as(buffer);
      buffer._contents += A._asString(string);
      return buffer;
    },
    $signature: 59
  };
  A.Encoding_decodeStream_closure0.prototype = {
    call$1(buffer) {
      var t1 = type$.StringBuffer._as(buffer)._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $signature: 60
  };
  A.HtmlEscapeMode.prototype = {
    toString$0(_) {
      return this._convert$_name;
    }
  };
  A.HtmlEscape.prototype = {
    convert$1(text) {
      var val;
      A._asString(text);
      val = this._convert$3(text, 0, text.length);
      return val == null ? text : val;
    },
    _convert$3(text, start, end) {
      var t1, t2, t3, t4, i, result, replacement, _null = null;
      for (t1 = text.length, t2 = this.mode, t3 = t2.escapeSlash, t4 = t2.escapeApos, t2 = t2.escapeQuot, i = start, result = _null; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(text, i);
        switch (text[i]) {
          case "&":
            replacement = "&amp;";
            break;
          case '"':
            replacement = t2 ? "&quot;" : _null;
            break;
          case "'":
            replacement = t4 ? "&#39;" : _null;
            break;
          case "<":
            replacement = "&lt;";
            break;
          case ">":
            replacement = "&gt;";
            break;
          case "/":
            replacement = t3 ? "&#47;" : _null;
            break;
          default:
            replacement = _null;
        }
        if (replacement != null) {
          if (result == null)
            result = new A.StringBuffer("");
          if (i > start)
            result._contents += B.JSString_methods.substring$2(text, start, i);
          result._contents += replacement;
          start = i + 1;
        }
      }
      if (result == null)
        return _null;
      if (end > start) {
        t1 = B.JSString_methods.substring$2(text, start, end);
        result._contents += t1;
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    startChunkedConversion$1(sink) {
      type$.Sink_String._as(sink);
      return new A._HtmlEscapeSink(this, type$.StringConversionSink._is(sink) ? sink : new A._StringAdapterSink(sink));
    }
  };
  A._HtmlEscapeSink.prototype = {
    addSlice$4(chunk, start, end, isLast) {
      var val = this._escape._convert$3(chunk, start, end),
        t1 = this._convert$_sink;
      if (val == null)
        t1.addSlice$4(chunk, start, end, isLast);
      else {
        t1.add$1(0, val);
        if (isLast)
          t1.close$0(0);
      }
    },
    close$0(_) {
      this._convert$_sink.close$0(0);
    }
  };
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$2$reviver(_, source, reviver) {
      var t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    encode$2$toEncodable(value, toEncodable) {
      var t1 = A._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return t1;
    },
    encode$1(value) {
      return this.encode$2$toEncodable(value, null);
    },
    get$encoder() {
      return B.JsonEncoder_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {
    startChunkedConversion$1(sink) {
      var t1;
      type$.Sink_String._as(sink);
      if (sink instanceof A._Utf8EncoderSink)
        return new A._JsonUtf8EncoderSink(sink._convert$_sink, A.JsonUtf8Encoder__utf8Encode(null), this._toEncodable, 256);
      t1 = type$.StringConversionSink._is(sink) ? sink : new A._StringAdapterSink(sink);
      return new A._JsonEncoderSink(null, this._toEncodable, t1);
    }
  };
  A._JsonEncoderSink.prototype = {
    add$1(_, o) {
      var stringSink, _this = this;
      if (_this._isDone)
        throw A.wrapException(A.StateError$("Only one call to add allowed"));
      _this._isDone = true;
      stringSink = _this._convert$_sink.asStringSink$0();
      A._JsonStringStringifier_printOn(o, stringSink, _this._toEncodable, _this._indent);
      stringSink.close$0(0);
    },
    close$0(_) {
    }
  };
  A._JsonUtf8EncoderSink.prototype = {
    _convert$_addChunk$3(chunk, start, end) {
      this._convert$_sink.addSlice$4(chunk, start, end, false);
    },
    add$1(_, object) {
      var _this = this;
      if (_this._isDone)
        throw A.wrapException(A.StateError$("Only one call to add allowed"));
      _this._isDone = true;
      A._JsonUtf8Stringifier_stringify(object, _this._indent, _this._toEncodable, _this._bufferSize, _this.get$_convert$_addChunk());
      _this._convert$_sink.close$0(0);
    },
    close$0(_) {
      if (!this._isDone) {
        this._isDone = true;
        this._convert$_sink.close$0(0);
      }
    }
  };
  A.JsonDecoder.prototype = {
    startChunkedConversion$1(sink) {
      return new A._JsonDecoderSink(this._reviver, sink, new A.StringBuffer(""));
    }
  };
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var offset, i, charCode, t1, t2, _this = this,
        $length = s.length;
      for (offset = 0, i = 0; i < $length; ++i) {
        charCode = s.charCodeAt(i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t1 = charCode & 64512;
            if (t1 === 55296) {
              t2 = i + 1;
              t2 = !(t2 < $length && (s.charCodeAt(t2) & 64512) === 56320);
            } else
              t2 = false;
            if (!t2)
              if (t1 === 56320) {
                t1 = i - 1;
                t1 = !(t1 >= 0 && (s.charCodeAt(t1) & 64512) === 55296);
              } else
                t1 = false;
            else
              t1 = true;
            if (t1) {
              if (i > offset)
                _this.writeStringSlice$3(s, offset, i);
              offset = i + 1;
              _this.writeCharCode$1(92);
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(100);
              t1 = charCode >>> 8 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          switch (charCode) {
            case 8:
              _this.writeCharCode$1(98);
              break;
            case 9:
              _this.writeCharCode$1(116);
              break;
            case 10:
              _this.writeCharCode$1(110);
              break;
            case 12:
              _this.writeCharCode$1(102);
              break;
            case 13:
              _this.writeCharCode$1(114);
              break;
            default:
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(48);
              _this.writeCharCode$1(48);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          _this.writeCharCode$1(charCode);
        }
      }
      if (offset === 0)
        _this.writeString$1(s);
      else if (offset < $length)
        _this.writeStringSlice$3(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      B.JSArray_methods.add$1(t1, object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this.writeNumber$1(object);
        return true;
      } else if (object === true) {
        _this.writeString$1("true");
        return true;
      } else if (object === false) {
        _this.writeString$1("false");
        return true;
      } else if (object == null) {
        _this.writeString$1("null");
        return true;
      } else if (typeof object == "string") {
        _this.writeString$1('"');
        _this.writeStringContent$1(object);
        _this.writeString$1('"');
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t1, i, _this = this;
      _this.writeString$1("[");
      t1 = J.getInterceptor$asx(list);
      if (t1.get$isNotEmpty(list)) {
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",");
          _this.writeObject$1(t1.$index(list, i));
        }
      }
      _this.writeString$1("]");
    },
    writeMap$1(map) {
      var t2, keyValueList, i, separator, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t2 = t1.get$length(map) * 2;
      keyValueList = A.List_List$filled(t2, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{");
      for (separator = '"'; i < t2; i += 2, separator = ',"') {
        _this.writeString$1(separator);
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('":');
        t1 = i + 1;
        if (!(t1 < t2))
          return A.ioore(keyValueList, t1);
        _this.writeObject$1(keyValueList[t1]);
      }
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      B.JSArray_methods.$indexSet(t1, t2.i++, key);
      B.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 22
  };
  A._JsonPrettyPrintMixin.prototype = {
    writeList$1(list) {
      var i, _this = this,
        t1 = J.getInterceptor$asx(list);
      if (t1.get$isEmpty(list))
        _this.writeString$1("[]");
      else {
        _this.writeString$1("[\n");
        _this.writeIndentation$1(++_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",\n");
          _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
          _this.writeObject$1(t1.$index(list, i));
        }
        _this.writeString$1("\n");
        _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeString$1("]");
      }
    },
    writeMap$1(map) {
      var t2, keyValueList, i, separator, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t2 = t1.get$length(map) * 2;
      keyValueList = A.List_List$filled(t2, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new A._JsonPrettyPrintMixin_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{\n");
      ++_this._JsonPrettyPrintMixin__indentLevel;
      for (separator = ""; i < t2; i += 2, separator = ",\n") {
        _this.writeString$1(separator);
        _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeString$1('"');
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('": ');
        t1 = i + 1;
        if (!(t1 < t2))
          return A.ioore(keyValueList, t1);
        _this.writeObject$1(keyValueList[t1]);
      }
      _this.writeString$1("\n");
      _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonPrettyPrintMixin_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      B.JSArray_methods.$indexSet(t1, t2.i++, key);
      B.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 22
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._convert$_sink;
      return t1 instanceof A.StringBuffer ? t1.toString$0(0) : null;
    },
    writeNumber$1(number) {
      this._convert$_sink.write$1(0, B.JSNumber_methods.toString$0(number));
    },
    writeString$1(string) {
      this._convert$_sink.write$1(0, string);
    },
    writeStringSlice$3(string, start, end) {
      this._convert$_sink.write$1(0, B.JSString_methods.substring$2(string, start, end));
    },
    writeCharCode$1(charCode) {
      this._convert$_sink.writeCharCode$1(charCode);
    }
  };
  A._JsonUtf8Stringifier.prototype = {
    get$_partialResult() {
      return null;
    },
    writeNumber$1(number) {
      this.writeAsciiString$1(B.JSNumber_methods.toString$0(number));
    },
    writeAsciiString$1(string) {
      var t1, i;
      for (t1 = string.length, i = 0; i < t1; ++i)
        this.writeByte$1(string.charCodeAt(i));
    },
    writeString$1(string) {
      this.writeStringSlice$3(string, 0, string.length);
    },
    writeStringSlice$3(string, start, end) {
      var t1, i, char, i0, nextChar, _this = this;
      for (t1 = string.length, i = start; i < end; ++i) {
        if (!(i < t1))
          return A.ioore(string, i);
        char = string.charCodeAt(i);
        if (char <= 127)
          _this.writeByte$1(char);
        else {
          if ((char & 63488) === 55296) {
            if (char < 56320 && i + 1 < end) {
              i0 = i + 1;
              if (!(i0 < t1))
                return A.ioore(string, i0);
              nextChar = string.charCodeAt(i0);
              if ((nextChar & 64512) === 56320) {
                _this.writeFourByteCharCode$1(65536 + ((char & 1023) << 10) + (nextChar & 1023));
                i = i0;
                continue;
              }
            }
            _this.writeMultiByteCharCode$1(65533);
            continue;
          }
          _this.writeMultiByteCharCode$1(char);
        }
      }
    },
    writeCharCode$1(charCode) {
      if (charCode <= 127) {
        this.writeByte$1(charCode);
        return;
      }
      this.writeMultiByteCharCode$1(charCode);
    },
    writeMultiByteCharCode$1(charCode) {
      var _this = this;
      if (charCode <= 2047) {
        _this.writeByte$1((charCode >>> 6 | 192) >>> 0);
        _this.writeByte$1(charCode & 63 | 128);
        return;
      }
      if (charCode <= 65535) {
        _this.writeByte$1((charCode >>> 12 | 224) >>> 0);
        _this.writeByte$1(charCode >>> 6 & 63 | 128);
        _this.writeByte$1(charCode & 63 | 128);
        return;
      }
      _this.writeFourByteCharCode$1(charCode);
    },
    writeFourByteCharCode$1(charCode) {
      var _this = this;
      _this.writeByte$1((charCode >>> 18 | 240) >>> 0);
      _this.writeByte$1(charCode >>> 12 & 63 | 128);
      _this.writeByte$1(charCode >>> 6 & 63 | 128);
      _this.writeByte$1(charCode & 63 | 128);
    },
    writeByte$1(byte) {
      var t0, _this = this,
        t1 = _this.index,
        t2 = _this.buffer;
      if (t1 === t2.length) {
        _this.addChunk.call$3(t2, 0, t1);
        t1 = _this.buffer = new Uint8Array(_this.bufferSize);
        t2 = _this.index = 0;
      } else {
        t0 = t2;
        t2 = t1;
        t1 = t0;
      }
      _this.index = t2 + 1;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      if (!(t2 < t1.length))
        return A.ioore(t1, t2);
      t1[t2] = byte;
    }
  };
  A._JsonUtf8StringifierPretty.prototype = {
    writeIndentation$1(count) {
      var char, t1, end, t2, i, _this = this,
        indent = _this.indent,
        indentLength = indent.length;
      if (indentLength === 1) {
        if (0 >= indentLength)
          return A.ioore(indent, 0);
        char = indent[0];
        for (; count > 0;) {
          _this.writeByte$1(char);
          --count;
        }
        return;
      }
      for (; count > 0;) {
        --count;
        t1 = _this.index;
        end = t1 + indentLength;
        t2 = _this.buffer;
        if (end <= t2.length) {
          B.NativeUint8List_methods.setRange$3(t2, t1, end, indent);
          _this.index = end;
        } else
          for (i = 0; i < indentLength; ++i)
            _this.writeByte$1(indent[i]);
      }
    }
  };
  A.Latin1Codec.prototype = {
    get$name(_) {
      return "iso-8859-1";
    },
    encode$1(source) {
      return B.Latin1Encoder_255.convert$1(source);
    },
    get$decoder() {
      return B.Latin1Decoder_false_255;
    }
  };
  A.Latin1Encoder.prototype = {};
  A.Latin1Decoder.prototype = {
    startChunkedConversion$1(sink) {
      var stringSink;
      type$.Sink_String._as(sink);
      stringSink = type$.StringConversionSink._is(sink) ? sink : new A._StringAdapterSink(sink);
      if (!this._allowInvalid)
        return new A._Latin1DecoderSink(stringSink);
      return new A._Latin1AllowInvalidDecoderSink(stringSink);
    }
  };
  A._Latin1DecoderSink.prototype = {
    close$0(_) {
      this._convert$_sink.close$0(0);
      this._convert$_sink = null;
    },
    add$1(_, source) {
      type$.List_int._as(source);
      this.addSlice$4(source, 0, J.get$length$asx(source), false);
    },
    _addSliceToSink$4(source, start, end, isLast) {
      var t1;
      type$.List_int._as(source);
      t1 = this._convert$_sink;
      t1.toString;
      t1.add$1(0, A.String_String$fromCharCodes(source, start, end));
      if (isLast) {
        this._convert$_sink.close$0(0);
        this._convert$_sink = null;
      }
    },
    addSlice$4(source, start, end, isLast) {
      type$.List_int._as(source);
      A.RangeError_checkValidRange(start, end, J.get$length$asx(source));
      if (start === end)
        return;
      if (!type$.Uint8List._is(source))
        A._Latin1DecoderSink__checkValidLatin1(source, start, end);
      this._addSliceToSink$4(source, start, end, isLast);
    }
  };
  A._Latin1AllowInvalidDecoderSink.prototype = {
    addSlice$4(source, start, end, isLast) {
      var t2, i, char, t3, _this = this,
        t1 = type$.List_int;
      t1._as(source);
      t2 = J.getInterceptor$asx(source);
      A.RangeError_checkValidRange(start, end, t2.get$length(source));
      for (i = start; i < end; ++i) {
        char = t2.$index(source, i);
        if (char > 255 || char < 0) {
          if (i > start) {
            t3 = _this._convert$_sink;
            t3.toString;
            t3.add$1(0, A.String_String$fromCharCodes(source, start, i));
          }
          t1._as(B.List_65533);
          t3 = _this._convert$_sink;
          t3.toString;
          t3.add$1(0, A.String_String$fromCharCodes(B.List_65533, 0, 1));
          start = i + 1;
        }
      }
      if (start < end)
        _this._addSliceToSink$4(source, start, end, isLast);
      if (isLast) {
        _this._convert$_sink.close$0(0);
        _this._convert$_sink = null;
      }
    }
  };
  A.StringConversionSink.prototype = {
    add$1(_, str) {
      A._asString(str);
      this.addSlice$4(str, 0, str.length, false);
    },
    asUtf8Sink$1(allowMalformed) {
      return new A._Utf8ConversionSink(new A._Utf8Decoder(allowMalformed), this, new A.StringBuffer(""));
    },
    asStringSink$0() {
      return new A._StringConversionSinkAsStringSinkAdapter(new A.StringBuffer(""), this);
    },
    $isSink: 1
  };
  A._ClosableStringSink.prototype = {
    close$0(_) {
      this._convert$_callback.call$0();
    },
    writeCharCode$1(charCode) {
      var t1 = this._convert$_sink,
        t2 = A.Primitives_stringFromCharCode(charCode);
      t1._contents += t2;
    },
    write$1(_, o) {
      this._convert$_sink._contents += o;
    },
    $isStringSink: 1
  };
  A._StringConversionSinkAsStringSinkAdapter.prototype = {
    close$0(_) {
      if (this._buffer._contents.length !== 0)
        this._flush$0();
      this._chunkedSink.close$0(0);
    },
    writeCharCode$1(charCode) {
      var t1 = this._buffer,
        t2 = A.Primitives_stringFromCharCode(charCode);
      if ((t1._contents += t2).length > 16)
        this._flush$0();
    },
    write$1(_, o) {
      if (this._buffer._contents.length !== 0)
        this._flush$0();
      this._chunkedSink.add$1(0, o);
    },
    _flush$0() {
      var t1 = this._buffer,
        t2 = t1._contents;
      t1._contents = "";
      this._chunkedSink.add$1(0, t2.charCodeAt(0) == 0 ? t2 : t2);
    },
    $isStringSink: 1
  };
  A._StringSinkConversionSink.prototype = {
    close$0(_) {
    },
    addSlice$4(str, start, end, isLast) {
      var t1, t2, i, t3;
      if (start !== 0 || end !== str.length)
        for (t1 = this._stringSink, t2 = str.length, i = start; i < end; ++i) {
          if (!(i < t2))
            return A.ioore(str, i);
          t3 = A.Primitives_stringFromCharCode(str.charCodeAt(i));
          t1._contents += t3;
        }
      else
        this._stringSink._contents += str;
      if (isLast)
        this.close$0(0);
    },
    add$1(_, str) {
      this._stringSink._contents += A._asString(str);
    },
    asUtf8Sink$1(allowMalformed) {
      return new A._Utf8StringSinkAdapter(new A._Utf8Decoder(allowMalformed), this, this._stringSink);
    },
    asStringSink$0() {
      return new A._ClosableStringSink(this.get$close(this), this._stringSink);
    }
  };
  A._StringAdapterSink.prototype = {
    add$1(_, str) {
      this._convert$_sink.add$1(0, A._asString(str));
    },
    addSlice$4(str, start, end, isLast) {
      var t1 = start === 0 && end === str.length,
        t2 = this._convert$_sink;
      if (t1)
        t2.add$1(0, str);
      else
        t2.add$1(0, B.JSString_methods.substring$2(str, start, end));
      if (isLast)
        t2.close$0(0);
    },
    close$0(_) {
      this._convert$_sink.close$0(0);
    }
  };
  A._Utf8StringSinkAdapter.prototype = {
    close$0(_) {
      this._decoder.flush$1(0, this._stringSink);
      this._convert$_sink.close$0(0);
    },
    add$1(_, chunk) {
      type$.List_int._as(chunk);
      this.addSlice$4(chunk, 0, J.get$length$asx(chunk), false);
    },
    addSlice$4(codeUnits, startIndex, endIndex, isLast) {
      var t1 = this._stringSink,
        t2 = this._decoder._convertGeneral$4(type$.List_int._as(codeUnits), startIndex, endIndex, false);
      t1._contents += t2;
      if (isLast)
        this.close$0(0);
    }
  };
  A._Utf8ConversionSink.prototype = {
    close$0(_) {
      var t2, t3, accumulated,
        t1 = this._buffer;
      this._decoder.flush$1(0, t1);
      t2 = t1._contents;
      t3 = this._chunkedSink;
      if (t2.length !== 0) {
        accumulated = t2.charCodeAt(0) == 0 ? t2 : t2;
        t1._contents = "";
        t3.addSlice$4(accumulated, 0, accumulated.length, true);
      } else
        t3.close$0(0);
    },
    add$1(_, chunk) {
      type$.List_int._as(chunk);
      this.addSlice$4(chunk, 0, J.get$length$asx(chunk), false);
    },
    addSlice$4(chunk, startIndex, endIndex, isLast) {
      var accumulated, _this = this,
        t1 = _this._buffer,
        t2 = _this._decoder._convertGeneral$4(type$.List_int._as(chunk), startIndex, endIndex, false);
      t2 = t1._contents += t2;
      if (t2.length !== 0) {
        accumulated = t2.charCodeAt(0) == 0 ? t2 : t2;
        _this._chunkedSink.addSlice$4(accumulated, 0, accumulated.length, isLast);
        t1._contents = "";
        return;
      }
      if (isLast)
        _this.close$0(0);
    }
  };
  A.Utf8Codec.prototype = {
    get$name(_) {
      return "utf-8";
    },
    decode$2$allowMalformed(_, codeUnits, allowMalformed) {
      type$.List_int._as(codeUnits);
      return (allowMalformed === true ? B.Utf8Decoder_true : B.Utf8Decoder_false).convert$1(codeUnits);
    },
    decode$1(_, codeUnits) {
      return this.decode$2$allowMalformed(0, codeUnits, null);
    },
    encode$1(string) {
      return B.C_Utf8Encoder.convert$1(string);
    },
    get$decoder() {
      return B.Utf8Decoder_false;
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var stringLength, end, t1, encoder, t2;
      A._asString(string);
      stringLength = string.length;
      end = A.RangeError_checkValidRange(0, null, stringLength);
      if (end === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array(end * 3);
      encoder = new A._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end) {
        t2 = end - 1;
        if (!(t2 >= 0 && t2 < stringLength))
          return A.ioore(string, t2);
        encoder._writeReplacementCharacter$0();
      }
      return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    },
    startChunkedConversion$1(sink) {
      var t1;
      type$.Sink_List_int._as(sink);
      t1 = sink instanceof A.ByteConversionSink ? sink : new A._ByteAdapterSink(sink);
      return new A._Utf8EncoderSink(t1, new Uint8Array(1024));
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var t4, _this = this,
        t1 = _this._buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1;
      t1.$flags & 2 && A.throwUnsupportedOperation(t1);
      t4 = t1.length;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      if (!(t3 < t4))
        return A.ioore(t1, t3);
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, t4, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t1.$flags & 2 && A.throwUnsupportedOperation(t1);
        t4 = t1.length;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        if (!(t2 < t4))
          return A.ioore(t1, t2);
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        if (!(t3 < t4))
          return A.ioore(t1, t3);
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, t3, t4, stringIndex, codeUnit, t5, t6, _this = this;
      if (start !== end) {
        t1 = end - 1;
        if (!(t1 >= 0 && t1 < str.length))
          return A.ioore(str, t1);
        t1 = (str.charCodeAt(t1) & 64512) === 55296;
      } else
        t1 = false;
      if (t1)
        --end;
      for (t1 = _this._buffer, t2 = t1.$flags | 0, t3 = t1.length, t4 = str.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        if (!(stringIndex < t4))
          return A.ioore(str, stringIndex);
        codeUnit = str.charCodeAt(stringIndex);
        if (codeUnit <= 127) {
          t5 = _this._bufferIndex;
          if (t5 >= t3)
            break;
          _this._bufferIndex = t5 + 1;
          t2 & 2 && A.throwUnsupportedOperation(t1);
          t1[t5] = codeUnit;
        } else {
          t5 = codeUnit & 64512;
          if (t5 === 55296) {
            if (_this._bufferIndex + 4 > t3)
              break;
            t5 = stringIndex + 1;
            if (!(t5 < t4))
              return A.ioore(str, t5);
            if (_this._writeSurrogate$2(codeUnit, str.charCodeAt(t5)))
              stringIndex = t5;
          } else if (t5 === 56320) {
            if (_this._bufferIndex + 3 > t3)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t5 = _this._bufferIndex;
            t6 = t5 + 1;
            if (t6 >= t3)
              break;
            _this._bufferIndex = t6;
            t2 & 2 && A.throwUnsupportedOperation(t1);
            if (!(t5 < t3))
              return A.ioore(t1, t5);
            t1[t5] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t6 + 1;
            t1[t6] = codeUnit & 63 | 128;
          } else {
            t5 = _this._bufferIndex;
            if (t5 + 2 >= t3)
              break;
            t6 = _this._bufferIndex = t5 + 1;
            t2 & 2 && A.throwUnsupportedOperation(t1);
            if (!(t5 < t3))
              return A.ioore(t1, t5);
            t1[t5] = codeUnit >>> 12 | 224;
            t5 = _this._bufferIndex = t6 + 1;
            if (!(t6 < t3))
              return A.ioore(t1, t6);
            t1[t6] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t5 + 1;
            if (!(t5 < t3))
              return A.ioore(t1, t5);
            t1[t5] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A._Utf8EncoderSink.prototype = {
    close$0(_) {
      if (this._carry !== 0) {
        this.addSlice$4("", 0, 0, true);
        return;
      }
      this._convert$_sink.close$0(0);
    },
    addSlice$4(str, start, end, isLast) {
      var t1, t2, nextCodeUnit, t3, t4, t5, isLastSlice, t6, _this = this;
      _this._bufferIndex = 0;
      t1 = start === end;
      if (t1 && !isLast)
        return;
      t2 = _this._carry;
      if (t2 !== 0) {
        if (!t1) {
          if (!(start < str.length))
            return A.ioore(str, start);
          nextCodeUnit = str.charCodeAt(start);
        } else
          nextCodeUnit = 0;
        if (_this._writeSurrogate$2(t2, nextCodeUnit))
          ++start;
        _this._carry = 0;
      }
      t1 = _this._convert$_sink;
      t2 = _this._buffer;
      t3 = end - 1;
      t4 = str.length;
      t5 = t2.length - 3;
      do {
        start = _this._fillBuffer$3(str, start, end);
        isLastSlice = isLast && start === end;
        if (start === t3) {
          if (!(start < t4))
            return A.ioore(str, start);
          t6 = (str.charCodeAt(start) & 64512) === 55296;
        } else
          t6 = false;
        if (t6) {
          if (isLast && _this._bufferIndex < t5)
            _this._writeReplacementCharacter$0();
          else {
            if (!(start < t4))
              return A.ioore(str, start);
            _this._carry = str.charCodeAt(start);
          }
          ++start;
        }
        t1.addSlice$4(t2, 0, _this._bufferIndex, isLastSlice);
        _this._bufferIndex = 0;
      } while (start < end);
      if (isLast)
        _this.close$0(0);
    },
    $isSink: 1
  };
  A.Utf8Decoder.prototype = {
    convert$1(codeUnits) {
      return new A._Utf8Decoder(this._allowMalformed)._convertGeneral$4(type$.List_int._as(codeUnits), 0, null, true);
    },
    startChunkedConversion$1(sink) {
      var stringSink;
      type$.Sink_String._as(sink);
      stringSink = type$.StringConversionSink._is(sink) ? sink : new A._StringAdapterSink(sink);
      return stringSink.asUtf8Sink$1(this._allowMalformed);
    },
    bind$1(stream) {
      return this.super$Converter$bind(type$.Stream_List_int._as(stream));
    }
  };
  A._Utf8Decoder.prototype = {
    _convertGeneral$4(codeUnits, start, maybeEnd, single) {
      var end, casted, bytes, errorOffset, t1, result, message, _this = this;
      type$.List_int._as(codeUnits);
      end = A.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits));
      if (start === end)
        return "";
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        bytes = casted;
        errorOffset = 0;
      } else {
        bytes = A._Utf8Decoder__makeNativeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      if (single && end - start >= 15) {
        t1 = _this.allowMalformed;
        result = A._Utf8Decoder__convertInterceptedUint8List(t1, bytes, start, end);
        if (result != null) {
          if (!t1)
            return result;
          if (result.indexOf("\ufffd") < 0)
            return result;
        }
      }
      result = _this._decodeRecursive$4(bytes, start, end, single);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = A._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw A.wrapException(A.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _decodeRecursive$4(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = B.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._decodeRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._decodeRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    flush$1(_, sink) {
      var t1,
        state = this._convert$_state;
      this._convert$_state = 0;
      if (state <= 32)
        return;
      if (this.allowMalformed) {
        t1 = A.Primitives_stringFromCharCode(65533);
        sink._contents += t1;
      } else
        throw A.wrapException(A.FormatException$(A._Utf8Decoder_errorDescription(77), null, null));
    },
    decodeGeneral$4(bytes, start, end, single) {
      var byte, t2, type, t3, i0, markEnd, i1, m, _this = this,
        _s256_ = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE",
        _s144_ = " \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA",
        _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new A.StringBuffer(""),
        i = start + 1,
        t1 = bytes.length;
      if (!(start >= 0 && start < t1))
        return A.ioore(bytes, start);
      byte = bytes[start];
      $label0$0:
        for (t2 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            if (!(byte >= 0 && byte < 256))
              return A.ioore(_s256_, byte);
            type = _s256_.charCodeAt(byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            t3 = state + type;
            if (!(t3 >= 0 && t3 < 144))
              return A.ioore(_s144_, t3);
            state = _s144_.charCodeAt(t3);
            if (state === 0) {
              t3 = A.Primitives_stringFromCharCode(char);
              buffer._contents += t3;
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t2)
                switch (state) {
                  case 69:
                  case 67:
                    t3 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t3;
                    break;
                  case 65:
                    t3 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t3;
                    --i;
                    break;
                  default:
                    t3 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents = (buffer._contents += t3) + A.Primitives_stringFromCharCode(_65533);
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            if (!(i >= 0 && i < t1))
              return A.ioore(bytes, i);
            byte = bytes[i];
          }
          i0 = i + 1;
          if (!(i >= 0 && i < t1))
            return A.ioore(bytes, i);
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              if (!(i0 >= 0 && i0 < t1))
                return A.ioore(bytes, i0);
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m) {
                if (!(m < t1))
                  return A.ioore(bytes, m);
                t3 = A.Primitives_stringFromCharCode(bytes[m]);
                buffer._contents += t3;
              }
            else {
              t3 = A.String_String$fromCharCodes(bytes, i, markEnd);
              buffer._contents += t3;
            }
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t2) {
          t1 = A.Primitives_stringFromCharCode(_65533);
          buffer._contents += t1;
        } else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin.prototype = {};
  A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink.prototype = {};
  A.DateTime.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._core$_value === other._core$_value && this._microsecond === other._microsecond && this.isUtc === other.isUtc;
    },
    get$hashCode(_) {
      return A.Object_hash(this._core$_value, this._microsecond, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    compareTo$1(_, other) {
      var r;
      type$.DateTime._as(other);
      r = B.JSInt_methods.compareTo$1(this._core$_value, other._core$_value);
      if (r !== 0)
        return r;
      return B.JSInt_methods.compareTo$1(this._microsecond, other._microsecond);
    },
    toUtc$0() {
      var _this = this;
      if (_this.isUtc)
        return _this;
      return new A.DateTime(_this._core$_value, _this._microsecond, true);
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this)),
        t1 = _this._microsecond,
        us = t1 === 0 ? "" : A.DateTime__threeDigits(t1);
      t1 = y + "-" + m;
      if (_this.isUtc)
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us + "Z";
      else
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us;
    },
    $isComparable: 1
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && this._duration === other._duration;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._duration, type$.Duration._as(other)._duration);
    },
    toString$0(_) {
      var sign, minutes, minutesPadding, seconds, secondsPadding,
        microseconds = this._duration,
        hours = B.JSInt_methods._tdivFast$1(microseconds, 3600000000),
        microseconds0 = microseconds % 3600000000;
      if (microseconds < 0) {
        hours = 0 - hours;
        microseconds = 0 - microseconds0;
        sign = "-";
      } else {
        microseconds = microseconds0;
        sign = "";
      }
      minutes = B.JSInt_methods._tdivFast$1(microseconds, 60000000);
      microseconds %= 60000000;
      minutesPadding = minutes < 10 ? "0" : "";
      seconds = B.JSInt_methods._tdivFast$1(microseconds, 1000000);
      secondsPadding = seconds < 10 ? "0" : "";
      return sign + hours + ":" + minutesPadding + minutes + ":" + secondsPadding + seconds + "." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(microseconds % 1000000), 6, "0");
    },
    $isComparable: 1
  };
  A._Enum.prototype = {
    toString$0(_) {
      return this._enumToString$0();
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.Primitives_extractStackTrace(this);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue());
    },
    get$invalidValue() {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue() {
      return A._asNumQ(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue() {
      return A._asInt(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (A._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      return "UnimplementedError: " + this.message;
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineEnd, lineNum, lineStart, previousCharWasCR, i, char, prefix, postfix, end, start,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineEnd = source.length, lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          if (!(i < lineEnd))
            return A.ioore(source, i);
          char = source.charCodeAt(i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        for (i = offset; i < lineEnd; ++i) {
          if (!(i >= 0))
            return A.ioore(source, i);
          char = source.charCodeAt(i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        prefix = "";
        if (lineEnd - lineStart > 78) {
          postfix = "...";
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
            }
            prefix = "...";
          }
        } else {
          end = lineEnd;
          start = lineStart;
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    },
    $isException: 1,
    get$message(receiver) {
      return this.message;
    },
    get$source(receiver) {
      return this.source;
    },
    get$offset(receiver) {
      return this.offset;
    }
  };
  A.Iterable.prototype = {
    cast$1$0(_, $R) {
      return A.CastIterable_CastIterable(this, A.instanceType(this)._eval$1("Iterable.E"), $R);
    },
    map$1$1(_, toElement, $T) {
      var t1 = A.instanceType(this);
      return A.MappedIterable_MappedIterable(this, t1._bind$1($T)._eval$1("1(Iterable.E)")._as(toElement), t1._eval$1("Iterable.E"), $T);
    },
    where$1(_, test) {
      var t1 = A.instanceType(this);
      return new A.WhereIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("WhereIterable<Iterable.E>"));
    },
    contains$1(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq$(t1.get$current(t1), element))
          return true;
      return false;
    },
    join$1(_, separator) {
      var first, t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      first = J.toString$0$(iterator.get$current(iterator));
      if (!iterator.moveNext$0())
        return first;
      if (separator.length === 0) {
        t1 = first;
        do
          t1 += J.toString$0$(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        t1 = first;
        do
          t1 = t1 + separator + J.toString$0$(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    join$0(_) {
      return this.join$1(0, "");
    },
    toList$1$growable(_, growable) {
      var t1 = A.instanceType(this)._eval$1("Iterable.E");
      if (growable)
        t1 = A.List_List$_of(this, t1);
      else {
        t1 = A.List_List$_of(this, t1);
        t1.$flags = 1;
        t1 = t1;
      }
      return t1;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    take$1(_, count) {
      return A.TakeIterable_TakeIterable(this, count, A.instanceType(this)._eval$1("Iterable.E"));
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A.instanceType(this)._eval$1("Iterable.E"));
    },
    skipWhile$1(_, test) {
      var t1 = A.instanceType(this);
      return new A.SkipWhileIterable(this, t1._eval$1("bool(Iterable.E)")._as(test), t1._eval$1("SkipWhileIterable<Iterable.E>"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current(it);
    },
    get$last(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      do
        result = it.get$current(it);
      while (it.moveNext$0());
      return result;
    },
    get$single(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      result = it.get$current(it);
      if (it.moveNext$0())
        throw A.wrapException(A.IterableElementError_tooMany());
      return result;
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current(iterator);
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    toString$0(_) {
      return A.Iterable_iterableToShortString(this, "(", ")");
    }
  };
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, 0);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    get$runtimeType(_) {
      return A.getRuntimeTypeOfDartObject(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return this._stackTrace;
    },
    $isStackTrace: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    write$1(_, obj) {
      var t1 = A.S(obj);
      this._contents += t1;
    },
    writeCharCode$1(charCode) {
      var t1 = A.Primitives_stringFromCharCode(charCode);
      this._contents += t1;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isStringSink: 1
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 62
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 63
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 64
  };
  A._Uri.prototype = {
    get$_text() {
      var sb, t1, t2, _this = this,
        value = _this.___Uri__text_FI;
      if (value === $) {
        sb = new A.StringBuffer("");
        t1 = _this.scheme;
        if (t1.length !== 0) {
          t2 = "" + t1;
          sb._contents = t2;
          t2 = sb._contents = t2 + ":";
        } else
          t2 = "";
        if (_this._host != null || t1 === "file") {
          sb._contents = t2 + "//";
          _this._writeAuthority$1(sb);
        }
        t1 = sb._contents += _this.path;
        t2 = _this._query;
        if (t2 != null) {
          t1 += "?";
          sb._contents = t1;
          t1 += t2;
          sb._contents = t1;
        }
        t2 = _this._fragment;
        if (t2 != null) {
          t1 += "#";
          sb._contents = t1;
          t1 = sb._contents = t1 + t2;
        }
        _this.___Uri__text_FI !== $ && A.throwLateFieldADI("_text");
        value = _this.___Uri__text_FI = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$pathSegments() {
      var pathToSplit, t1, result, _this = this,
        value = _this.___Uri_pathSegments_FI;
      if (value === $) {
        pathToSplit = _this.path;
        t1 = pathToSplit.length;
        if (t1 !== 0) {
          if (0 >= t1)
            return A.ioore(pathToSplit, 0);
          t1 = pathToSplit.charCodeAt(0) === 47;
        } else
          t1 = false;
        if (t1)
          pathToSplit = B.JSString_methods.substring$1(pathToSplit, 1);
        result = pathToSplit.length === 0 ? B.List_empty0 : A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(pathToSplit.split("/"), type$.JSArray_String), type$.dynamic_Function_String._as(A.core_Uri_decodeComponent$closure()), type$.MappedListIterable_String_dynamic), type$.String);
        _this.___Uri_pathSegments_FI !== $ && A.throwLateFieldADI("pathSegments");
        value = _this.___Uri_pathSegments_FI = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && A.throwLateFieldADI("hashCode");
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$queryParametersAll() {
      var t1, result, _this = this,
        value = _this.___Uri_queryParametersAll_FI;
      if (value === $) {
        t1 = _this._query;
        result = A._Uri__computeQueryParametersAll(t1 == null ? "" : t1);
        _this.___Uri_queryParametersAll_FI !== $ && A.throwLateFieldADI("queryParametersAll");
        _this.___Uri_queryParametersAll_FI = result;
        value = result;
      }
      return value;
    },
    get$authority() {
      var sb, t1;
      if (this._host == null)
        return "";
      sb = new A.StringBuffer("");
      this._writeAuthority$1(sb);
      t1 = sb._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host(_) {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "["))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port(_) {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query(_) {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    isScheme$1(scheme) {
      var thisScheme = this.scheme;
      if (scheme.length !== thisScheme.length)
        return false;
      return A._caseInsensitiveCompareStart(scheme, thisScheme, 0) >= 0;
    },
    replace$3$path$query$scheme(_, path, query, scheme) {
      var schemeChanged, isFile, userInfo, port, host, hasAuthority, t1, currentPath, _this = this,
        scheme0 = _this.scheme;
      if (scheme != null) {
        scheme = A._Uri__makeScheme(scheme, 0, scheme.length);
        schemeChanged = scheme !== scheme0;
      } else {
        scheme = scheme0;
        schemeChanged = false;
      }
      isFile = scheme === "file";
      userInfo = _this._userInfo;
      port = _this._port;
      if (schemeChanged)
        port = A._Uri__makePort(port, scheme);
      host = _this._host;
      if (!(host != null))
        host = userInfo.length !== 0 || port != null || isFile ? "" : null;
      hasAuthority = host != null;
      if (path != null) {
        t1 = path.length;
        path = A._Uri__makePath(path, 0, t1, null, scheme, hasAuthority);
      } else {
        currentPath = _this.path;
        if (!isFile)
          t1 = hasAuthority && currentPath.length !== 0;
        else
          t1 = true;
        if (t1 && !B.JSString_methods.startsWith$1(currentPath, "/"))
          currentPath = "/" + currentPath;
        path = currentPath;
      }
      if (query != null) {
        t1 = query.length;
        query = A._Uri__makeQuery(query, 0, t1, null);
      } else
        query = _this._query;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, _this._fragment);
    },
    replace$1$scheme(_, scheme) {
      return this.replace$3$path$query$scheme(0, null, null, scheme);
    },
    replace$1$path(_, path) {
      return this.replace$3$path$query$scheme(0, path, null, null);
    },
    replace$2$path$query(_, path, query) {
      return this.replace$3$path$query$scheme(0, path, query, null);
    },
    normalizePath$0() {
      var _this = this,
        t1 = _this.path,
        path = A._Uri__normalizePath(t1, _this.scheme, _this._host != null);
      if (path === t1)
        return _this;
      return _this.replace$1$path(0, path);
    },
    get$isAbsolute() {
      if (this.scheme !== "") {
        var t1 = this._fragment;
        t1 = (t1 == null ? "" : t1) === "";
      } else
        t1 = false;
      return t1;
    },
    _mergePaths$2(base, reference) {
      var backCount, refStart, baseEnd, t1, newEnd, delta, t2, t3, t4;
      for (backCount = 0, refStart = 0; B.JSString_methods.startsWith$2(reference, "../", refStart);) {
        refStart += 3;
        ++backCount;
      }
      baseEnd = B.JSString_methods.lastIndexOf$1(base, "/");
      t1 = base.length;
      while (true) {
        if (!(baseEnd > 0 && backCount > 0))
          break;
        newEnd = B.JSString_methods.lastIndexOf$2(base, "/", baseEnd - 1);
        if (newEnd < 0)
          break;
        delta = baseEnd - newEnd;
        t2 = delta !== 2;
        t3 = false;
        if (!t2 || delta === 3) {
          t4 = newEnd + 1;
          if (!(t4 < t1))
            return A.ioore(base, t4);
          if (base.charCodeAt(t4) === 46)
            if (t2) {
              t2 = newEnd + 2;
              if (!(t2 < t1))
                return A.ioore(base, t2);
              t2 = base.charCodeAt(t2) === 46;
            } else
              t2 = true;
          else
            t2 = t3;
        } else
          t2 = t3;
        if (t2)
          break;
        --backCount;
        baseEnd = newEnd;
      }
      return B.JSString_methods.replaceRange$3(base, baseEnd + 1, null, B.JSString_methods.substring$1(reference, refStart - 3 * backCount));
    },
    resolve$1(reference) {
      return this.resolveUri$1(A.Uri_parse(reference));
    },
    resolveUri$1(reference) {
      var targetScheme, t1, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, packageNameEnd, packageName, mergedPath, fragment, _this = this;
      if (reference.get$scheme().length !== 0)
        return reference;
      else {
        targetScheme = _this.scheme;
        if (reference.get$hasAuthority()) {
          t1 = reference.replace$1$scheme(0, targetScheme);
          return t1;
        } else {
          targetUserInfo = _this._userInfo;
          targetHost = _this._host;
          targetPort = _this._port;
          targetPath = _this.path;
          if (reference.get$hasEmptyPath())
            targetQuery = reference.get$hasQuery() ? reference.get$query(reference) : _this._query;
          else {
            packageNameEnd = A._Uri__packageNameEnd(_this, targetPath);
            if (packageNameEnd > 0) {
              packageName = B.JSString_methods.substring$2(targetPath, 0, packageNameEnd);
              targetPath = reference.get$hasAbsolutePath() ? packageName + A._Uri__removeDotSegments(reference.get$path(reference)) : packageName + A._Uri__removeDotSegments(_this._mergePaths$2(B.JSString_methods.substring$1(targetPath, packageName.length), reference.get$path(reference)));
            } else if (reference.get$hasAbsolutePath())
              targetPath = A._Uri__removeDotSegments(reference.get$path(reference));
            else if (targetPath.length === 0)
              if (targetHost == null)
                targetPath = targetScheme.length === 0 ? reference.get$path(reference) : A._Uri__removeDotSegments(reference.get$path(reference));
              else
                targetPath = A._Uri__removeDotSegments("/" + reference.get$path(reference));
            else {
              mergedPath = _this._mergePaths$2(targetPath, reference.get$path(reference));
              t1 = targetScheme.length === 0;
              if (!t1 || targetHost != null || B.JSString_methods.startsWith$1(targetPath, "/"))
                targetPath = A._Uri__removeDotSegments(mergedPath);
              else
                targetPath = A._Uri__normalizeRelativePath(mergedPath, !t1 || targetHost != null);
            }
            targetQuery = reference.get$hasQuery() ? reference.get$query(reference) : null;
          }
        }
      }
      fragment = reference.get$hasFragment() ? reference.get$fragment() : null;
      return A._Uri$_internal(targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, fragment);
    },
    get$hasScheme() {
      return this.scheme.length !== 0;
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    get$hasEmptyPath() {
      return this.path.length === 0;
    },
    get$hasAbsolutePath() {
      return B.JSString_methods.startsWith$1(this.path, "/");
    },
    toFilePath$0() {
      var pathSegments, _this = this,
        t1 = _this.scheme;
      if (t1 !== "" && t1 !== "file")
        throw A.wrapException(A.UnsupportedError$("Cannot extract a file path from a " + t1 + " URI"));
      t1 = _this._query;
      if ((t1 == null ? "" : t1) !== "")
        throw A.wrapException(A.UnsupportedError$(string$.Cannotfq));
      t1 = _this._fragment;
      if ((t1 == null ? "" : t1) !== "")
        throw A.wrapException(A.UnsupportedError$(string$.Cannotff));
      if (_this._host != null && _this.get$host(0) !== "")
        A.throwExpression(A.UnsupportedError$(string$.Cannotn));
      pathSegments = _this.get$pathSegments();
      A._Uri__checkNonWindowsPathReservedCharacters(pathSegments, false);
      t1 = A.StringBuffer__writeAll(B.JSString_methods.startsWith$1(_this.path, "/") ? "" + "/" : "", pathSegments, "/");
      t1 = t1.charCodeAt(0) == 0 ? t1 : t1;
      return t1;
    },
    _writeAuthority$1(ss) {
      var t1 = this._userInfo;
      if (t1.length !== 0)
        ss._contents = (ss._contents += t1) + "@";
      t1 = this._host;
      if (t1 != null)
        ss._contents += t1;
      t1 = this._port;
      if (t1 != null)
        ss._contents = (ss._contents += ":") + A.S(t1);
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      t1 = false;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host(0) === other.get$host(other))
                if (_this.get$port(0) === other.get$port(other))
                  if (_this.path === other.get$path(other)) {
                    t2 = _this._query;
                    t3 = t2 == null;
                    if (!t3 === other.get$hasQuery()) {
                      if (t3)
                        t2 = "";
                      if (t2 === other.get$query(other)) {
                        t2 = _this._fragment;
                        t3 = t2 == null;
                        if (!t3 === other.get$hasFragment()) {
                          t1 = t3 ? "" : t2;
                          t1 = t1 === other.get$fragment();
                        }
                      }
                    }
                  }
      return t1;
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path(receiver) {
      return this.path;
    }
  };
  A._Uri__makePath_closure.prototype = {
    call$1(s) {
      return A._Uri__uriEncode(64, A._asString(s), B.C_Utf8Codec, false);
    },
    $signature: 23
  };
  A._Uri__splitQueryStringAll_parsePair.prototype = {
    call$3(start, equalsIndex, end) {
      var t1, t2, key, value;
      if (start === end)
        return;
      t1 = this.query;
      t2 = this.encoding;
      if (equalsIndex < 0) {
        key = A._Uri__uriDecode(t1, start, end, t2, true);
        value = "";
      } else {
        key = A._Uri__uriDecode(t1, start, equalsIndex, t2, true);
        value = A._Uri__uriDecode(t1, equalsIndex + 1, end, t2, true);
      }
      J.add$1$ax(this.result.putIfAbsent$2(0, key, A.core__Uri__createList$closure()), value);
    },
    $signature: 66
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._separatorIndices;
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        t2 = _this._text;
        t1 = t1[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t2, "?", t1);
        end = t2.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t2, queryIndex + 1, end, 256, false, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t2, t1, end, 128, false, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t2,
        t1 = this._separatorIndices;
      if (0 >= t1.length)
        return A.ioore(t1, 0);
      t2 = this._text;
      return t1[0] === -1 ? "data:" + t2 : t2;
    }
  };
  A._SimpleUri.prototype = {
    get$hasScheme() {
      return this._schemeEnd > 0;
    },
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasPort() {
      return this._hostStart > 0 && this._portStart + 1 < this._pathStart;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    get$hasAbsolutePath() {
      return B.JSString_methods.startsWith$2(this._uri, "/", this._pathStart);
    },
    get$hasEmptyPath() {
      return this._pathStart === this._queryStart;
    },
    get$isAbsolute() {
      return this._schemeEnd > 0 && this._fragmentStart >= this._uri.length;
    },
    isScheme$1(scheme) {
      var t1 = scheme.length;
      if (t1 === 0)
        return this._schemeEnd < 0;
      if (t1 !== this._schemeEnd)
        return false;
      return A._caseInsensitiveCompareStart(scheme, this._uri, 0) >= 0;
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$authority() {
      var _this = this;
      return _this._hostStart > 0 ? B.JSString_methods.substring$2(_this._uri, _this._schemeEnd + 3, _this._pathStart) : "";
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host(_) {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port(_) {
      var t1, _this = this;
      if (_this.get$hasPort())
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path(_) {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query(_) {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, t2, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (B.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return B.List_empty0;
      parts = A._setArrayType([], type$.JSArray_String);
      for (t2 = t1.length, i = start; i < end; ++i) {
        if (!(i >= 0 && i < t2))
          return A.ioore(t1, i);
        if (t1.charCodeAt(i) === 47) {
          B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      }
      B.JSArray_methods.add$1(parts, B.JSString_methods.substring$2(t1, start, end));
      return A.List_List$unmodifiable(parts, type$.String);
    },
    get$queryParametersAll() {
      if (this._queryStart >= this._fragmentStart)
        return B.Map_empty;
      var queryParameterLists = A._Uri__splitQueryStringAll(this.get$query(0));
      queryParameterLists.updateAll$1(queryParameterLists, A.core___toUnmodifiableStringList$closure());
      return A.ConstantMap_ConstantMap$from(queryParameterLists, type$.String, type$.List_String);
    },
    _isPort$1(port) {
      var portDigitStart = this._portStart + 1;
      return portDigitStart + port.length === this._pathStart && B.JSString_methods.startsWith$2(this._uri, port, portDigitStart);
    },
    removeFragment$0() {
      var _this = this,
        t1 = _this._fragmentStart,
        t2 = _this._uri;
      if (t1 >= t2.length)
        return _this;
      return new A._SimpleUri(B.JSString_methods.substring$2(t2, 0, t1), _this._schemeEnd, _this._hostStart, _this._portStart, _this._pathStart, _this._queryStart, t1, _this._schemeCache);
    },
    replace$3$path$query$scheme(_, path, query, scheme) {
      var schemeChanged, isFile, t1, userInfo, port, host, hasAuthority, t2, fragment, _this = this, _null = null;
      if (scheme != null) {
        scheme = A._Uri__makeScheme(scheme, 0, scheme.length);
        schemeChanged = !(_this._schemeEnd === scheme.length && B.JSString_methods.startsWith$1(_this._uri, scheme));
      } else {
        scheme = _this.get$scheme();
        schemeChanged = false;
      }
      isFile = scheme === "file";
      t1 = _this._hostStart;
      userInfo = t1 > 0 ? B.JSString_methods.substring$2(_this._uri, _this._schemeEnd + 3, t1) : "";
      port = _this.get$hasPort() ? _this.get$port(0) : _null;
      if (schemeChanged)
        port = A._Uri__makePort(port, scheme);
      t1 = _this._hostStart;
      if (t1 > 0)
        host = B.JSString_methods.substring$2(_this._uri, t1, _this._portStart);
      else
        host = userInfo.length !== 0 || port != null || isFile ? "" : _null;
      hasAuthority = host != null;
      if (path != null) {
        t1 = path.length;
        path = A._Uri__makePath(path, 0, t1, _null, scheme, hasAuthority);
      } else {
        path = B.JSString_methods.substring$2(_this._uri, _this._pathStart, _this._queryStart);
        if (!isFile)
          t1 = hasAuthority && path.length !== 0;
        else
          t1 = true;
        if (t1 && !B.JSString_methods.startsWith$1(path, "/"))
          path = "/" + path;
      }
      if (query != null) {
        t1 = query.length;
        query = A._Uri__makeQuery(query, 0, t1, _null);
      } else {
        t1 = _this._queryStart;
        t2 = _this._fragmentStart;
        if (t1 < t2)
          query = B.JSString_methods.substring$2(_this._uri, t1 + 1, t2);
      }
      t1 = _this._fragmentStart;
      t2 = _this._uri;
      fragment = t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragment);
    },
    replace$1$scheme(_, scheme) {
      return this.replace$3$path$query$scheme(0, null, null, scheme);
    },
    replace$1$path(_, path) {
      return this.replace$3$path$query$scheme(0, path, null, null);
    },
    replace$2$path$query(_, path, query) {
      return this.replace$3$path$query$scheme(0, path, query, null);
    },
    resolve$1(reference) {
      return this.resolveUri$1(A.Uri_parse(reference));
    },
    resolveUri$1(reference) {
      if (reference instanceof A._SimpleUri)
        return this._simpleMerge$2(this, reference);
      return this._toNonSimple$0().resolveUri$1(reference);
    },
    _simpleMerge$2(base, ref) {
      var t2, t3, t4, isSimple, delta, refStart, basePathStart, packageNameEnd, basePathStart0, baseStart, baseEnd, baseUri, baseStart0, backCount, refStart0, insert,
        t1 = ref._schemeEnd;
      if (t1 > 0)
        return ref;
      t2 = ref._hostStart;
      if (t2 > 0) {
        t3 = base._schemeEnd;
        if (t3 <= 0)
          return ref;
        t4 = t3 === 4;
        if (t4 && B.JSString_methods.startsWith$1(base._uri, "file"))
          isSimple = ref._pathStart !== ref._queryStart;
        else if (t4 && B.JSString_methods.startsWith$1(base._uri, "http"))
          isSimple = !ref._isPort$1("80");
        else
          isSimple = !(t3 === 5 && B.JSString_methods.startsWith$1(base._uri, "https")) || !ref._isPort$1("443");
        if (isSimple) {
          delta = t3 + 1;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, delta) + B.JSString_methods.substring$1(ref._uri, t1 + 1), t3, t2 + delta, ref._portStart + delta, ref._pathStart + delta, ref._queryStart + delta, ref._fragmentStart + delta, base._schemeCache);
        } else
          return this._toNonSimple$0().resolveUri$1(ref);
      }
      refStart = ref._pathStart;
      t1 = ref._queryStart;
      if (refStart === t1) {
        t2 = ref._fragmentStart;
        if (t1 < t2) {
          t3 = base._queryStart;
          delta = t3 - t1;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, t3) + B.JSString_methods.substring$1(ref._uri, t1), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, t1 + delta, t2 + delta, base._schemeCache);
        }
        t1 = ref._uri;
        if (t2 < t1.length) {
          t3 = base._fragmentStart;
          return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, t3) + B.JSString_methods.substring$1(t1, t2), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, base._queryStart, t2 + (t3 - t2), base._schemeCache);
        }
        return base.removeFragment$0();
      }
      t2 = ref._uri;
      if (B.JSString_methods.startsWith$2(t2, "/", refStart)) {
        basePathStart = base._pathStart;
        packageNameEnd = A._SimpleUri__packageNameEnd(this);
        basePathStart0 = packageNameEnd > 0 ? packageNameEnd : basePathStart;
        delta = basePathStart0 - refStart;
        return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, basePathStart0) + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, basePathStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
      }
      baseStart = base._pathStart;
      baseEnd = base._queryStart;
      if (baseStart === baseEnd && base._hostStart > 0) {
        for (; B.JSString_methods.startsWith$2(t2, "../", refStart);)
          refStart += 3;
        delta = baseStart - refStart + 1;
        return new A._SimpleUri(B.JSString_methods.substring$2(base._uri, 0, baseStart) + "/" + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
      }
      baseUri = base._uri;
      packageNameEnd = A._SimpleUri__packageNameEnd(this);
      if (packageNameEnd >= 0)
        baseStart0 = packageNameEnd;
      else
        for (baseStart0 = baseStart; B.JSString_methods.startsWith$2(baseUri, "../", baseStart0);)
          baseStart0 += 3;
      backCount = 0;
      while (true) {
        refStart0 = refStart + 3;
        if (!(refStart0 <= t1 && B.JSString_methods.startsWith$2(t2, "../", refStart)))
          break;
        ++backCount;
        refStart = refStart0;
      }
      for (t3 = baseUri.length, insert = ""; baseEnd > baseStart0;) {
        --baseEnd;
        if (!(baseEnd >= 0 && baseEnd < t3))
          return A.ioore(baseUri, baseEnd);
        if (baseUri.charCodeAt(baseEnd) === 47) {
          if (backCount === 0) {
            insert = "/";
            break;
          }
          --backCount;
          insert = "/";
        }
      }
      if (baseEnd === baseStart0 && base._schemeEnd <= 0 && !B.JSString_methods.startsWith$2(baseUri, "/", baseStart)) {
        refStart -= backCount * 3;
        insert = "";
      }
      delta = baseEnd - refStart + insert.length;
      return new A._SimpleUri(B.JSString_methods.substring$2(baseUri, 0, baseEnd) + insert + B.JSString_methods.substring$1(t2, refStart), base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, ref._fragmentStart + delta, base._schemeCache);
    },
    toFilePath$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 >= 0) {
        t2 = !(t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "file"));
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        throw A.wrapException(A.UnsupportedError$("Cannot extract a file path from a " + _this.get$scheme() + " URI"));
      t1 = _this._queryStart;
      t2 = _this._uri;
      if (t1 < t2.length) {
        if (t1 < _this._fragmentStart)
          throw A.wrapException(A.UnsupportedError$(string$.Cannotfq));
        throw A.wrapException(A.UnsupportedError$(string$.Cannotff));
      }
      if (_this._hostStart < _this._portStart)
        A.throwExpression(A.UnsupportedError$(string$.Cannotn));
      t1 = B.JSString_methods.substring$2(t2, _this._pathStart, t1);
      return t1;
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    _toNonSimple$0() {
      var _this = this, _null = null,
        t1 = _this.get$scheme(),
        t2 = _this.get$userInfo(),
        t3 = _this._hostStart > 0 ? _this.get$host(0) : _null,
        t4 = _this.get$hasPort() ? _this.get$port(0) : _null,
        t5 = _this._uri,
        t6 = _this._queryStart,
        t7 = B.JSString_methods.substring$2(t5, _this._pathStart, t6),
        t8 = _this._fragmentStart;
      t6 = t6 < t8 ? _this.get$query(0) : _null;
      return A._Uri$_internal(t1, t2, t3, t4, t7, t6, t8 < t5.length ? _this.get$fragment() : _null);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.Expando.prototype = {
    toString$0(_) {
      return "Expando:null";
    }
  };
  A.HtmlElement.prototype = {};
  A.AccessibleNodeList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.AnchorElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.AreaElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.BaseElement.prototype = {$isBaseElement: 1};
  A.Blob.prototype = {};
  A.BodyElement.prototype = {$isBodyElement: 1};
  A.CharacterData.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssPerspective.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssRule.prototype = {$isCssRule: 1};
  A.CssStyleDeclaration.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.CssStyleDeclarationBase.prototype = {};
  A.CssStyleValue.prototype = {};
  A.CssTransformComponent.prototype = {};
  A.CssTransformValue.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssUnparsedValue.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.DataTransferItemList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Document.prototype = {};
  A.DomException.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.DomImplementation.prototype = {
    createHtmlDocument$1(receiver, title) {
      var t1 = receiver.createHTMLDocument(title);
      t1.toString;
      return t1;
    }
  };
  A.DomRectList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Rectangle_num._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.DomRectReadOnly.prototype = {
    toString$0(receiver) {
      var t2,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      return "Rectangle (" + A.S(t1) + ", " + A.S(t2) + ") " + A.S(this.get$width(receiver)) + " x " + A.S(this.get$height(receiver));
    },
    $eq(receiver, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = false;
      if (type$.Rectangle_dynamic._is(other)) {
        t2 = receiver.left;
        t2.toString;
        t3 = other.left;
        t3.toString;
        if (t2 === t3) {
          t2 = receiver.top;
          t2.toString;
          t3 = other.top;
          t3.toString;
          if (t2 === t3) {
            t1 = J.getInterceptor$x(other);
            t1 = this.get$width(receiver) === t1.get$width(other) && this.get$height(receiver) === t1.get$height(other);
          }
        }
      }
      return t1;
    },
    get$hashCode(receiver) {
      var t2,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      return A.Object_hash(t1, t2, this.get$width(receiver), this.get$height(receiver), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$_height(receiver) {
      return receiver.height;
    },
    get$height(receiver) {
      var t1 = this.get$_height(receiver);
      t1.toString;
      return t1;
    },
    get$_width(receiver) {
      return receiver.width;
    },
    get$width(receiver) {
      var t1 = this.get$_width(receiver);
      t1.toString;
      return t1;
    },
    $isRectangle: 1
  };
  A.DomStringList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      A._asString(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.DomTokenList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.Element0.prototype = {
    get$attributes(receiver) {
      return new A._ElementAttributeMap(receiver);
    },
    toString$0(receiver) {
      var t1 = receiver.localName;
      t1.toString;
      return t1;
    },
    createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator) {
      var t2, contextElement, fragment,
        t1 = $.Element__defaultSanitizer;
      if (t1 == null) {
        t1 = new A._ValidatingTreeSanitizer(validator);
        $.Element__defaultSanitizer = t1;
        treeSanitizer = t1;
      } else {
        t1.validator = validator;
        treeSanitizer = t1;
      }
      if ($.Element__parseDocument == null) {
        t1 = document;
        t2 = t1.implementation;
        t2.toString;
        t2 = B.DomImplementation_methods.createHtmlDocument$1(t2, "");
        $.Element__parseDocument = t2;
        t2 = t2.createRange();
        t2.toString;
        $.Element__parseRange = t2;
        t2 = $.Element__parseDocument.createElement("base");
        type$.BaseElement._as(t2);
        t1 = t1.baseURI;
        t1.toString;
        t2.href = t1;
        $.Element__parseDocument.head.appendChild(t2).toString;
      }
      t1 = $.Element__parseDocument;
      if (t1.body == null) {
        t2 = t1.createElement("body");
        B.HtmlDocument_methods.set$body(t1, type$.BodyElement._as(t2));
      }
      t1 = $.Element__parseDocument;
      if (type$.BodyElement._is(receiver)) {
        t1 = t1.body;
        t1.toString;
        contextElement = t1;
      } else {
        t1.toString;
        t2 = receiver.tagName;
        t2.toString;
        contextElement = t1.createElement(t2);
        $.Element__parseDocument.body.appendChild(contextElement).toString;
      }
      t1 = "createContextualFragment" in window.Range.prototype;
      t1.toString;
      if (t1) {
        t1 = receiver.tagName;
        t1.toString;
        t1 = !B.JSArray_methods.contains$1(B.List_tEi, t1);
      } else
        t1 = false;
      if (t1) {
        $.Element__parseRange.selectNodeContents(contextElement);
        t1 = $.Element__parseRange;
        t1 = t1.createContextualFragment(html);
        t1.toString;
        fragment = t1;
      } else {
        J.set$_innerHtml$x(contextElement, html);
        t1 = $.Element__parseDocument.createDocumentFragment();
        t1.toString;
        for (; t2 = contextElement.firstChild, t2 != null;)
          t1.appendChild(t2).toString;
        fragment = t1;
      }
      if (contextElement !== $.Element__parseDocument.body)
        J.remove$0$ax(contextElement);
      treeSanitizer.sanitizeTree$1(fragment);
      document.adoptNode(fragment).toString;
      return fragment;
    },
    set$_innerHtml(receiver, value) {
      receiver.innerHTML = value;
    },
    $isElement0: 1
  };
  A.Event.prototype = {$isEvent: 1};
  A.EventTarget.prototype = {};
  A.File.prototype = {$isFile: 1};
  A.FileList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.File._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.FileWriter.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.FormElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Gamepad.prototype = {$isGamepad: 1};
  A.History.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.HtmlCollection.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.HtmlDocument.prototype = {
    set$body(receiver, value) {
      receiver.body = value;
    }
  };
  A.Location.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.MediaList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.MidiInputMap.prototype = {
    addAll$1(receiver, other) {
      type$.Map_String_dynamic._as(other);
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(A._asString(key)));
    },
    forEach$1(receiver, f) {
      var entries, entry, t1;
      type$.void_Function_String_dynamic._as(f);
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.MidiInputMap_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    get$isNotEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 !== 0;
    },
    $indexSet(receiver, key, value) {
      A._asString(key);
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.MidiInputMap_keys_closure.prototype = {
    call$2(k, v) {
      return B.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 11
  };
  A.MidiOutputMap.prototype = {
    addAll$1(receiver, other) {
      type$.Map_String_dynamic._as(other);
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(A._asString(key)));
    },
    forEach$1(receiver, f) {
      var entries, entry, t1;
      type$.void_Function_String_dynamic._as(f);
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.MidiOutputMap_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    get$isNotEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 !== 0;
    },
    $indexSet(receiver, key, value) {
      A._asString(key);
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.MidiOutputMap_keys_closure.prototype = {
    call$2(k, v) {
      return B.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 11
  };
  A.MimeType.prototype = {$isMimeType: 1};
  A.MimeTypeArray.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.MimeType._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Node.prototype = {
    remove$0(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver).toString;
    },
    _clearChildren$0(receiver) {
      var t1;
      for (; t1 = receiver.firstChild, t1 != null;)
        receiver.removeChild(t1).toString;
    },
    toString$0(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    $isNode: 1
  };
  A.NodeList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Plugin.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isPlugin: 1
  };
  A.PluginArray.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Plugin._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.RtcStatsReport.prototype = {
    addAll$1(receiver, other) {
      type$.Map_String_dynamic._as(other);
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(A._asString(key)));
    },
    forEach$1(receiver, f) {
      var entries, entry, t1;
      type$.void_Function_String_dynamic._as(f);
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.RtcStatsReport_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    get$isNotEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 !== 0;
    },
    $indexSet(receiver, key, value) {
      A._asString(key);
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.RtcStatsReport_keys_closure.prototype = {
    call$2(k, v) {
      return B.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 11
  };
  A.SelectElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.SourceBuffer.prototype = {$isSourceBuffer: 1};
  A.SourceBufferList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.SourceBuffer._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.SpeechGrammar.prototype = {$isSpeechGrammar: 1};
  A.SpeechGrammarList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.SpeechGrammar._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.SpeechRecognitionResult.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isSpeechRecognitionResult: 1
  };
  A.Storage.prototype = {
    addAll$1(receiver, other) {
      J.forEach$1$ax(type$.Map_String_String._as(other), new A.Storage_addAll_closure(receiver));
    },
    containsKey$1(receiver, key) {
      return receiver.getItem(key) != null;
    },
    $index(receiver, key) {
      return receiver.getItem(A._asString(key));
    },
    $indexSet(receiver, key, value) {
      receiver.setItem(A._asString(key), A._asString(value));
    },
    forEach$1(receiver, f) {
      var i, key, t1;
      type$.void_Function_String_String._as(f);
      for (i = 0; true; ++i) {
        key = receiver.key(i);
        if (key == null)
          return;
        t1 = receiver.getItem(key);
        t1.toString;
        f.call$2(key, t1);
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.Storage_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      return receiver.key(0) == null;
    },
    get$isNotEmpty(receiver) {
      return receiver.key(0) != null;
    },
    $isMap: 1
  };
  A.Storage_addAll_closure.prototype = {
    call$2(k, v) {
      this.$this.setItem(A._asString(k), A._asString(v));
    },
    $signature: 12
  };
  A.Storage_keys_closure.prototype = {
    call$2(k, v) {
      return B.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 12
  };
  A.StyleSheet.prototype = {$isStyleSheet: 1};
  A.TemplateElement.prototype = {$isTemplateElement: 1};
  A.Text0.prototype = {$isText0: 1};
  A.TextTrack.prototype = {$isTextTrack: 1};
  A.TextTrackCue.prototype = {$isTextTrackCue: 1};
  A.TextTrackCueList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.TextTrackCue._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.TextTrackList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.TextTrack._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.TimeRanges.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.Touch.prototype = {$isTouch: 1};
  A.TouchList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Touch._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.TrackDefaultList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Url.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.VideoTrackList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A._Attr.prototype = {$is_Attr: 1};
  A._CssRuleList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.CssRule._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._DomRect.prototype = {
    toString$0(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return "Rectangle (" + A.S(t1) + ", " + A.S(t2) + ") " + A.S(t3) + " x " + A.S(t4);
    },
    $eq(receiver, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = false;
      if (type$.Rectangle_dynamic._is(other)) {
        t2 = receiver.left;
        t2.toString;
        t3 = other.left;
        t3.toString;
        if (t2 === t3) {
          t2 = receiver.top;
          t2.toString;
          t3 = other.top;
          t3.toString;
          if (t2 === t3) {
            t2 = receiver.width;
            t2.toString;
            t3 = J.getInterceptor$x(other);
            if (t2 === t3.get$width(other)) {
              t1 = receiver.height;
              t1.toString;
              t3 = t1 === t3.get$height(other);
              t1 = t3;
            }
          }
        }
      }
      return t1;
    },
    get$hashCode(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return A.Object_hash(t1, t2, t3, t4, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$_height(receiver) {
      return receiver.height;
    },
    get$height(receiver) {
      var t1 = receiver.height;
      t1.toString;
      return t1;
    },
    get$_width(receiver) {
      return receiver.width;
    },
    get$width(receiver) {
      var t1 = receiver.width;
      t1.toString;
      return t1;
    }
  };
  A._GamepadList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      type$.nullable_Gamepad._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var len = receiver.length;
      if (len === 1)
        return receiver[0];
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._NamedNodeMap.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Node._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._SpeechRecognitionResultList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.SpeechRecognitionResult._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._StyleSheetList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.StyleSheet._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._AttributeMap.prototype = {
    addAll$1(_, other) {
      J.forEach$1$ax(type$.Map_String_String._as(other), new A._AttributeMap_addAll_closure(this));
    },
    forEach$1(_, f) {
      var t1, t2, t3, _i, key, value;
      type$.void_Function_String_String._as(f);
      for (t1 = this.get$keys(0), t2 = t1.length, t3 = this._html$_element, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        value = t3.getAttribute(key);
        f.call$2(key, value == null ? A._asString(value) : value);
      }
    },
    get$keys(_) {
      var keys, len, t2, i, attr, t3,
        t1 = this._html$_element.attributes;
      t1.toString;
      keys = A._setArrayType([], type$.JSArray_String);
      for (len = t1.length, t2 = type$._Attr, i = 0; i < len; ++i) {
        if (!(i < t1.length))
          return A.ioore(t1, i);
        attr = t2._as(t1[i]);
        if (attr.namespaceURI == null) {
          t3 = attr.name;
          t3.toString;
          B.JSArray_methods.add$1(keys, t3);
        }
      }
      return keys;
    },
    get$isEmpty(_) {
      return this.get$keys(0).length === 0;
    },
    get$isNotEmpty(_) {
      return this.get$keys(0).length !== 0;
    }
  };
  A._AttributeMap_addAll_closure.prototype = {
    call$2(k, v) {
      this.$this._html$_element.setAttribute(A._asString(k), A._asString(v));
    },
    $signature: 12
  };
  A._ElementAttributeMap.prototype = {
    containsKey$1(_, key) {
      var t1 = this._html$_element.hasAttribute(key);
      t1.toString;
      return t1;
    },
    $index(_, key) {
      return this._html$_element.getAttribute(A._asString(key));
    },
    $indexSet(_, key, value) {
      this._html$_element.setAttribute(A._asString(key), A._asString(value));
    },
    get$length(_) {
      return this.get$keys(0).length;
    }
  };
  A._Html5NodeValidator.prototype = {
    allowsElement$1(element) {
      return $.$get$_Html5NodeValidator__allowedElements().contains$1(0, A.Element__safeTagName(element));
    },
    allowsAttribute$3(element, attributeName, value) {
      var validator = $._Html5NodeValidator__attributeValidators.$index(0, A.Element__safeTagName(element) + "::" + attributeName);
      if (validator == null)
        validator = $._Html5NodeValidator__attributeValidators.$index(0, "*::" + attributeName);
      if (validator == null)
        return false;
      return A._asBool(validator.call$4(element, attributeName, value, this));
    },
    $isNodeValidator: 1
  };
  A.ImmutableListMixin.prototype = {
    get$iterator(receiver) {
      return new A.FixedSizeListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    add$1(receiver, value) {
      A.instanceType(receiver)._eval$1("ImmutableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot add to immutable List."));
    },
    sort$1(receiver, compare) {
      A.instanceType(receiver)._eval$1("int(ImmutableListMixin.E,ImmutableListMixin.E)?")._as(compare);
      throw A.wrapException(A.UnsupportedError$("Cannot sort immutable List."));
    },
    remove$1(receiver, object) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from immutable List."));
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      A.instanceType(receiver)._eval$1("Iterable<ImmutableListMixin.E>")._as(iterable);
      throw A.wrapException(A.UnsupportedError$("Cannot setRange on immutable List."));
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    }
  };
  A.NodeValidatorBuilder.prototype = {
    allowsElement$1(element) {
      return B.JSArray_methods.any$1(this._validators, new A.NodeValidatorBuilder_allowsElement_closure(element));
    },
    allowsAttribute$3(element, attributeName, value) {
      return B.JSArray_methods.any$1(this._validators, new A.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
    },
    $isNodeValidator: 1
  };
  A.NodeValidatorBuilder_allowsElement_closure.prototype = {
    call$1(v) {
      return type$.NodeValidator._as(v).allowsElement$1(this.element);
    },
    $signature: 45
  };
  A.NodeValidatorBuilder_allowsAttribute_closure.prototype = {
    call$1(v) {
      return type$.NodeValidator._as(v).allowsAttribute$3(this.element, this.attributeName, this.value);
    },
    $signature: 45
  };
  A.FixedSizeListIterator.prototype = {
    moveNext$0() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._html$_length;
      if (nextPosition < t1) {
        _this._current = J.$index$asx(_this._array, nextPosition);
        _this._position = nextPosition;
        return true;
      }
      _this._current = null;
      _this._position = t1;
      return false;
    },
    get$current(_) {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    $isIterator: 1
  };
  A._ValidatingTreeSanitizer.prototype = {
    sanitizeTree$1(node) {
      var previousTreeModifications,
        walk = new A._ValidatingTreeSanitizer_sanitizeTree_walk(this);
      do {
        previousTreeModifications = this.numTreeModifications;
        walk.call$2(node, null);
      } while (previousTreeModifications !== this.numTreeModifications);
    },
    _removeNode$2(node, $parent) {
      ++this.numTreeModifications;
      if ($parent == null || $parent !== node.parentNode)
        J.remove$0$ax(node);
      else
        $parent.removeChild(node).toString;
    },
    _sanitizeUntrustedElement$2(element, $parent) {
      var corruptedTest1, elementText, elementTagName, t1, corrupted0, exception, t2,
        corrupted = true,
        attrs = null, isAttr = null;
      try {
        attrs = J.get$attributes$x(element);
        isAttr = attrs._html$_element.getAttribute("is");
        type$.Element._as(element);
        t1 = function(element) {
          if (!(element.attributes instanceof NamedNodeMap)) {
            return true;
          }
          if (element.id == "lastChild" || element.name == "lastChild" || element.id == "previousSibling" || element.name == "previousSibling" || element.id == "children" || element.name == "children") {
            return true;
          }
          var childNodes = element.childNodes;
          if (element.lastChild && element.lastChild !== childNodes[childNodes.length - 1]) {
            return true;
          }
          if (element.children) {
            if (!(element.children instanceof HTMLCollection || element.children instanceof NodeList)) {
              return true;
            }
          }
          var length = 0;
          if (element.children) {
            length = element.children.length;
          }
          for (var i = 0; i < length; i++) {
            var child = element.children[i];
            if (child.id == "attributes" || child.name == "attributes" || child.id == "lastChild" || child.name == "lastChild" || child.id == "previousSibling" || child.name == "previousSibling" || child.id == "children" || child.name == "children") {
              return true;
            }
          }
          return false;
        }(element);
        t1.toString;
        corruptedTest1 = t1;
        if (corruptedTest1)
          corrupted0 = true;
        else {
          t1 = !(element.attributes instanceof NamedNodeMap);
          t1.toString;
          corrupted0 = t1;
        }
        corrupted = corrupted0;
      } catch (exception) {
      }
      elementText = "element unprintable";
      try {
        elementText = J.toString$0$(element);
      } catch (exception) {
      }
      try {
        type$.Element._as(element);
        elementTagName = A.Element__safeTagName(element);
        this._sanitizeElement$7(element, $parent, corrupted, elementText, elementTagName, type$.Map_dynamic_dynamic._as(attrs), A._asStringQ(isAttr));
      } catch (exception) {
        if (A.unwrapException(exception) instanceof A.ArgumentError)
          throw exception;
        else {
          this._removeNode$2(element, $parent);
          window.toString;
          t1 = A.S(elementText);
          t2 = typeof console != "undefined";
          t2.toString;
          if (t2)
            window.console.warn("Removing corrupted element " + t1);
        }
      }
    },
    _sanitizeElement$7(element, $parent, corrupted, text, tag, attrs, isAttr) {
      var t1, t2, keys, i, $name, t3, t4, _this = this;
      if (corrupted) {
        _this._removeNode$2(element, $parent);
        window.toString;
        t1 = typeof console != "undefined";
        t1.toString;
        if (t1)
          window.console.warn("Removing element due to corrupted attributes on <" + text + ">");
        return;
      }
      if (!_this.validator.allowsElement$1(element)) {
        _this._removeNode$2(element, $parent);
        window.toString;
        t1 = A.S($parent);
        t2 = typeof console != "undefined";
        t2.toString;
        if (t2)
          window.console.warn("Removing disallowed element <" + tag + "> from " + t1);
        return;
      }
      if (isAttr != null)
        if (!_this.validator.allowsAttribute$3(element, "is", isAttr)) {
          _this._removeNode$2(element, $parent);
          window.toString;
          t1 = typeof console != "undefined";
          t1.toString;
          if (t1)
            window.console.warn("Removing disallowed type extension <" + tag + ' is="' + isAttr + '">');
          return;
        }
      t1 = attrs.get$keys(0);
      keys = A._setArrayType(t1.slice(0), A._arrayInstanceType(t1));
      for (i = attrs.get$keys(0).length - 1, t1 = attrs._html$_element, t2 = "Removing disallowed attribute <" + tag + " "; i >= 0; --i) {
        if (!(i < keys.length))
          return A.ioore(keys, i);
        $name = keys[i];
        t3 = _this.validator;
        t4 = J.toLowerCase$0$s($name);
        A._asString($name);
        if (!t3.allowsAttribute$3(element, t4, A._asString(t1.getAttribute($name)))) {
          window.toString;
          t3 = t1.getAttribute($name);
          t4 = typeof console != "undefined";
          t4.toString;
          if (t4)
            window.console.warn(t2 + $name + '="' + A.S(t3) + '">');
          t1.removeAttribute($name);
        }
      }
      if (type$.TemplateElement._is(element)) {
        t1 = element.content;
        t1.toString;
        _this.sanitizeTree$1(t1);
      }
    },
    sanitizeNode$2(node, $parent) {
      var t1 = node.nodeType;
      t1.toString;
      switch (t1) {
        case 1:
          this._sanitizeUntrustedElement$2(node, $parent);
          break;
        case 8:
        case 11:
        case 3:
        case 4:
          break;
        default:
          this._removeNode$2(node, $parent);
      }
    },
    $isNodeTreeSanitizer: 1
  };
  A._ValidatingTreeSanitizer_sanitizeTree_walk.prototype = {
    call$2(node, $parent) {
      var child, nextChild, t2, exception, t3,
        t1 = this.$this;
      t1.sanitizeNode$2(node, $parent);
      child = node.lastChild;
      for (; child != null;) {
        nextChild = null;
        try {
          nextChild = child.previousSibling;
          if (nextChild != null && nextChild.nextSibling !== child) {
            t2 = A.StateError$("Corrupt HTML");
            throw A.wrapException(t2);
          }
        } catch (exception) {
          t2 = child;
          ++t1.numTreeModifications;
          t3 = t2.parentNode;
          if (node !== t3) {
            if (t3 != null)
              t3.removeChild(t2).toString;
          } else
            node.removeChild(t2).toString;
          child = null;
          nextChild = node.lastChild;
        }
        if (child != null)
          this.call$2(child, node);
        child = nextChild;
      }
    },
    $signature: 69
  };
  A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase.prototype = {};
  A._DomRectList_JavaScriptObject_ListMixin.prototype = {};
  A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._DomStringList_JavaScriptObject_ListMixin.prototype = {};
  A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._FileList_JavaScriptObject_ListMixin.prototype = {};
  A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._MidiInputMap_JavaScriptObject_MapMixin.prototype = {};
  A._MidiOutputMap_JavaScriptObject_MapMixin.prototype = {};
  A._MimeTypeArray_JavaScriptObject_ListMixin.prototype = {};
  A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._PluginArray_JavaScriptObject_ListMixin.prototype = {};
  A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._RtcStatsReport_JavaScriptObject_MapMixin.prototype = {};
  A._SourceBufferList_EventTarget_ListMixin.prototype = {};
  A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  A._SpeechGrammarList_JavaScriptObject_ListMixin.prototype = {};
  A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._Storage_JavaScriptObject_MapMixin.prototype = {};
  A._TextTrackCueList_JavaScriptObject_ListMixin.prototype = {};
  A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._TextTrackList_EventTarget_ListMixin.prototype = {};
  A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  A._TouchList_JavaScriptObject_ListMixin.prototype = {};
  A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__CssRuleList_JavaScriptObject_ListMixin.prototype = {};
  A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__GamepadList_JavaScriptObject_ListMixin.prototype = {};
  A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin.prototype = {};
  A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__StyleSheetList_JavaScriptObject_ListMixin.prototype = {};
  A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.OSError.prototype = {
    toString$0(_) {
      var t1 = "" + "OS Error",
        t2 = this.message;
      if (t2.length !== 0) {
        t1 = t1 + ": " + t2;
        t2 = this.errorCode;
        if (t2 !== -1)
          t1 = t1 + ", errno = " + B.JSInt_methods.toString$0(t2);
      } else {
        t2 = this.errorCode;
        if (t2 !== -1)
          t1 = t1 + ": errno = " + B.JSInt_methods.toString$0(t2);
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isException: 1
  };
  A._BufferAndStart.prototype = {};
  A.ZLibEncoder.prototype = {
    convert$1(bytes) {
      var t1, t2;
      type$.List_int._as(bytes);
      t1 = new A._BytesBuilder(A._setArrayType([], type$.JSArray_Uint8List));
      t2 = this.startChunkedConversion$1(new A._BufferSink(t1));
      t2.addSlice$4(bytes, 0, J.get$length$asx(bytes), false);
      t2.close$0(0);
      return t1.takeBytes$0();
    },
    startChunkedConversion$1(sink) {
      type$.Sink_List_int._as(sink);
      if (!(sink instanceof A.ByteConversionSink))
        sink = new A._ByteAdapterSink(sink);
      return new A._ZLibEncoderSink(A.RawZLibFilter__makeZLibDeflateFilter(true, this.level, 15, 8, 0, null, false), sink);
    }
  };
  A._BufferSink.prototype = {
    add$1(_, chunk) {
      this.builder.add$1(0, type$.List_int._as(chunk));
    },
    addSlice$4(chunk, start, end, isLast) {
      type$.List_int._as(chunk);
      this.builder.add$1(0, J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(chunk), chunk.byteOffset + start, end - start));
    },
    close$0(_) {
    }
  };
  A._ZLibEncoderSink.prototype = {};
  A._FilterSink.prototype = {
    add$1(_, data) {
      type$.List_int._as(data);
      this.addSlice$4(data, 0, J.get$length$asx(data), false);
    },
    addSlice$4(data, start, end, isLast) {
      var bufferAndStart, out, t1, t2, exception, _this = this;
      type$.List_int._as(data);
      if (_this._closed)
        return;
      A.RangeError_checkValidRange(start, end, J.get$length$asx(data));
      try {
        _this._empty = false;
        bufferAndStart = A._ensureFastAndSerializableByteData(data, start, end);
        t1 = _this._filter;
        t1.process$3(bufferAndStart.buffer, bufferAndStart.start, end - (start - bufferAndStart.start));
        for (t2 = _this._sink; true;) {
          out = t1.processed$1$flush(false);
          if (out == null)
            break;
          t2.add$1(0, out);
        }
      } catch (exception) {
        _this._closed = true;
        throw exception;
      }
      if (isLast)
        _this.close$0(0);
    },
    close$0(_) {
      var out, t1, t2, exception, _this = this;
      if (_this._closed)
        return;
      if (_this._empty)
        _this._filter.process$3(B.List_empty1, 0, 0);
      try {
        for (t1 = _this._sink, t2 = _this._filter; true;) {
          out = t2.processed$1$end(true);
          if (out == null)
            break;
          t1.add$1(0, out);
        }
      } catch (exception) {
        _this._closed = true;
        throw exception;
      }
      _this._closed = true;
      _this._sink.close$0(0);
    }
  };
  A._Directory.prototype = {
    existsSync$0() {
      A._Directory__exists(A._Namespace__namespace(), this._rawPath);
    },
    toString$0(_) {
      return "Directory: '" + this._io$_path + "'";
    },
    get$_rawPath() {
      return this._rawPath;
    }
  };
  A.FileSystemException.prototype = {
    _toStringHelper$1(className) {
      var _this = this,
        t1 = "" + className,
        t2 = _this.message;
      if (t2.length !== 0) {
        t1 += ": " + t2;
        t2 = _this.path;
        if (t2 != null)
          t1 += ", path = '" + t2 + "'";
        t2 = _this.osError;
        if (t2 != null)
          t1 += " (" + t2.toString$0(0) + ")";
      } else {
        t2 = _this.osError;
        if (t2 != null) {
          t1 += ": " + t2.toString$0(0);
          t2 = _this.path;
          if (t2 != null)
            t1 += ", path = '" + t2 + "'";
        } else {
          t2 = _this.path;
          if (t2 != null)
            t1 += ": " + t2;
        }
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toString$0(_) {
      return this._toStringHelper$1("FileSystemException");
    },
    $isException: 1
  };
  A.PathAccessException.prototype = {
    toString$0(_) {
      return this._toStringHelper$1("PathAccessException");
    }
  };
  A.PathExistsException.prototype = {
    toString$0(_) {
      return this._toStringHelper$1("PathExistsException");
    }
  };
  A.PathNotFoundException.prototype = {
    toString$0(_) {
      return this._toStringHelper$1("PathNotFoundException");
    }
  };
  A._File.prototype = {
    length$0(_) {
      return A._File__dispatchWithNamespace(12, [null, this._rawPath]).then$1$1(new A._File_length_closure(this), type$.int);
    },
    readAsBytesSync$0() {
      A._File__open(A._Namespace__namespace(), this._rawPath, 0);
      var opened = null;
    },
    _tryDecode$2(bytes, encoding) {
      var t1, exception;
      type$.List_int._as(bytes);
      try {
        t1 = encoding.decode$1(0, bytes);
        return t1;
      } catch (exception) {
        t1 = A.FileSystemException$("Failed to decode data using encoding 'utf-8'", this._io$_path, null);
        throw A.wrapException(t1);
      }
    },
    toString$0(_) {
      return "File: '" + this._io$_path + "'";
    },
    get$_rawPath() {
      return this._rawPath;
    }
  };
  A._File_length_closure.prototype = {
    call$1(response) {
      A._checkForErrorResponse(response, "Cannot retrieve length of file", this.$this._io$_path);
      return response;
    },
    $signature: 16
  };
  A.FileSystemEntity.prototype = {
    resolveSymbolicLinksSync$0() {
      A.FileSystemEntity__resolveSymbolicLinks(A._Namespace__namespace(), this.get$_rawPath());
    }
  };
  A.HandshakeException.prototype = {$isHandshakeException: 1};
  A.SocketOption.prototype = {};
  A._ReceivePortImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      type$.nullable_void_Function_dynamic._as(onData);
      type$.nullable_void_Function._as(onDone);
      throw A.wrapException(A.UnsupportedError$("ReceivePort.listen"));
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, true, null, null);
    },
    listen$3$cancelOnError$onDone(onData, cancelOnError, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, null);
    },
    listen$2$cancelOnError(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    },
    listen$3$onDone$onError(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, true, onDone, onError);
    }
  };
  A.jsify__convert.prototype = {
    call$1(o) {
      var t1, convertedMap, t2, key, convertedList;
      if (A._noJsifyRequired(o))
        return o;
      t1 = this._convertedObjects;
      if (t1.containsKey$1(0, o))
        return t1.$index(0, o);
      if (type$.Map_dynamic_dynamic._is(o)) {
        convertedMap = {};
        t1.$indexSet(0, o, convertedMap);
        for (t1 = J.getInterceptor$x(o), t2 = J.get$iterator$ax(t1.get$keys(o)); t2.moveNext$0();) {
          key = t2.get$current(t2);
          convertedMap[key] = this.call$1(t1.$index(o, key));
        }
        return convertedMap;
      } else if (type$.Iterable_dynamic._is(o)) {
        convertedList = [];
        t1.$indexSet(0, o, convertedList);
        B.JSArray_methods.addAll$1(convertedList, J.map$1$1$ax(o, this, type$.dynamic));
        return convertedList;
      } else
        return o;
    },
    $signature: 72
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(0, this.T._eval$1("0/?")._as(r));
    },
    $signature: 8
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 8
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    },
    $isException: 1
  };
  A.Length.prototype = {$isLength: 1};
  A.LengthList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Length._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (t1 === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Number.prototype = {$isNumber: 1};
  A.NumberList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Number._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (t1 === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.PointList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.StringList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      A._asString(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (t1 === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Transform.prototype = {$isTransform: 1};
  A.TransformList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      type$.Transform._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (t1 === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._LengthList_JavaScriptObject_ListMixin.prototype = {};
  A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NumberList_JavaScriptObject_ListMixin.prototype = {};
  A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._StringList_JavaScriptObject_ListMixin.prototype = {};
  A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._TransformList_JavaScriptObject_ListMixin.prototype = {};
  A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.AudioBuffer.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.AudioParamMap.prototype = {
    addAll$1(receiver, other) {
      type$.Map_String_dynamic._as(other);
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(A._asString(key)));
    },
    forEach$1(receiver, f) {
      var entries, entry, t1;
      type$.void_Function_String_dynamic._as(f);
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.AudioParamMap_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    get$isNotEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 !== 0;
    },
    $indexSet(receiver, key, value) {
      A._asString(key);
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.AudioParamMap_keys_closure.prototype = {
    call$2(k, v) {
      return B.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 11
  };
  A.AudioTrackList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.BaseAudioContext.prototype = {};
  A.OfflineAudioContext.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A._AudioParamMap_JavaScriptObject_MapMixin.prototype = {};
  A.CanonicalizedMap.prototype = {
    $index(_, key) {
      var pair, _this = this;
      if (!_this._isValidKey$1(key))
        return null;
      pair = _this._base.$index(0, _this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
      return pair == null ? null : pair.value;
    },
    $indexSet(_, key, value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("CanonicalizedMap.K")._as(key);
      t1._eval$1("CanonicalizedMap.V")._as(value);
      if (!_this._isValidKey$1(key))
        return;
      _this._base.$indexSet(0, _this._canonicalize.call$1(key), new A.MapEntry(key, value, t1._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")));
    },
    addAll$1(_, other) {
      J.forEach$1$ax(this.$ti._eval$1("Map<CanonicalizedMap.K,CanonicalizedMap.V>")._as(other), new A.CanonicalizedMap_addAll_closure(this));
    },
    addEntries$1(_, entries) {
      var t2, t3,
        t1 = this.$ti;
      t1._eval$1("Iterable<MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>")._as(entries);
      t2 = this._base;
      t1 = t1._eval$1("MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>");
      t3 = entries.$ti;
      return t2.addEntries$1(t2, A.MappedIterable_MappedIterable(entries, t3._bind$1(t1)._eval$1("1(Iterable.E)")._as(new A.CanonicalizedMap_addEntries_closure(this)), t3._eval$1("Iterable.E"), t1));
    },
    containsKey$1(_, key) {
      var _this = this;
      if (!_this._isValidKey$1(key))
        return false;
      return _this._base.containsKey$1(0, _this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
    },
    get$entries(_) {
      var t1 = this._base,
        t2 = A._instanceType(t1)._eval$1("LinkedHashMapEntriesIterable<1,2>"),
        t3 = this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>");
      return A.MappedIterable_MappedIterable(new A.LinkedHashMapEntriesIterable(t1, t2), t2._bind$1(t3)._eval$1("1(Iterable.E)")._as(new A.CanonicalizedMap_entries_closure(this)), t2._eval$1("Iterable.E"), t3);
    },
    forEach$1(_, f) {
      this._base.forEach$1(0, new A.CanonicalizedMap_forEach_closure(this, this.$ti._eval$1("~(CanonicalizedMap.K,CanonicalizedMap.V)")._as(f)));
    },
    get$isEmpty(_) {
      return this._base._length === 0;
    },
    get$isNotEmpty(_) {
      return this._base._length !== 0;
    },
    get$keys(_) {
      var t1 = this._base,
        t2 = A._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>"),
        t3 = this.$ti._eval$1("CanonicalizedMap.K");
      return A.MappedIterable_MappedIterable(new A.LinkedHashMapValuesIterable(t1, t2), t2._bind$1(t3)._eval$1("1(Iterable.E)")._as(new A.CanonicalizedMap_keys_closure(this)), t2._eval$1("Iterable.E"), t3);
    },
    get$length(_) {
      return this._base._length;
    },
    map$2$1(_, transform, K2, V2) {
      var t1 = this._base;
      return t1.map$2$1(t1, new A.CanonicalizedMap_map_closure(this, this.$ti._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(CanonicalizedMap.K,CanonicalizedMap.V)")._as(transform), K2, V2), K2, V2);
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _isValidKey$1(key) {
      return this.$ti._eval$1("CanonicalizedMap.K")._is(key);
    },
    $isMap: 1
  };
  A.CanonicalizedMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = t1.$ti;
      t2._eval$1("CanonicalizedMap.K")._as(key);
      t2._eval$1("CanonicalizedMap.V")._as(value);
      t1.$indexSet(0, key, value);
      return value;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(CanonicalizedMap.K,CanonicalizedMap.V)");
    }
  };
  A.CanonicalizedMap_addEntries_closure.prototype = {
    call$1(e) {
      var t3,
        t1 = this.$this,
        t2 = t1.$ti;
      t2._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(e);
      t3 = e.key;
      return new A.MapEntry(t1._canonicalize.call$1(t3), new A.MapEntry(t3, e.value, t2._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")), t2._eval$1("MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>(MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_entries_closure.prototype = {
    call$1(e) {
      var t1 = this.$this.$ti,
        t2 = t1._eval$1("MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>")._as(e).value;
      return new A.MapEntry(t2.key, t2.value, t1._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>(MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>)");
    }
  };
  A.CanonicalizedMap_forEach_closure.prototype = {
    call$2(key, pair) {
      var t1 = this.$this.$ti;
      t1._eval$1("CanonicalizedMap.C")._as(key);
      t1._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair);
      return this.f.call$2(pair.key, pair.value);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_keys_closure.prototype = {
    call$1(pair) {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair).key;
    },
    $signature() {
      return this.$this.$ti._eval$1("CanonicalizedMap.K(MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_map_closure.prototype = {
    call$2(_, pair) {
      var t1 = this.$this.$ti;
      t1._eval$1("CanonicalizedMap.C")._as(_);
      t1._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair);
      return this.transform.call$2(pair.key, pair.value);
    },
    $signature() {
      return this.$this.$ti._bind$1(this.K2)._bind$1(this.V2)._eval$1("MapEntry<1,2>(CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.DefaultEquality.prototype = {$isEquality: 1};
  A.IterableEquality.prototype = {
    equals$2(elements1, elements2) {
      var it1, it2, hasNext,
        t1 = this.$ti._eval$1("Iterable<1>?");
      t1._as(elements1);
      t1._as(elements2);
      if (elements1 === elements2)
        return true;
      it1 = J.get$iterator$ax(elements1);
      it2 = J.get$iterator$ax(elements2);
      for (t1 = this._elementEquality; true;) {
        hasNext = it1.moveNext$0();
        if (hasNext !== it2.moveNext$0())
          return false;
        if (!hasNext)
          return true;
        if (!t1.equals$2(it1.get$current(it1), it2.get$current(it2)))
          return false;
      }
    },
    hash$1(_, elements) {
      var t1, t2, hash;
      this.$ti._eval$1("Iterable<1>?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();) {
        hash = hash + t2.hash$1(0, t1.get$current(t1)) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.ListEquality.prototype = {
    equals$2(list1, list2) {
      var $length, t2, t3, i,
        t1 = this.$ti._eval$1("List<1>?");
      t1._as(list1);
      t1._as(list2);
      if (list1 === list2)
        return true;
      t1 = J.getInterceptor$asx(list1);
      $length = t1.get$length(list1);
      t2 = J.getInterceptor$asx(list2);
      if ($length !== t2.get$length(list2))
        return false;
      for (t3 = this._elementEquality, i = 0; i < $length; ++i)
        if (!t3.equals$2(t1.$index(list1, i), t2.$index(list2, i)))
          return false;
      return true;
    },
    hash$1(_, list) {
      var t1, t2, hash, i;
      this.$ti._eval$1("List<1>?")._as(list);
      for (t1 = J.getInterceptor$asx(list), t2 = this._elementEquality, hash = 0, i = 0; i < t1.get$length(list); ++i) {
        hash = hash + t2.hash$1(0, t1.$index(list, i)) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A._UnorderedEquality.prototype = {
    equals$2(elements1, elements2) {
      var counts, $length, e, count,
        t1 = A._instanceType(this),
        t2 = t1._eval$1("_UnorderedEquality.T?");
      t2._as(elements1);
      t2._as(elements2);
      if (elements1 === elements2)
        return true;
      t2 = this._elementEquality;
      counts = A.HashMap_HashMap(t1._eval$1("bool(_UnorderedEquality.E,_UnorderedEquality.E)")._as(t2.get$equals()), t1._eval$1("int(_UnorderedEquality.E)")._as(t2.get$hash(t2)), t2.get$isValidKey(), t1._eval$1("_UnorderedEquality.E"), type$.int);
      for (t1 = J.get$iterator$ax(elements1), $length = 0; t1.moveNext$0();) {
        e = t1.get$current(t1);
        count = counts.$index(0, e);
        counts.$indexSet(0, e, (count == null ? 0 : count) + 1);
        ++$length;
      }
      for (t1 = J.get$iterator$ax(elements2); t1.moveNext$0();) {
        e = t1.get$current(t1);
        count = counts.$index(0, e);
        if (count == null || count === 0)
          return false;
        counts.$indexSet(0, e, count - 1);
        --$length;
      }
      return $length === 0;
    },
    hash$1(_, elements) {
      var t1, t2, hash;
      A._instanceType(this)._eval$1("_UnorderedEquality.T?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();)
        hash = hash + t2.hash$1(0, t1.get$current(t1)) & 2147483647;
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.SetEquality.prototype = {};
  A._MapEntry.prototype = {
    get$hashCode(_) {
      var t1 = this.equality;
      return 3 * t1._keyEquality.hash$1(0, this.key) + 7 * t1._valueEquality.hash$1(0, this.value) & 2147483647;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A._MapEntry) {
        t1 = this.equality;
        t1 = t1._keyEquality.equals$2(this.key, other.key) && t1._valueEquality.equals$2(this.value, other.value);
      } else
        t1 = false;
      return t1;
    }
  };
  A.MapEquality.prototype = {
    equals$2(map1, map2) {
      var t2, equalElementCounts, t3, key, entry, count,
        t1 = this.$ti._eval$1("Map<1,2>?");
      t1._as(map1);
      t1._as(map2);
      if (map1 === map2)
        return true;
      t1 = J.getInterceptor$asx(map1);
      t2 = J.getInterceptor$asx(map2);
      if (t1.get$length(map1) !== t2.get$length(map2))
        return false;
      equalElementCounts = A.HashMap_HashMap(null, null, null, type$._MapEntry, type$.int);
      for (t3 = J.get$iterator$ax(t1.get$keys(map1)); t3.moveNext$0();) {
        key = t3.get$current(t3);
        entry = new A._MapEntry(this, key, t1.$index(map1, key));
        count = equalElementCounts.$index(0, entry);
        equalElementCounts.$indexSet(0, entry, (count == null ? 0 : count) + 1);
      }
      for (t1 = J.get$iterator$ax(t2.get$keys(map2)); t1.moveNext$0();) {
        key = t1.get$current(t1);
        entry = new A._MapEntry(this, key, t2.$index(map2, key));
        count = equalElementCounts.$index(0, entry);
        if (count == null || count === 0)
          return false;
        equalElementCounts.$indexSet(0, entry, count - 1);
      }
      return true;
    },
    hash$1(_, map) {
      var t2, t3, t4, t5, hash, key, keyHash, t6,
        t1 = this.$ti;
      t1._eval$1("Map<1,2>?")._as(map);
      for (t2 = J.getInterceptor$x(map), t3 = J.get$iterator$ax(t2.get$keys(map)), t4 = this._keyEquality, t5 = this._valueEquality, t1 = t1._rest[1], hash = 0; t3.moveNext$0();) {
        key = t3.get$current(t3);
        keyHash = t4.hash$1(0, key);
        t6 = t2.$index(map, key);
        hash = hash + 3 * keyHash + 7 * t5.hash$1(0, t6 == null ? t1._as(t6) : t6) & 2147483647;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.DeepCollectionEquality.prototype = {
    equals$2(e1, e2) {
      var _this = this,
        t1 = type$.Set_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.SetEquality(_this, type$.SetEquality_dynamic).equals$2(e1, e2);
      t1 = type$.Map_dynamic_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).equals$2(e1, e2);
      t1 = type$.List_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.ListEquality(_this, type$.ListEquality_dynamic).equals$2(e1, e2);
      t1 = type$.Iterable_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.IterableEquality(_this, type$.IterableEquality_dynamic).equals$2(e1, e2);
      return J.$eq$(e1, e2);
    },
    hash$1(_, o) {
      var _this = this;
      if (type$.Set_dynamic._is(o))
        return new A.SetEquality(_this, type$.SetEquality_dynamic).hash$1(0, o);
      if (type$.Map_dynamic_dynamic._is(o))
        return new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).hash$1(0, o);
      if (type$.List_dynamic._is(o))
        return new A.ListEquality(_this, type$.ListEquality_dynamic).hash$1(0, o);
      if (type$.Iterable_dynamic._is(o))
        return new A.IterableEquality(_this, type$.IterableEquality_dynamic).hash$1(0, o);
      return J.get$hashCode$(o);
    },
    isValidKey$1(o) {
      return true;
    },
    $isEquality: 1
  };
  A.App.prototype = {};
  A.AppState.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$AppState(context), type$._SyncStarIterable_Component);
    },
    build$body$AppState($async$context) {
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [];
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return $async$iterator._async$_current = A.div(A._setArrayType([new A.Home(null)], type$.JSArray_Component), "main", null, null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.AppButton.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$AppButton(context), type$._SyncStarIterable_Component);
    },
    build$body$AppButton($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, t2;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = A._BoxStyles$(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
                t2 = type$.JSArray_Component;
                $async$goto = 2;
                return $async$iterator._async$_current = A.a(A._setArrayType([A.span(A._setArrayType([new A.Text($async$self.label, null)], t2), "label", null, null)], t2), "app-button", $async$self.href, t1, B.Target_blank), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.ContactCard.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$ContactCard(context), type$._SyncStarIterable_Component);
    },
    build$body$ContactCard($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                $async$goto = 2;
                return $async$iterator._async$_current = A.a(A._setArrayType([A.i(A._setArrayType([], t1), $async$self.icon + " c-icon"), A.span(A._setArrayType([new A.Text($async$self.title, null)], t1), "c-title", null, null), A.span(A._setArrayType([new A.Text($async$self.description, null)], t1), "c-description", null, null)], t1), "contact-card", $async$self.action, null, B.Target_blank), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.Footer.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$Footer(context), type$._SyncStarIterable_Component);
    },
    build$body$Footer($async$context) {
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, t2, t3;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                t2 = A.span(A._setArrayType([new A.Text("Developed in \ud83d\udc99 with", null)], t1), null, null, null);
                t3 = A._TextStyles$(null, new A._HexColor("#1977d1"), null, null, null, null, null, null, null, null, null, null, null, null, null);
                $async$goto = 2;
                return $async$iterator._async$_current = new A.DomComponent("footer", null, "foot", null, null, null, null, A._setArrayType([t2, A.a(A._setArrayType([new A.Text("Jaspr", null)], t1), "tech-name", "https://docs.page/schultek/jaspr", t3, B.Target_blank)], t1), null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.NavBar.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$NavBar(context), type$._SyncStarIterable_Component);
    },
    build$body$NavBar($async$context) {
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                $async$goto = 2;
                return $async$iterator._async$_current = A.section(A._setArrayType([A.div(A._setArrayType([A.span(A._setArrayType([new A.Text("< ", null)], t1), null, null, null), A.span(A._setArrayType([new A.Text("Rohin", null)], t1), "brand", null, null), A.span(A._setArrayType([new A.Text(" />", null)], t1), null, null, null)], t1), null, null, null), A.div(A._setArrayType([A.a(A._setArrayType([new A.Text("HOME", null)], t1), "navbar-label", "#", null, null), A.a(A._setArrayType([new A.Text("ABOUT", null)], t1), "navbar-label", "#about", null, null), A.a(A._setArrayType([new A.Text("SERVICES", null)], t1), "navbar-label", "#services", null, null), A.a(A._setArrayType([new A.Text("PROJECTS", null)], t1), "navbar-label", "#projects", null, null), A.a(A._setArrayType([new A.Text("CONTACT", null)], t1), "navbar-label", "#contact", null, null), A.AppButton$("https://drive.google.com/file/d/1tVGiW1dwgUmNTEBpqwp9gLFMTrM18Fps/view?usp=sharing", "RESUME")], t1), "labels", null, null)], t1), "navbar"), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.ProjectCard.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$ProjectCard(context), type$._SyncStarIterable_Component);
    },
    build$body$ProjectCard($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, t2;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = A._setArrayType([new A._BackgroundStyles(null, null, null, new A.ImageStyle("url(" + $async$self.banner + ")"), null, null, null, B.C_BackgroundSize)], type$.JSArray_Styles);
                t2 = type$.JSArray_Component;
                $async$goto = 2;
                return $async$iterator._async$_current = A.a(A._setArrayType([A.div(A._setArrayType([], t2), "banner-image", null, new A._CombinedStyles(t1)), A.img(null, 40, $async$self.icon), A.span(A._setArrayType([new A.Text($async$self.title, null)], t2), "service-title", null, null), A.span(A._setArrayType([new A.Text($async$self.description, null)], t2), "service-description", null, null)], t2), "banner-card", $async$self.url, null, B.Target_blank), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.ServiceCard.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$ServiceCard(context), type$._SyncStarIterable_Component);
    },
    build$body$ServiceCard($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                $async$goto = 2;
                return $async$iterator._async$_current = A.div(A._setArrayType([A.img(null, 80, $async$self.icon), A.span(A._setArrayType([new A.Text($async$self.label, null)], t1), "service-title", null, null)], t1), "service-card", null, null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.defaultJasprOptions_closure.prototype = {
    call$0() {
      var t1 = A.List_List$_of($.$get$AppButton_styles(), type$.StyleRule);
      B.JSArray_methods.addAll$1(t1, $.$get$ContactCard_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$Footer_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$NavBar_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$ProjectCard_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$ServiceCard_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$Home_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$AboutMeSection_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$BasicInfoSection_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$ContactSection_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$ProjectsSections_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$ServicesSection_styles());
      B.JSArray_methods.addAll$1(t1, $.$get$AppState_styles());
      return t1;
    },
    $signature: 74
  };
  A.About.prototype = {};
  A._$About.prototype = {
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError0());
    }
  };
  A._$AboutImpl.prototype = {
    get$tech() {
      var t1 = this._tech;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_String);
    },
    get$works() {
      var t1 = this._works;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Work);
    },
    toString$0(_) {
      var _this = this;
      return "About(description: " + _this.description + ", tech: " + A.S(_this.get$tech()) + ", works: " + A.S(_this.get$works()) + ", heading: " + _this.heading + ")";
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._$AboutImpl) {
            t2 = other.description === _this.description;
            if (t2 || t2)
              if (B.C_DeepCollectionEquality.equals$2(other._tech, _this._tech))
                if (B.C_DeepCollectionEquality.equals$2(other._works, _this._works)) {
                  t1 = other.heading === _this.heading;
                  t1 = t1 || t1;
                }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.description, B.C_DeepCollectionEquality.hash$1(0, _this._tech), B.C_DeepCollectionEquality.hash$1(0, _this._works), _this.heading, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A._$$AboutImplToJson(this);
    },
    $isAbout: 1
  };
  A._$$AboutImplFromJson_closure.prototype = {
    call$1(e) {
      return A._asString(e);
    },
    $signature: 44
  };
  A._$$AboutImplFromJson_closure0.prototype = {
    call$1(e) {
      var t1;
      type$.Map_String_dynamic._as(e);
      t1 = J.getInterceptor$asx(e);
      return new A._$WorkImpl(A._asString(t1.$index(e, "image")), A._asString(t1.$index(e, "url")), B.JSNumber_methods.toInt$0(A._asNum(t1.$index(e, "height"))));
    },
    $signature: 100
  };
  A._$$AboutImplToJson_closure.prototype = {
    call$1(e) {
      return type$.Work._as(e).toJson$0();
    },
    $signature: 77
  };
  A._About_Object__$About.prototype = {};
  A.Basic.prototype = {};
  A._$Basic.prototype = {
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError1());
    }
  };
  A._$BasicImpl.prototype = {
    get$photos() {
      var t1 = this._photos;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_String);
    },
    toString$0(_) {
      var _this = this;
      return "Basic(firstName: " + _this.firstName + ", lastName: " + _this.lastName + ", age: " + _this.age + ", email: " + _this.email + ", phone: " + _this.phone + ", address: " + _this.address + ", photos: " + A.S(_this.get$photos()) + ", resume: " + _this.resume + ")";
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._$BasicImpl) {
            t2 = other.firstName === _this.firstName;
            if (t2 || t2) {
              t2 = other.lastName === _this.lastName;
              if (t2 || t2) {
                t2 = other.age === _this.age;
                if (t2 || t2) {
                  t2 = other.email === _this.email;
                  if (t2 || t2) {
                    t2 = other.phone === _this.phone;
                    if (t2 || t2) {
                      t2 = other.address === _this.address;
                      if (t2 || t2)
                        if (B.C_DeepCollectionEquality.equals$2(other._photos, _this._photos)) {
                          t1 = other.resume === _this.resume;
                          t1 = t1 || t1;
                        }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.firstName, _this.lastName, _this.age, _this.email, _this.phone, _this.address, B.C_DeepCollectionEquality.hash$1(0, _this._photos), _this.resume);
    },
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["firstName", _this.firstName, "lastName", _this.lastName, "age", _this.age, "email", _this.email, "phone", _this.phone, "address", _this.address, "photos", _this.get$photos(), "resume", _this.resume], type$.String, type$.dynamic);
    },
    $isBasic: 1
  };
  A._$$BasicImplFromJson_closure.prototype = {
    call$1(e) {
      return A._asString(e);
    },
    $signature: 44
  };
  A._Basic_Object__$Basic.prototype = {};
  A.Contact.prototype = {};
  A._$Contact.prototype = {
    get$icon(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    get$title(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    get$description(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    get$action(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError2());
    }
  };
  A._$ContactImpl.prototype = {
    toString$0(_) {
      var _this = this;
      return "Contact(icon: " + _this.icon + ", title: " + _this.title + ", description: " + _this.description + ", action: " + _this.action + ")";
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._$ContactImpl) {
            t2 = other.icon === _this.icon;
            if (t2 || t2) {
              t2 = other.title === _this.title;
              if (t2 || t2) {
                t2 = other.description === _this.description;
                if (t2 || t2) {
                  t1 = other.action === _this.action;
                  t1 = t1 || t1;
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.icon, _this.title, _this.description, _this.action, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["icon", _this.icon, "title", _this.title, "description", _this.description, "action", _this.action], type$.String, type$.dynamic);
    },
    $isContact: 1,
    get$icon(receiver) {
      return this.icon;
    },
    get$title(receiver) {
      return this.title;
    },
    get$description(receiver) {
      return this.description;
    },
    get$action(receiver) {
      return this.action;
    }
  };
  A._Contact_Object__$Contact.prototype = {};
  A.Data.prototype = {};
  A._$Data.prototype = {
    get$basic() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    },
    get$socials() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    },
    get$about() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    },
    get$services() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    },
    get$projects() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    },
    get$contact() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError());
    }
  };
  A._$DataImpl.prototype = {
    get$socials() {
      var t1 = this._socials;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Social);
    },
    get$services() {
      var t1 = this._services;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_ServiceData);
    },
    get$projects() {
      var t1 = this._projects;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Project);
    },
    get$contact() {
      var t1 = this._contact;
      return new A.EqualUnmodifiableListView(t1, t1, type$.EqualUnmodifiableListView_Contact);
    },
    toString$0(_) {
      var _this = this;
      return "Data(basic: " + _this.basic.toString$0(0) + ", socials: " + A.S(_this.get$socials()) + ", about: " + _this.about.toString$0(0) + ", services: " + A.S(_this.get$services()) + ", projects: " + A.S(_this.get$projects()) + ", contact: " + A.S(_this.get$contact()) + ")";
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._$DataImpl) {
            t2 = other.basic;
            t3 = _this.basic;
            if (t2 === t3 || t2.$eq(0, t3))
              if (B.C_DeepCollectionEquality.equals$2(other._socials, _this._socials)) {
                t1 = other.about;
                t2 = _this.about;
                t1 = (t1 === t2 || t1.$eq(0, t2)) && B.C_DeepCollectionEquality.equals$2(other._services, _this._services) && B.C_DeepCollectionEquality.equals$2(other._projects, _this._projects) && B.C_DeepCollectionEquality.equals$2(other._contact, _this._contact);
              }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.basic, B.C_DeepCollectionEquality.hash$1(0, _this._socials), _this.about, B.C_DeepCollectionEquality.hash$1(0, _this._services), B.C_DeepCollectionEquality.hash$1(0, _this._projects), B.C_DeepCollectionEquality.hash$1(0, _this._contact), B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A._$$DataImplToJson(this);
    },
    $isData: 1,
    get$basic() {
      return this.basic;
    },
    get$about() {
      return this.about;
    }
  };
  A._$$DataImplFromJson_closure.prototype = {
    call$1(e) {
      var t1;
      type$.Map_String_dynamic._as(e);
      t1 = J.getInterceptor$asx(e);
      return new A._$SocialImpl(A._asString(t1.$index(e, "icon")), A._asString(t1.$index(e, "url")));
    },
    $signature: 78
  };
  A._$$DataImplFromJson_closure0.prototype = {
    call$1(e) {
      var t1;
      type$.Map_String_dynamic._as(e);
      t1 = J.getInterceptor$asx(e);
      return new A._$ServiceDataImpl(A._asString(t1.$index(e, "icon")), A._asString(t1.$index(e, "title")));
    },
    $signature: 79
  };
  A._$$DataImplFromJson_closure1.prototype = {
    call$1(e) {
      var t1;
      type$.Map_String_dynamic._as(e);
      t1 = J.getInterceptor$asx(e);
      return new A._$ProjectImpl(A._asString(t1.$index(e, "banner")), A._asString(t1.$index(e, "icon")), A._asString(t1.$index(e, "title")), A._asString(t1.$index(e, "description")), A._asString(t1.$index(e, "link")));
    },
    $signature: 80
  };
  A._$$DataImplFromJson_closure2.prototype = {
    call$1(e) {
      var t1;
      type$.Map_String_dynamic._as(e);
      t1 = J.getInterceptor$asx(e);
      return new A._$ContactImpl(A._asString(t1.$index(e, "icon")), A._asString(t1.$index(e, "title")), A._asString(t1.$index(e, "description")), A._asString(t1.$index(e, "action")));
    },
    $signature: 81
  };
  A._$$DataImplToJson_closure.prototype = {
    call$1(e) {
      return type$.Social._as(e).toJson$0();
    },
    $signature: 82
  };
  A._$$DataImplToJson_closure0.prototype = {
    call$1(e) {
      return type$.ServiceData._as(e).toJson$0();
    },
    $signature: 83
  };
  A._$$DataImplToJson_closure1.prototype = {
    call$1(e) {
      return type$.Project._as(e).toJson$0();
    },
    $signature: 84
  };
  A._$$DataImplToJson_closure2.prototype = {
    call$1(e) {
      return type$.Contact._as(e).toJson$0();
    },
    $signature: 85
  };
  A._Data_Object__$Data.prototype = {};
  A.Project.prototype = {};
  A._$Project.prototype = {
    get$banner() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$icon(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$title(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$description(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    get$link() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError3());
    }
  };
  A._$ProjectImpl.prototype = {
    toString$0(_) {
      var _this = this;
      return "Project(banner: " + _this.banner + ", icon: " + _this.icon + ", title: " + _this.title + ", description: " + _this.description + ", link: " + _this.link + ")";
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._$ProjectImpl) {
            t2 = other.banner === _this.banner;
            if (t2 || t2) {
              t2 = other.icon === _this.icon;
              if (t2 || t2) {
                t2 = other.title === _this.title;
                if (t2 || t2) {
                  t2 = other.description === _this.description;
                  if (t2 || t2) {
                    t1 = other.link === _this.link;
                    t1 = t1 || t1;
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.banner, _this.icon, _this.title, _this.description, _this.link, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["banner", _this.banner, "icon", _this.icon, "title", _this.title, "description", _this.description, "link", _this.link], type$.String, type$.dynamic);
    },
    $isProject: 1,
    get$banner() {
      return this.banner;
    },
    get$icon(receiver) {
      return this.icon;
    },
    get$title(receiver) {
      return this.title;
    },
    get$description(receiver) {
      return this.description;
    },
    get$link() {
      return this.link;
    }
  };
  A._Project_Object__$Project.prototype = {};
  A.ServiceData.prototype = {};
  A._$ServiceData.prototype = {
    get$icon(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    },
    get$title(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError4());
    }
  };
  A._$ServiceDataImpl.prototype = {
    toString$0(_) {
      return "ServiceData(icon: " + this.icon + ", title: " + this.title + ")";
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._$ServiceDataImpl) {
            t2 = other.icon === _this.icon;
            if (t2 || t2) {
              t1 = other.title === _this.title;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.icon, this.title, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["icon", this.icon, "title", this.title], type$.String, type$.dynamic);
    },
    $isServiceData: 1,
    get$icon(receiver) {
      return this.icon;
    },
    get$title(receiver) {
      return this.title;
    }
  };
  A._ServiceData_Object__$ServiceData.prototype = {};
  A.Social.prototype = {};
  A._$Social.prototype = {
    get$icon(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError6());
    },
    get$url(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError6());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError6());
    }
  };
  A._$SocialImpl.prototype = {
    toString$0(_) {
      return "Social(icon: " + this.icon + ", url: " + this.url + ")";
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._$SocialImpl) {
            t2 = other.icon === _this.icon;
            if (t2 || t2) {
              t1 = other.url === _this.url;
              t1 = t1 || t1;
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this.icon, this.url, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["icon", this.icon, "url", this.url], type$.String, type$.dynamic);
    },
    $isSocial: 1,
    get$icon(receiver) {
      return this.icon;
    },
    get$url(receiver) {
      return this.url;
    }
  };
  A._Social_Object__$Social.prototype = {};
  A.Work.prototype = {};
  A._$Work.prototype = {
    get$image(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError5());
    },
    get$url(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError5());
    },
    get$height(_) {
      return A.throwExpression($.$get$_privateConstructorUsedError5());
    },
    toJson$0() {
      return A.throwExpression($.$get$_privateConstructorUsedError5());
    }
  };
  A._$WorkImpl.prototype = {
    toString$0(_) {
      return "Work(image: " + this.image + ", url: " + this.url + ", height: " + this.height + ")";
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._$WorkImpl) {
            t2 = other.image === _this.image;
            if (t2 || t2) {
              t2 = other.url === _this.url;
              if (t2 || t2) {
                t1 = other.height === _this.height;
                t1 = t1 || t1;
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.getRuntimeTypeOfDartObject(_this), _this.image, _this.url, _this.height, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["image", this.image, "url", this.url, "height", this.height], type$.String, type$.dynamic);
    },
    $isWork: 1,
    get$image(receiver) {
      return this.image;
    },
    get$url(receiver) {
      return this.url;
    },
    get$height(receiver) {
      return this.height;
    }
  };
  A._Work_Object__$Work.prototype = {};
  A.Home.prototype = {
    fetchData$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Data),
        $async$returnValue, t1;
      var $async$fetchData$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A.File_File(A.Directory_current()._io$_path + "/web/data/data.json");
              $async$returnValue = A._$$DataImplFromJson(type$.Map_String_dynamic._as(B.C_JsonCodec.decode$2$reviver(0, t1._tryDecode$2(t1.readAsBytesSync$0(), B.C_Utf8Codec), null)));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$fetchData$0, $async$completer);
    },
    build$1(context) {
      return this.build$body$Home(context);
    },
    build$body$Home(context) {
      var $async$build$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        switch ($async$errorCode) {
          case 2:
            $async$next = $async$nextWhenCanceled;
            $async$goto = $async$next.pop();
            break;
          case 1:
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncStarHelper($async$self.fetchData$0(), $async$build$1, $async$controller);
            case 3:
              // returning from await.
              data = $async$result;
              $async$goto = 4;
              $async$nextWhenCanceled = [1];
              return A._asyncStarHelper(A._IterationMarker_yieldSingle(A.div(A._setArrayType([new A.NavBar(null), new A.BasicInfoSection(data.get$basic(), data.get$socials(), null), new A.AboutMeSection(data.get$about(), data.get$basic(), null), new A.ServicesSection(data.get$services(), null), new A.ProjectsSections(data.get$projects(), null), new A.ContactSection(data.get$contact(), null), new A.Footer(null)], type$.JSArray_Component), "home-body", null, null)), $async$build$1, $async$controller);
            case 4:
              // after yield
            case 1:
              // return
              return A._asyncStarHelper(null, 0, $async$controller);
            case 2:
              // rethrow
              return A._asyncStarHelper($async$errorStack.at(-1), 1, $async$controller);
          }
      });
      var $async$goto = 0,
        $async$controller = A._makeAsyncStarStreamController($async$build$1, type$.Component),
        $async$nextWhenCanceled, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, data;
      return A._streamOfController($async$controller);
    }
  };
  A.AboutMeSection.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$AboutMeSection(context), type$._SyncStarIterable_Component);
    },
    build$body$AboutMeSection($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t1, t2, t3, t4, t5;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                t2 = A.span(A._setArrayType([new A.Text("About Me", null)], t1), "title", "about", null);
                t3 = A.span(A._setArrayType([new A.Text("Get to know me :)", null)], t1), "subtitle", null, null);
                t4 = A.div(A._setArrayType([], t1), "profile-picture", null, null);
                t5 = A._TextStyles$(null, B._HexColor_9DR, null, null, null, null, null, null, null, null, null, null, null, null, null);
                t5 = A.span(A._setArrayType([new A.Text("Who am I?", null)], t1), "intro-label", null, t5);
                t6 = $async$self.about;
                t7 = A.span(A._setArrayType([new A.Text(t6.heading, null)], t1), "intro-heading", null, null);
                t8 = A._TextStyles$(null, B._NamedColor_lightGrey, null, null, null, null, null, null, null, null, null, null, null, null, null);
                t8 = A.span(A._setArrayType([new A.Text(t6.description, null)], t1), "intro-details", null, t8);
                t9 = A.div(A._setArrayType([], t1), "divider", null, null);
                t10 = A._TextStyles$(null, B._HexColor_9DR, null, null, null, null, null, null, null, null, null, null, null, null, null);
                t10 = A.span(A._setArrayType([new A.Text("Technologies I have worked with:", null)], t1), "tech-label", null, t10);
                t11 = A._setArrayType([], t1);
                for (t12 = J.get$iterator$ax(t6.get$tech()); t12.moveNext$0();) {
                  t13 = t12.get$current(t12);
                  t11.push(new A.DomComponent("span", null, null, null, null, null, null, A._setArrayType([A.i(A._setArrayType([], t1), "fa-solid fa-play play-icon"), new A.DomComponent("span", null, "tech-item", null, null, null, null, A._setArrayType([new A.Text(t13, null)], t1), null)], t1), null));
                }
                t11 = A.div(t11, "tech-stack", null, null);
                t12 = A.div(A._setArrayType([], t1), "divider", null, null);
                t13 = $async$self.basic;
                t14 = A.div(A._setArrayType([A.div(A._setArrayType([A.span(A._setArrayType([new A.Text("Name: ", null)], t1), "personal-label", null, null), A.span(A._setArrayType([new A.Text(t13.firstName + " " + t13.lastName, null)], t1), "personal-value", null, null)], t1), null, null, null), A.div(A._setArrayType([A.span(A._setArrayType([new A.Text("Email: ", null)], t1), "personal-label", null, null), A.span(A._setArrayType([new A.Text(t13.email, null)], t1), "personal-value", null, null)], t1), null, null, null)], t1), "personal-row", null, null);
                t15 = A._BoxStyles$(null, null, null, null, new A._PixelsUnit("px", 15), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
                t15 = A.div(A._setArrayType([], t1), null, null, t15);
                t16 = A.div(A._setArrayType([A.div(A._setArrayType([A.span(A._setArrayType([new A.Text("Age: ", null)], t1), "personal-label", null, null), A.span(A._setArrayType([new A.Text(B.JSInt_methods.toString$0(t13.age), null)], t1), "personal-value", null, null)], t1), null, null, null), A.div(A._setArrayType([A.span(A._setArrayType([new A.Text("From: ", null)], t1), "personal-label", null, null), A.span(A._setArrayType([new A.Text(t13.address, null)], t1), "personal-value", null, null)], t1), null, null, null)], t1), "personal-row", null, null);
                t17 = A._BoxStyles$(null, null, null, null, new A._PixelsUnit("px", 25), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
                t17 = A.div(A._setArrayType([], t1), null, null, t17);
                t13 = A.AppButton$(t13.resume, "RESUME");
                t18 = A._BoxStyles$(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, new A._PixelsUnit("px", 80));
                t18 = A._setArrayType([t13, A.div(A._setArrayType([], t1), "divider", null, t18)], t1);
                for (t6 = J.get$iterator$ax(t6.get$works()); t6.moveNext$0();) {
                  t13 = t6.get$current(t6);
                  t19 = t13.get$url(t13);
                  t20 = t13.get$image(t13);
                  t18.push(A.a(A._setArrayType([A.img(null, t13.get$height(t13), t20)], t1), "work-item", t19, null, B.Target_blank));
                }
                $async$goto = 2;
                return $async$iterator._async$_current = A.section(A._setArrayType([t2, t3, A.div(A._setArrayType([t4, A.div(A._setArrayType([t5, t7, t8, t9, t10, t11, t12, t14, t15, t16, t17, A.div(t18, "work-row", null, null)], t1), "about-details", null, null)], t1), "about-section-body", null, null)], t1), "about-me-section"), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.BasicInfoSection.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$BasicInfoSection(context), type$._SyncStarIterable_Component);
    },
    build$body$BasicInfoSection($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t5, t6, t7, t8, t9, t1, t2, t3, t4;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                t2 = A.div(A._setArrayType([A.span(A._setArrayType([new A.Text("WELCOME TO MY PORTFOLIO", null)], t1), "welcome-text", null, null), A.img("wave", 35, "images/hi.gif")], t1), "welcome", null, null);
                t3 = $async$self.basic;
                t4 = A.h1(A._setArrayType([new A.Text(t3.firstName, null)], t1), "first-name");
                t3 = A.h1(A._setArrayType([new A.Text(t3.lastName, null)], t1), "last-name");
                t5 = A.span(A._setArrayType([A.i(A._setArrayType([], t1), "fa-solid fa-play play-icon"), A.span(A._setArrayType([new A.Text("Web Development Enthusiast", null)], t1), "dynamic-subtitles", null, null)], t1), "subtitle", null, null);
                t6 = A._setArrayType([], t1);
                for (t7 = J.get$iterator$ax($async$self.socials); t7.moveNext$0();) {
                  t8 = t7.get$current(t7);
                  t9 = t8.get$url(t8);
                  t8 = t8.get$icon(t8);
                  t6.push(A.a(A._setArrayType([A.i(A._setArrayType([], t1), t8)], t1), "social-icon", t9, null, B.Target_blank));
                }
                $async$goto = 2;
                return $async$iterator._async$_current = A.section(A._setArrayType([A.div(A._setArrayType([t2, t4, t3, t5, A.div(t6, "socials", null, null)], t1), "info", null, null), A.div(A._setArrayType([], t1), "main-image", null, null)], t1), "info-section"), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.ContactSection.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$ContactSection(context), type$._SyncStarIterable_Component);
    },
    build$body$ContactSection($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t5, t6, t1, t2, t3, t4;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                t2 = A.span(A._setArrayType([new A.Text("Get in Touch", null)], t1), "title", null, null);
                t3 = A.span(A._setArrayType([new A.Text("Let's build something together :)", null)], t1), "subtitle", null, null);
                t4 = A._setArrayType([], t1);
                for (t5 = J.get$iterator$ax($async$self.contacts); t5.moveNext$0();) {
                  t6 = t5.get$current(t5);
                  t4.push(new A.ContactCard(t6.get$icon(t6), t6.get$title(t6), t6.get$description(t6), t6.get$action(t6), null));
                }
                $async$goto = 2;
                return $async$iterator._async$_current = A.section(A._setArrayType([t2, t3, A.div(t4, "contact-body", "contact", null)], t1), "contact-section"), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.ProjectsSections.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$ProjectsSections(context), type$._SyncStarIterable_Component);
    },
    build$body$ProjectsSections($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t5, t6, t7, t8, t1, t2, t3, t4;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                t2 = A.span(A._setArrayType([new A.Text("Portfolio", null)], t1), "title", null, null);
                t3 = A.span(A._setArrayType([new A.Text("Here are few samples of my work :)", null)], t1), "subtitle", null, null);
                t4 = A._setArrayType([], t1);
                for (t5 = J.get$iterator$ax($async$self.projects); t5.moveNext$0();) {
                  t6 = t5.get$current(t5);
                  t7 = t6.get$banner();
                  t8 = t6.get$icon(t6);
                  t4.push(new A.ProjectCard(t6.get$title(t6), t6.get$description(t6), t8, t7, t6.get$link(), null));
                }
                t4 = A.div(t4, "section-body-projects", "projects", null);
                t5 = A._BoxStyles$(null, null, null, null, new A._PixelsUnit("px", 45), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
                $async$goto = 2;
                return $async$iterator._async$_current = A.section(A._setArrayType([t2, t3, t4, A.div(A._setArrayType([], t1), null, null, t5), A.AppButton$("https://github.com/rohinvaidya?tab=repositories", "See more")], t1), "projects-section"), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.ServicesSection.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$ServicesSection(context), type$._SyncStarIterable_Component);
    },
    build$body$ServicesSection($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t5, t6, t1, t2, t3, t4;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.JSArray_Component;
                t2 = A.span(A._setArrayType([new A.Text("What I can do?", null)], t1), "title", null, null);
                t3 = A.span(A._setArrayType([new A.Text("I may not be perfect but surely I'm of some use :)", null)], t1), "subtitle", null, null);
                t4 = A._setArrayType([], t1);
                for (t5 = J.get$iterator$ax($async$self.services); t5.moveNext$0();) {
                  t6 = t5.get$current(t5);
                  t4.push(new A.ServiceCard(t6.get$icon(t6), t6.get$title(t6), null));
                }
                $async$goto = 2;
                return $async$iterator._async$_current = A.section(A._setArrayType([t2, t3, A.div(t4, "section-body", "services", null)], t1), "services-section"), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.EqualUnmodifiableListView.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this.$ti._is(other) && A.getRuntimeTypeOfDartObject(other) === A.getRuntimeTypeOfDartObject(this) && other._freezed_annotation$_source === this._freezed_annotation$_source;
    },
    get$hashCode(_) {
      return A.Object_hash(A.getRuntimeTypeOfDartObject(this), this._freezed_annotation$_source, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.BaseClient.prototype = {$isClient0: 1};
  A.BaseRequest.prototype = {
    finalize$0() {
      if (this._finalized)
        throw A.wrapException(A.StateError$("Can't finalize a finalized Request."));
      this._finalized = true;
      return B.ByteStream__EmptyStream;
    },
    _checkFinalized$0() {
      if (!this._finalized)
        return;
      throw A.wrapException(A.StateError$("Can't modify a finalized Request."));
    },
    toString$0(_) {
      return this.method + " " + this.url.toString$0(0);
    }
  };
  A.BaseRequest_closure.prototype = {
    call$2(key1, key2) {
      return A._asString(key1).toLowerCase() === A._asString(key2).toLowerCase();
    },
    $signature: 173
  };
  A.BaseRequest_closure0.prototype = {
    call$1(key) {
      return B.JSString_methods.get$hashCode(A._asString(key).toLowerCase());
    },
    $signature: 87
  };
  A.BaseResponse.prototype = {
    BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(statusCode, contentLength, headers, isRedirect, persistentConnection, reasonPhrase, request) {
      var t1 = this.statusCode;
      if (t1 < 100)
        throw A.wrapException(A.ArgumentError$("Invalid status code " + t1 + ".", null));
      else {
        t1 = this.contentLength;
        if (t1 != null && t1 < 0)
          throw A.wrapException(A.ArgumentError$("Invalid content length " + A.S(t1) + ".", null));
      }
    }
  };
  A.BrowserClient.prototype = {
    send$1(_, request) {
      return this.send$body$BrowserClient(0, request);
    },
    send$body$BrowserClient(_, request) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.StreamedResponse),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, bodyBytes, t1, _0_0, contentLength, header, response, contentLengthHeader, contentLength0, headers, e, st, t2, _this, t3, t4, t5, t6, t7, result, exception, $async$exception;
      var $async$send$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._isClosed)
                throw A.wrapException(A.ClientException$("HTTP request failed. Client is already closed.", request.url));
              request.super$BaseRequest$finalize();
              t2 = request._streamed_request$_controller;
              $async$goto = 3;
              return A._asyncAwait(new A.ByteStream(new A._ControllerStream(t2, A._instanceType(t2)._eval$1("_ControllerStream<1>"))).toBytes$0(), $async$send$1);
            case 3:
              // returning from await.
              bodyBytes = $async$result;
              $async$handler = 5;
              t2 = request.url;
              _this = t2.toString$0(0);
              t3 = !J.get$isEmpty$asx(bodyBytes) ? bodyBytes : null;
              t4 = type$.String;
              t1 = A.LinkedHashMap_LinkedHashMap$_empty(t4, type$.Object);
              _0_0 = null;
              contentLength = null;
              if (_0_0 != null) {
                contentLength = _0_0;
                J.$indexSet$ax(t1, "content-length", contentLength);
              }
              for (t5 = request.headers, t5 = new A.LinkedHashMapEntriesIterable(t5, A._instanceType(t5)._eval$1("LinkedHashMapEntriesIterable<1,2>")).get$iterator(0); t5.moveNext$0();) {
                t6 = t5.__js_helper$_current;
                t6.toString;
                header = t6;
                J.$indexSet$ax(t1, header.key, header.value);
              }
              t1 = A.jsify(t1);
              t1.toString;
              t5 = type$.JSObject;
              t5._as(t1);
              t6 = t5._as($async$self._abortController.signal);
              t7 = request._followRedirects ? "follow" : "error";
              $async$goto = 8;
              return A._asyncAwait(A.promiseToFuture(t5._as(init.G.fetch(_this, {method: request.method, headers: t1, body: t3, credentials: "same-origin", redirect: t7, signal: t6})), t5), $async$send$1);
            case 8:
              // returning from await.
              response = $async$result;
              contentLengthHeader = A._asStringQ(t5._as(response.headers).get("content-length"));
              contentLength0 = contentLengthHeader != null ? A.Primitives_parseInt(contentLengthHeader, null) : null;
              if (contentLength0 == null && contentLengthHeader != null) {
                t1 = A.ClientException$("Invalid content-length header [" + contentLengthHeader + "].", t2);
                throw A.wrapException(t1);
              }
              headers = A.LinkedHashMap_LinkedHashMap$_empty(t4, t4);
              t1 = t5._as(response.headers);
              t2 = new A.BrowserClient_send_closure(headers);
              if (typeof t2 == "function")
                A.throwExpression(A.ArgumentError$("Attempting to rewrap a JS function.", null));
              result = function(_call, f) {
                return function(arg1, arg2, arg3) {
                  return _call(f, arg1, arg2, arg3, arguments.length);
                };
              }(A._callDartFunctionFast3, t2);
              result[$.$get$DART_CLOSURE_PROPERTY_NAME()] = t2;
              t1.forEach(result);
              t1 = A._readBody(request, response);
              t2 = A._asInt(response.status);
              t3 = headers;
              t4 = contentLength0;
              A.Uri_parse(A._asString(response.url));
              t5 = A._asString(response.statusText);
              t1 = new A.StreamedResponseV2(A.toByteStream(t1), t2, t4, t3, false);
              t1.BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(t2, t4, t3, false, true, t5, request);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 7;
              break;
            case 5:
              // catch
              $async$handler = 4;
              $async$exception = $async$errorStack.pop();
              e = A.unwrapException($async$exception);
              st = A.getTraceFromException($async$exception);
              A._rethrowAsClientException(e, st, request);
              // goto after finally
              $async$goto = 7;
              break;
            case 4:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 7:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$send$1, $async$completer);
    }
  };
  A.BrowserClient_send_closure.prototype = {
    call$3(value, header, _) {
      A._asString(value);
      this.headers.$indexSet(0, A._asString(header).toLowerCase(), value);
    },
    call$2(value, header) {
      return this.call$3(value, header, null);
    },
    $signature: 88
  };
  A._readBody_closure.prototype = {
    call$1(_) {
      return null;
    },
    $signature: 3
  };
  A._readBody_closure0.prototype = {
    call$1(_) {
      type$.Object._as(_);
      return this._box_0.isError;
    },
    $signature: 89
  };
  A.ByteStream.prototype = {
    toBytes$0() {
      var t1 = new A._Future($.Zone__current, type$._Future_Uint8List),
        completer = new A._AsyncCompleter(t1, type$._AsyncCompleter_Uint8List),
        sink = new A._ByteCallbackSink(new A.ByteStream_toBytes_closure(completer), new Uint8Array(1024));
      this.listen$4$cancelOnError$onDone$onError(type$.void_Function_List_int._as(sink.get$add(sink)), true, sink.get$close(sink), completer.get$completeError());
      return t1;
    }
  };
  A.ByteStream_toBytes_closure.prototype = {
    call$1(bytes) {
      return this.completer.complete$1(0, new Uint8Array(A._ensureNativeList(type$.List_int._as(bytes))));
    },
    $signature: 18
  };
  A.ClientException.prototype = {
    toString$0(_) {
      var t1 = this.uri.toString$0(0);
      return "ClientException: " + this.message + ", uri=" + t1;
    },
    $isException: 1
  };
  A.StreamedRequest.prototype = {};
  A.StreamedResponse.prototype = {};
  A.StreamedResponseV2.prototype = {};
  A.CaseInsensitiveMap.prototype = {};
  A.ChunkedCodingDecoder.prototype = {
    startChunkedConversion$1(sink) {
      return new A._Sink(type$.Sink_List_int._as(sink), B._State_boundary_boundary);
    }
  };
  A._Sink.prototype = {
    add$1(_, chunk) {
      type$.List_int._as(chunk);
      return this.addSlice$4(chunk, 0, J.get$length$asx(chunk), false);
    },
    addSlice$4(chunk, start, end, isLast) {
      var output;
      type$.List_int._as(chunk);
      A.RangeError_checkValidRange(start, end, J.get$length$asx(chunk));
      output = this._decode$3(chunk, start, end);
      if (!B.NativeUint8List_methods.get$isEmpty(output))
        this._decoder$_sink.add$1(0, output);
      if (isLast)
        this._decoder$_close$2(chunk, end);
    },
    close$0(_) {
      return this._decoder$_close$0();
    },
    _decoder$_close$2(chunk, index) {
      type$.nullable_List_int._as(chunk);
      if (this._decoder$_state !== B._State_end_end)
        throw A.wrapException(A.FormatException$("Input ended unexpectedly.", chunk, index));
      this._decoder$_sink.close$0(0);
    },
    _decoder$_close$0() {
      return this._decoder$_close$2(null, null);
    },
    _decode$3(bytes, start, end) {
      var assertCurrentChar, buffer, t1, t2, t3, t4, chunkEnd, _this = this, _null = null, _s5_ = "_size", _box_0 = {};
      _box_0.start = start;
      type$.List_int._as(bytes);
      assertCurrentChar = new A._Sink__decode_assertCurrentChar(_box_0, bytes);
      buffer = new A.Uint8Buffer(new Uint8Array(0), 0);
      for (t1 = type$.Uint8Buffer._eval$1("Iterable<TypedDataBuffer.E>"), t2 = J.getInterceptor$asx(bytes), t3 = start; t3 !== end;)
        switch (_this._decoder$_state) {
          case B._State_boundary_boundary:
            _this.___Sink__size_A = _this._digitForByte$2(bytes, t3);
            _this._decoder$_state = B._State_size_size;
            t3 = ++_box_0.start;
            break;
          case B._State_size_size:
            if (t2.$index(bytes, t3) === 13)
              _this._decoder$_state = B._State_gme;
            else {
              t3 = _this.___Sink__size_A;
              t3 === $ && A.throwLateFieldNI(_s5_);
              _this.___Sink__size_A = (t3 << 4 >>> 0) + _this._digitForByte$2(bytes, _box_0.start);
            }
            t3 = ++_box_0.start;
            break;
          case B._State_gme:
            assertCurrentChar.call$2(10, "LF");
            t3 = _this.___Sink__size_A;
            t3 === $ && A.throwLateFieldNI(_s5_);
            _this._decoder$_state = t3 === 0 ? B._State_w3s : B._State_body_body;
            t4 = ++_box_0.start;
            t3 = t4;
            break;
          case B._State_body_body:
            t4 = _this.___Sink__size_A;
            t4 === $ && A.throwLateFieldNI(_s5_);
            chunkEnd = Math.min(end, t3 + t4);
            t1._as(bytes);
            if (t3 < 0)
              A.throwExpression(A.RangeError$range(t3, 0, _null, "start", _null));
            if (t3 > chunkEnd)
              A.throwExpression(A.RangeError$range(chunkEnd, t3, _null, "end", _null));
            buffer._typed_buffer$_addAll$3(bytes, t3, chunkEnd);
            t3 = _this.___Sink__size_A - (chunkEnd - _box_0.start);
            _this.___Sink__size_A = t3;
            _box_0.start = chunkEnd;
            if (t3 === 0)
              _this._decoder$_state = B._State_zTP;
            t3 = chunkEnd;
            break;
          case B._State_zTP:
            assertCurrentChar.call$2(13, "CR");
            _this._decoder$_state = B._State_epa;
            t3 = ++_box_0.start;
            break;
          case B._State_epa:
            assertCurrentChar.call$2(10, "LF");
            _this._decoder$_state = B._State_boundary_boundary;
            t3 = ++_box_0.start;
            break;
          case B._State_w3s:
            assertCurrentChar.call$2(13, "CR");
            _this._decoder$_state = B._State_g4R;
            t3 = ++_box_0.start;
            break;
          case B._State_g4R:
            assertCurrentChar.call$2(10, "LF");
            _this._decoder$_state = B._State_end_end;
            t3 = ++_box_0.start;
            break;
          case B._State_end_end:
            throw A.wrapException(A.FormatException$("Expected no more data.", bytes, t3));
        }
      return J.asUint8List$2$x(B.NativeUint8List_methods.get$buffer(buffer._typed_buffer$_buffer), 0, buffer._typed_buffer$_length);
    },
    _digitForByte$2(bytes, index) {
      var byte, digit, letter;
      type$.List_int._as(bytes);
      byte = J.$index$asx(bytes, index);
      digit = (48 ^ byte) >>> 0;
      if (digit <= 9)
        return digit;
      else {
        letter = (byte | 32) >>> 0;
        if (97 <= letter && letter <= 102)
          return letter - 97 + 10;
      }
      throw A.wrapException(A.FormatException$("Invalid hexadecimal byte 0x" + B.JSString_methods.toUpperCase$0(B.JSInt_methods.toRadixString$1(byte, 16)) + ".", bytes, index));
    }
  };
  A._Sink__decode_assertCurrentChar.prototype = {
    call$2(char, $name) {
      var t1 = this.bytes,
        t2 = this._box_0;
      if (J.$index$asx(t1, t2.start) !== char)
        throw A.wrapException(A.FormatException$("Expected " + $name + ".", t1, t2.start));
    },
    $signature: 90
  };
  A._State.prototype = {
    _enumToString$0() {
      return "_State." + this._name;
    },
    toString$0(_) {
      return this.name;
    }
  };
  A.MediaType.prototype = {
    change$2$mimeType$parameters(mimeType, parameters) {
      var segments, t1, type, subtype, parameters0, _null = null;
      type$.nullable_Map_String_String._as(parameters);
      if (mimeType != null) {
        segments = mimeType.split("/");
        t1 = segments.length;
        if (t1 !== 2)
          throw A.wrapException(A.FormatException$('Invalid mime type "' + mimeType + '".', _null, _null));
        if (0 >= t1)
          return A.ioore(segments, 0);
        type = segments[0];
        if (1 >= t1)
          return A.ioore(segments, 1);
        subtype = segments[1];
      } else {
        type = _null;
        subtype = type;
      }
      if (type == null)
        type = this.type;
      if (subtype == null)
        subtype = this.subtype;
      if (parameters == null) {
        t1 = type$.String;
        parameters = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      }
      t1 = type$.String;
      parameters0 = A.LinkedHashMap_LinkedHashMap$from(this.parameters, t1, t1);
      parameters0.addAll$1(0, parameters);
      return A.MediaType$(type, subtype, parameters0);
    },
    change$1$parameters(parameters) {
      return this.change$2$mimeType$parameters(null, parameters);
    },
    toString$0(_) {
      var buffer = new A.StringBuffer(""),
        t1 = "" + this.type;
      buffer._contents = t1;
      t1 += "/";
      buffer._contents = t1;
      buffer._contents = t1 + this.subtype;
      t1 = this.parameters;
      J.forEach$1$ax(t1._map, t1.$ti._eval$1("~(MapView.K,MapView.V)")._as(new A.MediaType_toString_closure(buffer)));
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.MediaType_MediaType$parse_closure.prototype = {
    call$0() {
      var t2, t3, t4, t5, parameters, t6, t7, success, t8, value,
        scanner = A.StringScanner$(this.mediaType),
        t1 = $.$get$whitespace();
      scanner.scan$1(t1);
      t2 = $.$get$token();
      scanner.expect$1(t2);
      t3 = scanner.get$lastMatch().$index(0, 0);
      t3.toString;
      scanner.expect$1("/");
      scanner.expect$1(t2);
      t4 = scanner.get$lastMatch().$index(0, 0);
      t4.toString;
      scanner.scan$1(t1);
      t5 = type$.String;
      parameters = A.LinkedHashMap_LinkedHashMap$_empty(t5, t5);
      t5 = scanner.string;
      while (true) {
        t6 = scanner._lastMatch = B.JSString_methods.matchAsPrefix$2(";", t5, scanner._string_scanner$_position);
        t7 = scanner._lastMatchPosition = scanner._string_scanner$_position;
        success = t6 != null;
        t6 = success ? scanner._lastMatchPosition = scanner._string_scanner$_position = t6.get$end(0) : t7;
        if (!success)
          break;
        t6 = scanner._lastMatch = t1.matchAsPrefix$2(0, t5, t6);
        scanner._lastMatchPosition = scanner._string_scanner$_position;
        if (t6 != null)
          scanner._lastMatchPosition = scanner._string_scanner$_position = t6.get$end(0);
        scanner.expect$1(t2);
        if (scanner._string_scanner$_position !== scanner._lastMatchPosition)
          scanner._lastMatch = null;
        t6 = scanner._lastMatch.$index(0, 0);
        t6.toString;
        scanner.expect$1("=");
        t7 = scanner._lastMatch = t2.matchAsPrefix$2(0, t5, scanner._string_scanner$_position);
        t8 = scanner._lastMatchPosition = scanner._string_scanner$_position;
        success = t7 != null;
        if (success) {
          t7 = scanner._lastMatchPosition = scanner._string_scanner$_position = t7.get$end(0);
          t8 = t7;
        } else
          t7 = t8;
        if (success) {
          if (t7 !== t8)
            scanner._lastMatch = null;
          t7 = scanner._lastMatch.$index(0, 0);
          t7.toString;
          value = t7;
        } else
          value = A.expectQuotedString(scanner);
        t7 = scanner._lastMatch = t1.matchAsPrefix$2(0, t5, scanner._string_scanner$_position);
        scanner._lastMatchPosition = scanner._string_scanner$_position;
        if (t7 != null)
          scanner._lastMatchPosition = scanner._string_scanner$_position = t7.get$end(0);
        parameters.$indexSet(0, t6, value);
      }
      scanner.expectDone$0();
      return A.MediaType$(t3, t4, parameters);
    },
    $signature: 91
  };
  A.MediaType_toString_closure.prototype = {
    call$2(attribute, value) {
      var t1, t2, t3;
      A._asString(attribute);
      A._asString(value);
      t1 = this.buffer;
      t1._contents += "; " + attribute + "=";
      t2 = $.$get$nonToken();
      t2 = t2._nativeRegExp.test(value);
      t3 = t1._contents;
      if (t2) {
        t1._contents = t3 + '"';
        t2 = A.stringReplaceAllFuncUnchecked(value, $.$get$_escapedChar(), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(new A.MediaType_toString__closure())), null);
        t1._contents = (t1._contents += t2) + '"';
      } else
        t1._contents = t3 + value;
    },
    $signature: 12
  };
  A.MediaType_toString__closure.prototype = {
    call$1(match) {
      return "\\" + A.S(match.$index(0, 0));
    },
    $signature: 42
  };
  A.expectQuotedString_closure.prototype = {
    call$1(match) {
      var t1 = match.$index(0, 1);
      t1.toString;
      return t1;
    },
    $signature: 42
  };
  A.BaseDocument.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$BaseDocument(context), type$._SyncStarIterable_Component);
    },
    build$body$BaseDocument($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t3, t4, t1, t2;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.String;
                t2 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
                t2.$indexSet(0, "lang", $async$self.lang);
                t3 = type$.JSArray_Component;
                t4 = A._setArrayType([], t3);
                t4.push(new A.DomComponent("meta", null, null, null, A.LinkedHashMap_LinkedHashMap$_literal(["charset", $async$self.charset], t1, t1), null, null, null, null));
                t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
                t1.$indexSet(0, "viewport", $async$self.viewport);
                t1.addAll$1(0, $async$self.meta);
                t4.push(new A.HeadDocument($async$self.title, t1, null));
                t4.push(new A.Style($async$self.styles, null));
                B.JSArray_methods.addAll$1(t4, $async$self.head);
                $async$goto = 2;
                return $async$iterator._async$_current = new A.DomComponent("html", null, null, null, t2, null, null, A._setArrayType([new A.DomComponent("head", null, null, null, null, null, null, t4, null), new A.DomComponent("body", null, null, null, null, null, $async$self.body, null, null)], t3), null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.HeadDocument.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$HeadDocument(context), type$._SyncStarIterable_Component);
    },
    build$body$HeadDocument($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t2, t3, e, t1;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = A._setArrayType([], type$.JSArray_Component);
                t1.push(new A.DomComponent("title", null, null, null, null, null, new A.Text($async$self.title, null), null, null));
                for (t2 = $async$self.meta, t2 = new A.LinkedHashMapEntriesIterable(t2, A._instanceType(t2)._eval$1("LinkedHashMapEntriesIterable<1,2>")).get$iterator(0), t3 = type$.String; t2.moveNext$0();) {
                  e = t2.__js_helper$_current;
                  t1.push(new A.DomComponent("meta", null, null, null, A.LinkedHashMap_LinkedHashMap$_literal(["name", e.key, "content", e.value], t3, t3), null, null, null, null));
                }
                $async$goto = 2;
                return $async$iterator._async$_current = new A.AttachDocument("head", null, t1, null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.AttachDocument.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$AttachDocument(context), type$._SyncStarIterable_Component);
    },
    build$body$AttachDocument($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t2, t3, t4, t1;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = context._binding;
                t1.toString;
                if (!$.AttachAdapter__registered) {
                  t2 = $.$get$AttachAdapter_instance();
                  B.JSArray_methods.add$1(t1.get$_adapters(), t2);
                  $.AttachAdapter__registered = true;
                }
                t2 = $.$get$AttachAdapter_instance().entries;
                t3 = $async$self.target;
                if (t2.$index(0, t3) == null) {
                  t4 = type$.String;
                  t2.$indexSet(0, t3, new A._Record_2_attributes_children(A.LinkedHashMap_LinkedHashMap$_empty(t4, t4), A._setArrayType([], type$.JSArray_Record_2_ChildListRange_and_int)));
                }
                B.JSArray_methods.add$1(t1.get$_adapters(), new A._AttachChildrenAdapter(t3, context));
                $async$goto = 2;
                return $async$iterator._yieldStar$1($async$self.children);
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.AttachAdapter.prototype = {
    apply$1(root) {
      var t1, t2, t3, t4, t5, key, value, t6, t7, t8, t9, beforeNode, nodes, indices, e, index, _i, n,
        _s8_ = "children",
        _0_0 = this.createDocumentStructure$1(root),
        html = _0_0._0,
        head = _0_0._1,
        body = _0_0._2,
        keyFor = new A.AttachAdapter_apply_keyFor();
      for (t1 = this.entries, t1 = new A.LinkedHashMapEntriesIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapEntriesIterable<1,2>")).get$iterator(0), t2 = type$.String, t3 = type$.JSArray_MarkupRenderObject, t4 = type$.Record_2_int_and_int; t1.moveNext$0();) {
        t5 = t1.__js_helper$_current;
        key = t5.key;
        value = t5.value;
        $label1$1: {
          if ("html" === key) {
            t5 = html;
            break $label1$1;
          }
          if ("head" === key) {
            t5 = head;
            break $label1$1;
          }
          if ("body" === key) {
            t5 = body;
            break $label1$1;
          }
          t5 = A.throwExpression(A.StateError$("Unknown target " + key));
        }
        t6 = value._0;
        if (J.get$isNotEmpty$asx(t6)) {
          t7 = t5.attributes;
          if (t7 == null) {
            t7 = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
            t5.set$attributes(0, t7);
          }
          J.addAll$1$ax(t7, t6);
        }
        t6 = value._1;
        t7 = J.getInterceptor$asx(t6);
        if (t7.get$isNotEmpty(t6)) {
          value = t5.__MarkupRenderObject_children_FI;
          if (value === $) {
            t8 = new A.BaseChildNode();
            t9 = new A.BaseChildNode();
            t8.insertNext$1(t9);
            t5.__MarkupRenderObject_children_FI !== $ && A.throwLateFieldADI(_s8_);
            value = t5.__MarkupRenderObject_children_FI = new A.ChildList(t8, t9);
          }
          t8 = new A.MarkupRenderObject(new A.HtmlEscape(B.HtmlEscapeMode_8jw), new A.DomValidator(A.LinkedHashSet_LinkedHashSet$_empty(t2), A.LinkedHashSet_LinkedHashSet$_empty(t2)));
          t8.text = "<!--$-->";
          t8.rawHtml = true;
          t9 = value.find$1(0, t8);
          t8 = t9 == null ? new A.ChildNodeData(t8) : t9;
          t8.remove$0(0);
          beforeNode = value.find$1(0, null);
          if (beforeNode == null)
            value._child_nodes$_last.insertPrev$1(t8);
          else
            beforeNode.insertPrev$1(t8);
          nodes = A._setArrayType([], t3);
          indices = A.LinkedHashMap_LinkedHashMap$_empty(t2, t4);
          for (t6 = t7.get$iterator(t6); t6.moveNext$0();) {
            e = t6.get$current(t6);
            t7 = e._0;
            t7.remove$0(0);
            for (t7 = new A.ChildListIterator(t7.start, t7.end._child_nodes$_next); t7.moveNext$0();) {
              t8 = t7.__ChildListIterator_current_A;
              t8 === $ && A.throwLateFieldNI("current");
              key = keyFor.call$1(t8);
              if (key == null) {
                B.JSArray_methods.add$1(nodes, t8);
                continue;
              }
              index = indices.$index(0, key);
              t9 = index == null;
              if (t9) {
                B.JSArray_methods.add$1(nodes, t8);
                indices.$indexSet(0, key, new A._Record_2(nodes.length - 1, e._1));
              }
              if (!t9 && e._1 >= index._1)
                B.JSArray_methods.$indexSet(nodes, index._0, t8);
            }
          }
          for (t6 = nodes.length, _i = 0; _i < nodes.length; nodes.length === t6 || (0, A.throwConcurrentModificationError)(nodes), ++_i) {
            n = nodes[_i];
            value = t5.__MarkupRenderObject_children_FI;
            if (value === $) {
              t7 = new A.BaseChildNode();
              t8 = new A.BaseChildNode();
              t7.insertNext$1(t8);
              t5.__MarkupRenderObject_children_FI !== $ && A.throwLateFieldADI(_s8_);
              value = t5.__MarkupRenderObject_children_FI = new A.ChildList(t7, t8);
            }
            t7 = value.find$1(0, n);
            if (t7 == null)
              t7 = new A.ChildNodeData(n);
            t7.remove$0(0);
            beforeNode = value.find$1(0, null);
            if (beforeNode == null)
              value._child_nodes$_last.insertPrev$1(t7);
            else
              beforeNode.insertPrev$1(t7);
          }
          value = t5.__MarkupRenderObject_children_FI;
          if (value === $) {
            t6 = new A.BaseChildNode();
            t7 = new A.BaseChildNode();
            t6.insertNext$1(t7);
            t5.__MarkupRenderObject_children_FI !== $ && A.throwLateFieldADI(_s8_);
            value = t5.__MarkupRenderObject_children_FI = new A.ChildList(t6, t7);
          }
          t5 = new A.MarkupRenderObject(new A.HtmlEscape(B.HtmlEscapeMode_8jw), new A.DomValidator(A.LinkedHashSet_LinkedHashSet$_empty(t2), A.LinkedHashSet_LinkedHashSet$_empty(t2)));
          t5.text = "<!--/-->";
          t5.rawHtml = true;
          t6 = value.find$1(0, t5);
          t5 = t6 == null ? new A.ChildNodeData(t5) : t6;
          t5.remove$0(0);
          beforeNode = value.find$1(0, null);
          if (beforeNode == null)
            value._child_nodes$_last.insertPrev$1(t5);
          else
            beforeNode.insertPrev$1(t5);
        }
      }
    }
  };
  A.AttachAdapter_apply_keyFor.prototype = {
    call$1(n) {
      var _1_1, id, t1, _1_2, _1_9_isSet, _1_13, _1_9, _1_13_isSet, $name, _null = null;
      $label0$0: {
        _1_1 = n.id;
        if (typeof _1_1 == "string") {
          id = _1_1 == null ? A._asString(_1_1) : _1_1;
          t1 = id.length !== 0;
        } else {
          id = _null;
          t1 = false;
        }
        if (t1) {
          t1 = id;
          break $label0$0;
        }
        _1_2 = n.tag;
        if ("title" !== _1_2)
          t1 = "base" === _1_2;
        else
          t1 = true;
        if (t1) {
          t1 = "__" + A.S(_1_2);
          break $label0$0;
        }
        _1_9_isSet = "meta" === _1_2;
        _1_13 = _null;
        t1 = false;
        if (_1_9_isSet) {
          _1_9 = n.attributes;
          _1_13_isSet = type$.Map_dynamic_dynamic._is(_1_9);
          if (_1_13_isSet) {
            _1_13 = J.$index$asx(_1_9 == null ? type$.Map_String_String._as(_1_9) : _1_9, "name");
            t1 = _1_13;
            t1 = t1 != null;
            if (t1)
              if (_1_13 == null)
                A._asString(_1_13);
          }
        } else {
          _1_9 = _null;
          _1_13_isSet = false;
        }
        if (t1) {
          if (_1_13_isSet)
            $name = _1_13;
          else {
            t1 = _1_9_isSet ? _1_9 : n.attributes;
            _1_13 = J.$index$asx(t1 == null ? type$.Map_String_String._as(t1) : t1, "name");
            $name = _1_13;
          }
          t1 = "__meta:" + ($name == null ? A._asString($name) : $name);
          break $label0$0;
        }
        t1 = _null;
        break $label0$0;
      }
      return t1;
    },
    $signature: 93
  };
  A._AttachChildrenAdapter.prototype = {
    prepareBoundary$1(range) {
      var t1 = $.$get$AttachAdapter_instance().entries.$index(0, this.target)._1,
        t2 = this.element._depth;
      t2.toString;
      J.add$1$ax(t1, new A._Record_2(range, t2));
    }
  };
  A._AttachAdapter_RenderAdapter_DocumentStructureMixin.prototype = {};
  A.Target.prototype = {
    _enumToString$0() {
      return "Target." + this._name;
    }
  };
  A.RawText.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$RawText(context), type$._SyncStarIterable_Component);
    },
    build$body$RawText($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], _i, t1, t2;
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = document;
                t2 = t1.createDocumentFragment();
                t2.toString;
                J._clearChildren$0$x(t2);
                t1 = t1.body;
                t1.toString;
                t2.appendChild(B.BodyElement_methods.createFragment$3$treeSanitizer$validator(t1, $async$self.text, null, new A.AllowAll())).toString;
                t1 = t2.childNodes, t2 = t1.length, _i = 0;
              case 2:
                // for condition
                if (!(_i < t1.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return $async$iterator._async$_current = A.RawNode_RawNode$withKey(t1[_i]), 1;
              case 5:
                // after yield
              case 3:
                // for update
                t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.RawNode.prototype = {
    createElement$0(_) {
      var t1 = A.HashSet_HashSet(type$.Element_2),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.RawNodeElement(null, false, t1, t2, this, B._ElementLifecycle_0);
    }
  };
  A.RawNodeElement.prototype = {
    get$component() {
      return type$.RawNode._as(A.Element.prototype.get$component.call(this));
    },
    build$0() {
      return new A._SyncStarIterable(this.build$body$RawNodeElement(), type$._SyncStarIterable_Component);
    },
    build$body$RawNodeElement() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, t2, _i;
        return function $async$build$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = type$.RawNode._as(A.Element.prototype.get$component.call($async$self)).node.childNodes, t2 = t1.length, _i = 0;
              case 2:
                // for condition
                if (!(_i < t1.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return $async$iterator._async$_current = A.RawNode_RawNode$withKey(t1[_i]), 1;
              case 5:
                // after yield
              case 3:
                // for update
                t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    updateRenderObject$0() {
      var t1, t2, t3, t4, _this = this,
        next = type$.RawNode._as(A.Element.prototype.get$component.call(_this)).node;
      if (type$.Text._is(next)) {
        t1 = _this.RenderObjectElement__renderObject;
        t1.toString;
        t2 = next.textContent;
        t1.text = t2 == null ? "" : t2;
        t1.rawHtml = false;
      } else {
        t1 = _this.RenderObjectElement__renderObject;
        if (type$.Element._is(next)) {
          t1.toString;
          t2 = next.tagName;
          t3 = next.id;
          t3.toString;
          t4 = next.className;
          t4.toString;
          t1.updateElement$6(t2.toLowerCase(), t3, t4, null, new A._ElementAttributeMap(next), null);
        } else {
          t1.toString;
          t2 = type$.DomRenderObject;
          t2._as(t1).get$node().replaceWith$1(0, next);
          t1 = _this.RenderObjectElement__renderObject;
          t1.toString;
          t2._as(t1).set$node(next);
        }
      }
    }
  };
  A.AllowAll.prototype = {
    allowsAttribute$3(element, attributeName, value) {
      return true;
    },
    allowsElement$1(element) {
      return true;
    },
    $isNodeValidator: 1
  };
  A.Style.prototype = {
    build$1(context) {
      return new A._SyncStarIterable(this.build$body$Style(context), type$._SyncStarIterable_Component);
    },
    build$body$Style($async$context) {
      var $async$self = this;
      return function() {
        var context = $async$context;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [];
        return function $async$build$1($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return $async$iterator._async$_current = new A.DomComponent("style", null, null, null, null, null, new A.RawText(A.StyleRulesRender_render($async$self.styles), null), null, null), 1;
              case 2:
                // after yield
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    }
  };
  A.AppBinding.prototype = {};
  A._AppBinding_Object_SchedulerBinding.prototype = {};
  A.JasprOptions.prototype = {};
  A.ClientTarget.prototype = {
    dataFor$1(component) {
      var t1;
      this.$ti._precomputed1._as(component);
      t1 = this.params;
      if (t1 == null)
        return null;
      return new A.HtmlEscape(new A.HtmlEscapeMode("custom", true, false, false, false)).convert$1(B.C_JsonCodec.encode$2$toEncodable(t1.call$1(component), null));
    }
  };
  A.SchedulerPhase.prototype = {
    _enumToString$0() {
      return "SchedulerPhase." + this._name;
    }
  };
  A.SchedulerBinding.prototype = {
    scheduleBuild$1(buildCallback) {
      this.scheduleFrame$1(new A.SchedulerBinding_scheduleBuild_closure(this, type$.void_Function._as(buildCallback)));
    },
    _flushPostFrameCallbacks$0() {
      var _i,
        t1 = this.SchedulerBinding__postFrameCallbacks,
        localPostFrameCallbacks = A.List_List$_of(t1, type$.void_Function);
      B.JSArray_methods.clear$0(t1);
      for (t1 = localPostFrameCallbacks.length, _i = 0; _i < localPostFrameCallbacks.length; localPostFrameCallbacks.length === t1 || (0, A.throwConcurrentModificationError)(localPostFrameCallbacks), ++_i)
        localPostFrameCallbacks[_i].call$0();
    }
  };
  A.SchedulerBinding_scheduleBuild_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = type$.void_Function._as(this.buildCallback);
      t1.SchedulerBinding__schedulerPhase = B.SchedulerPhase_1;
      t2.call$0();
      t1.SchedulerBinding__schedulerPhase = B.SchedulerPhase_2;
      t1._flushPostFrameCallbacks$0();
      t1.SchedulerBinding__schedulerPhase = B.SchedulerPhase_0;
      return null;
    },
    $signature: 0
  };
  A.CssUtility.prototype = {
    call$2(selector, children) {
      return new A.NestedStyleRule(new A.BlockStyleRule(new A.Selector(A._asString(selector)), new A._EmptyStyles()), type$.List_StyleRule._as(children));
    },
    call$1(selector) {
      return this.call$2(selector, B.List_empty);
    }
  };
  A.NestedStyleRule.prototype = {
    combine$1(styles) {
      var t1 = this._self;
      return new A.NestedStyleRule(new A.BlockStyleRule(t1.selector, t1.styles.combine$1(styles)), this._children);
    },
    toCss$2(indent, $parent) {
      var rules, $self, t1, curr, t2;
      A._asString(indent);
      rules = A._setArrayType([], type$.JSArray_String);
      $self = this._self;
      t1 = $self.selector.selector;
      if (B.JSString_methods.startsWith$1(t1, "&") || $parent.length === 0)
        curr = A.stringReplaceAllUnchecked(t1, "&", $parent);
      else
        curr = $parent + " " + t1;
      if (J.get$isNotEmpty$asx($self.styles.get$styles()))
        B.JSArray_methods.add$1(rules, A._extension_0__toCssWithParent($self, indent, $parent));
      for (t1 = J.get$iterator$ax(this._children); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        if (t2 instanceof A.NestedStyleRule)
          B.JSArray_methods.add$1(rules, t2.toCss$2(indent, curr));
        else if (t2 instanceof A.BlockStyleRule)
          B.JSArray_methods.add$1(rules, A._extension_0__toCssWithParent(t2, indent, curr));
        else
          throw A.wrapException(A.UnsupportedError$("Cannot nest " + A.getRuntimeTypeOfDartObject(t2).toString$0(0) + " inside other StyleRule."));
      }
      return B.JSArray_methods.join$1(rules, "\n");
    },
    toCss$0() {
      return this.toCss$2("", "");
    },
    toCss$1(indent) {
      return this.toCss$2(indent, "");
    },
    $isStyleRule: 1
  };
  A._NestedStyleRule_Object_StylesMixin.prototype = {};
  A.ImageStyle.prototype = {};
  A.BackgroundSize.prototype = {};
  A._AllBorder.prototype = {$isBorder: 1};
  A.BorderSide.prototype = {};
  A.BorderStyle.prototype = {
    _enumToString$0() {
      return "BorderStyle." + this._name;
    }
  };
  A._CircularBorderRadius.prototype = {$isBorderRadius: 1};
  A._BoxShadow.prototype = {$isBoxShadow: 1};
  A.Cursor0.prototype = {};
  A._HexColor.prototype = {
    get$value(_) {
      return this.hex;
    },
    $isColor: 1
  };
  A._NamedColor.prototype = {
    get$value(_) {
      return this.name;
    },
    $isColor: 1
  };
  A.EdgeInsets.prototype = {
    get$styles() {
      return B.Map_4iZYi;
    }
  };
  A._QuadEdgeInsets.prototype = {
    get$styles() {
      var t5, _this = this,
        t1 = _this._top,
        t2 = t1 != null,
        t3 = t2 && _this._right != null && _this._bottom != null && _this._left != null,
        t4 = type$.String;
      if (t3) {
        t2 = _this._right;
        t3 = _this._bottom;
        t5 = _this._left;
        return A.LinkedHashMap_LinkedHashMap$_literal(["", A.NumberString_get_numstr(t1._unit$_value) + t1._unit + " " + (A.NumberString_get_numstr(t2._unit$_value) + t2._unit) + " " + (A.NumberString_get_numstr(t3._unit$_value) + t3._unit) + " " + (A.NumberString_get_numstr(t5._unit$_value) + t5._unit)], t4, t4);
      } else {
        t3 = A.LinkedHashMap_LinkedHashMap$_empty(t4, t4);
        if (t2)
          t3.$indexSet(0, "top", A.NumberString_get_numstr(t1._unit$_value) + t1._unit);
        t1 = _this._left;
        if (t1 != null)
          t3.$indexSet(0, "left", A.NumberString_get_numstr(t1._unit$_value) + t1._unit);
        t1 = _this._right;
        if (t1 != null)
          t3.$indexSet(0, "right", A.NumberString_get_numstr(t1._unit$_value) + t1._unit);
        t1 = _this._bottom;
        if (t1 != null)
          t3.$indexSet(0, "bottom", A.NumberString_get_numstr(t1._unit$_value) + t1._unit);
        return t3;
      }
    },
    $isEdgeInsets: 1
  };
  A._AllEdgeInsets.prototype = {
    get$styles() {
      var t1 = this._value,
        t2 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["", t1.get$value(t1)], t2, t2);
    },
    $isEdgeInsets: 1
  };
  A._SymmetricEdgeInsets.prototype = {
    get$styles() {
      var _this = this,
        t1 = _this.vertical,
        t2 = t1 != null,
        t3 = t2 && _this.horizontal != null,
        t4 = type$.String;
      if (t3) {
        t2 = _this.horizontal;
        return A.LinkedHashMap_LinkedHashMap$_literal(["", A.NumberString_get_numstr(t1._unit$_value) + t1._unit + " " + (A.NumberString_get_numstr(t2._unit$_value) + t2._unit)], t4, t4);
      } else {
        t3 = A.LinkedHashMap_LinkedHashMap$_empty(t4, t4);
        if (t2)
          t3.$indexSet(0, "top", A.NumberString_get_numstr(t1._unit$_value) + t1._unit);
        if (t2)
          t3.$indexSet(0, "bottom", A.NumberString_get_numstr(t1._unit$_value) + t1._unit);
        t1 = _this.horizontal;
        t2 = t1 != null;
        if (t2)
          t3.$indexSet(0, "left", A.NumberString_get_numstr(t1._unit$_value) + t1._unit);
        if (t2)
          t3.$indexSet(0, "right", A.NumberString_get_numstr(t1._unit$_value) + t1._unit);
        return t3;
      }
    },
    $isEdgeInsets: 1
  };
  A.AlignSelf.prototype = {
    _enumToString$0() {
      return "AlignSelf." + this._name;
    }
  };
  A.FlexDirection.prototype = {
    _enumToString$0() {
      return "FlexDirection." + this._name;
    }
  };
  A.FlexWrap.prototype = {
    _enumToString$0() {
      return "FlexWrap." + this._name;
    }
  };
  A.JustifyContent.prototype = {
    _enumToString$0() {
      return "JustifyContent." + this._name;
    }
  };
  A.AlignItems.prototype = {
    _enumToString$0() {
      return "AlignItems." + this._name;
    }
  };
  A._Position.prototype = {
    get$styles() {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_literal(["position", this.value], t1, t1);
    },
    $isPosition: 1
  };
  A._Positioned.prototype = {};
  A.TextAlign.prototype = {
    _enumToString$0() {
      return "TextAlign." + this._name;
    }
  };
  A.FontFamily.prototype = {
    get$value(receiver) {
      return this.value;
    }
  };
  A._ListFontFamily.prototype = {
    get$value(_) {
      return new A.MappedListIterable(B.List_GVJ, type$.String_Function_FontFamily._as(new A._ListFontFamily_value_closure()), type$.MappedListIterable_FontFamily_String).join$1(0, ", ");
    },
    $isFontFamily: 1
  };
  A._ListFontFamily_value_closure.prototype = {
    call$1(f) {
      type$.FontFamily._as(f);
      return f.get$value(f);
    },
    $signature: 94
  };
  A.FontWeight.prototype = {
    _enumToString$0() {
      return "FontWeight." + this._name;
    }
  };
  A.TextDecoration.prototype = {};
  A._Transition.prototype = {$isTransition: 1};
  A._ZeroUnit.prototype = {
    get$value(_) {
      return "0";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this !== other)
        t1 = other instanceof A._Unit && other._unit$_value === 0;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return 0;
    },
    $isUnit: 1
  };
  A._Unit.prototype = {
    get$value(_) {
      return A.NumberString_get_numstr(this._unit$_value) + this._unit;
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      t1 = true;
      if (_this !== other) {
        t2 = _this._unit$_value;
        if (t2 === 0)
          if (!(other instanceof A._ZeroUnit))
            t3 = other instanceof A._Unit && other._unit$_value === 0;
          else
            t3 = true;
        else
          t3 = false;
        if (!t3)
          t1 = other instanceof A._Unit && A.getRuntimeTypeOfDartObject(_this) === A.getRuntimeTypeOfDartObject(other) && _this._unit === other._unit && t2 === other._unit$_value;
      }
      return t1;
    },
    get$hashCode(_) {
      var t1 = this._unit$_value;
      return t1 === 0 ? 0 : B.JSString_methods.get$hashCode(this._unit) ^ B.JSNumber_methods.get$hashCode(t1);
    },
    $isUnit: 1
  };
  A._PercentUnit.prototype = {};
  A._PixelsUnit.prototype = {};
  A._RemUnit.prototype = {};
  A._VwUnit.prototype = {};
  A._VhUnit.prototype = {};
  A.BlockStyleRule.prototype = {
    toCss$1(indent) {
      A._asString(indent);
      return indent + this.selector.selector + " {\n" + J.get$entries$x(this.styles.get$styles()).map$1$1(0, new A.BlockStyleRule_toCss_closure(indent), type$.String).join$0(0) + indent + "}";
    },
    toCss$0() {
      return this.toCss$1("");
    },
    $isStyleRule: 1
  };
  A.BlockStyleRule_toCss_closure.prototype = {
    call$1(e) {
      type$.MapEntry_String_String._as(e);
      return this.indent + "  " + A.S(e.key) + ": " + A.S(e.value) + ";\n";
    },
    $signature: 41
  };
  A.MediaStyleRule.prototype = {
    toCss$1(indent) {
      var t1, t2, t3, t4;
      A._asString(indent);
      t1 = this.query.maxWidth;
      t2 = A.NumberString_get_numstr(t1._unit$_value);
      t3 = this.styles;
      t4 = A._arrayInstanceType(t3);
      return indent + "@media " + ("screen" + (" and (max-width: " + (t2 + t1._unit) + ")")) + " {\n" + new A.MappedListIterable(t3, t4._eval$1("String(1)")._as(new A.MediaStyleRule_toCss_closure(indent)), t4._eval$1("MappedListIterable<1,String>")).join$0(0) + indent + "}";
    },
    toCss$0() {
      return this.toCss$1("");
    },
    $isStyleRule: 1
  };
  A.MediaStyleRule_toCss_closure.prototype = {
    call$1(r) {
      return type$.StyleRule._as(r).toCss$1(this.indent + "  ") + "\n";
    },
    $signature: 96
  };
  A._MediaRuleQuery.prototype = {$isMediaQuery: 1};
  A.ImportStyleRule.prototype = {
    toCss$1(indent) {
      return A._asString(indent) + "@import url(" + this.url + ");";
    },
    toCss$0() {
      return this.toCss$1("");
    },
    $isStyleRule: 1
  };
  A.FontFaceStyleRule.prototype = {
    toCss$1(indent) {
      A._asString(indent);
      return indent + "@font-face {\n" + indent + '  font-family: "' + this.family + '";\n' + indent + "  src: url(" + this.url + ");\n" + indent + "}";
    },
    toCss$0() {
      return this.toCss$1("");
    },
    $isStyleRule: 1
  };
  A.Selector.prototype = {};
  A._BackgroundStyles.prototype = {
    get$styles() {
      var t2,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      t2 = this.color;
      if (t2 != null)
        t1.$indexSet(0, "background-color", t2.get$value(t2));
      t2 = this.image;
      if (t2 != null)
        t1.$indexSet(0, "background-image", t2.value);
      if (this.size != null)
        t1.$indexSet(0, "background-size", "cover");
      return t1;
    }
  };
  A._BoxStyles.prototype = {
    get$styles() {
      var t4, _this = this, _null = null,
        t1 = type$.String,
        t2 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1),
        t3 = _this.padding;
      t3 = t3 == null ? _null : A._extension_0__prefixed(t3.get$styles(), "padding");
      if (t3 != null)
        t2.addAll$1(0, t3);
      t3 = _this.margin;
      t3 = t3 == null ? _null : A._extension_0__prefixed(t3.get$styles(), "margin");
      if (t3 != null)
        t2.addAll$1(0, t3);
      t3 = _this.width;
      if (t3 != null)
        t2.$indexSet(0, "width", A.NumberString_get_numstr(t3._unit$_value) + t3._unit);
      t3 = _this.height;
      if (t3 != null)
        t2.$indexSet(0, "height", A.NumberString_get_numstr(t3._unit$_value) + t3._unit);
      t3 = _this.minHeight;
      if (t3 != null)
        t2.$indexSet(0, "min-height", A.NumberString_get_numstr(t3._unit$_value) + t3._unit);
      t3 = _this.maxHeight;
      if (t3 != null)
        t2.$indexSet(0, "max-height", A.NumberString_get_numstr(t3._unit$_value) + t3._unit);
      t3 = _this.border;
      if (t3 == null)
        t3 = _null;
      else {
        t4 = A._setArrayType([], type$.JSArray_String);
        t4.push("solid");
        t3 = t3.side;
        t4.push(t3.color.hex);
        t3 = t3.width;
        t4.push(A.NumberString_get_numstr(t3._unit$_value) + t3._unit);
        t3 = A.LinkedHashMap_LinkedHashMap$_literal(["border", B.JSArray_methods.join$1(t4, " ")], t1, t1);
      }
      if (t3 != null)
        t2.addAll$1(0, t3);
      t3 = _this.opacity;
      if (t3 != null)
        t2.$indexSet(0, "opacity", B.JSInt_methods.toString$0(t3));
      t3 = _this.radius;
      if (t3 == null)
        t3 = _null;
      else {
        t3 = t3.radius;
        t3 = A.LinkedHashMap_LinkedHashMap$_literal(["border-radius", A.NumberString_get_numstr(t3._unit$_value) + t3._unit], t1, t1);
      }
      if (t3 != null)
        t2.addAll$1(0, t3);
      t3 = _this.position;
      if (t3 == null)
        t1 = _null;
      else
        t1 = A.LinkedHashMap_LinkedHashMap$of(A._Position.prototype.get$styles.call(t3), t1, t1);
      if (t1 != null)
        t2.addAll$1(0, t1);
      t1 = _this.shadow;
      if (t1 != null) {
        t3 = A._setArrayType([], type$.JSArray_String);
        t4 = t1.offsetX;
        t3.push(A.NumberString_get_numstr(t4._unit$_value) + t4._unit);
        t4 = t1.offsetY;
        t3.push(A.NumberString_get_numstr(t4._unit$_value) + t4._unit);
        t4 = t1.blur;
        t4 = A.NumberString_get_numstr(t4._unit$_value) + t4._unit;
        t3.push(t4);
        t4 = t1.spread;
        t3.push(A.NumberString_get_numstr(t4._unit$_value) + t4._unit);
        t3.push(t1.color.hex);
        t2.$indexSet(0, "box-shadow", B.JSArray_methods.join$1(t3, " "));
      }
      if (_this.cursor != null)
        t2.$indexSet(0, "cursor", "pointer");
      t1 = _this.transition;
      if (t1 != null) {
        t1 = A._setArrayType([t1.property, A.NumberString_get_numstr(t1.duration) + "ms"], type$.JSArray_String);
        t2.$indexSet(0, "transition", B.JSArray_methods.join$1(t1, " "));
      }
      return t2;
    }
  };
  A._extension_0__prefixed_closure.prototype = {
    call$2(k, v) {
      var t1;
      A._asString(k);
      A._asString(v);
      t1 = k.length !== 0 ? "-" + k : "";
      return new A.MapEntry(this.prefix + t1, v, type$.MapEntry_String_String);
    },
    $signature: 97
  };
  A._FlexBoxStyles.prototype = {
    get$styles() {
      var t2, _this = this,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      t1.$indexSet(0, "display", "flex");
      t2 = _this.direction;
      if (t2 != null)
        t1.$indexSet(0, "flex-direction", t2.value);
      if (_this.wrap != null)
        t1.$indexSet(0, "flex-wrap", "wrap");
      t2 = _this.justifyContent;
      if (t2 != null)
        t1.$indexSet(0, "justify-content", t2.value);
      t2 = _this.alignItems;
      if (t2 != null)
        t1.$indexSet(0, "align-items", t2.value);
      return t1;
    }
  };
  A._FlexItemStyles.prototype = {
    get$styles() {
      var t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      t1.$indexSet(0, "align-self", this.alignSelf.value);
      return t1;
    }
  };
  A._TextStyles.prototype = {
    get$styles() {
      var t2, _this = this,
        t1 = type$.String;
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      t2 = _this.color;
      if (t2 != null)
        t1.$indexSet(0, "color", t2.get$value(t2));
      t2 = _this.fontFamily;
      if (t2 != null)
        t1.$indexSet(0, "font-family", t2.get$value(t2));
      t2 = _this.fontSize;
      if (t2 != null)
        t1.$indexSet(0, "font-size", A.NumberString_get_numstr(t2._unit$_value) + t2._unit);
      t2 = _this.fontWeight;
      if (t2 != null)
        t1.$indexSet(0, "font-weight", t2.value);
      if (_this.align != null)
        t1.$indexSet(0, "text-align", "center");
      if (_this.decoration != null)
        t1.$indexSet(0, "text-decoration", "none");
      t2 = _this.wordSpacing;
      if (t2 != null)
        t1.$indexSet(0, "word-spacing", A.NumberString_get_numstr(t2._unit$_value) + t2._unit);
      t2 = _this.lineHeight;
      if (t2 != null)
        t1.$indexSet(0, "line-height", A.NumberString_get_numstr(t2._unit$_value) + t2._unit);
      return t1;
    }
  };
  A.Styles.prototype = {
    combine$1(styles) {
      return new A._CombinedStyles(A._setArrayType([this, styles], type$.JSArray_Styles));
    }
  };
  A._EmptyStyles.prototype = {
    get$styles() {
      var t1 = type$.String;
      return A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
    },
    combine$1(styles) {
      return styles;
    }
  };
  A.StylesMixin.prototype = {
    text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(_, align, color, decoration, fontFamily, fontSize, fontWeight, lineHeight, wordSpacing) {
      var _null = null;
      return this.combine$1(A._TextStyles$(align, color, decoration, fontFamily, fontSize, _null, fontWeight, _null, _null, lineHeight, _null, _null, _null, _null, wordSpacing));
    },
    text$1$fontFamily(_, fontFamily) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, _null, _null, fontFamily, _null, _null, _null, _null);
    },
    text$1$fontSize(_, fontSize) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, _null, _null, _null, fontSize, _null, _null, _null);
    },
    text$1$color(_, color) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, color, _null, _null, _null, _null, _null, _null);
    },
    text$2$fontFamily$fontSize(_, fontFamily, fontSize) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, _null, _null, fontFamily, fontSize, _null, _null, _null);
    },
    text$3$fontFamily$fontWeight$lineHeight(_, fontFamily, fontWeight, lineHeight) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, _null, _null, fontFamily, _null, fontWeight, lineHeight, _null);
    },
    text$2$fontFamily$fontWeight(_, fontFamily, fontWeight) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, _null, _null, fontFamily, _null, fontWeight, _null, _null);
    },
    text$2$color$fontSize(_, color, fontSize) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, color, _null, _null, fontSize, _null, _null, _null);
    },
    text$3$fontFamily$fontSize$fontWeight(_, fontFamily, fontSize, fontWeight) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, _null, _null, fontFamily, fontSize, fontWeight, _null, _null);
    },
    text$3$color$lineHeight$wordSpacing(_, color, lineHeight, wordSpacing) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, color, _null, _null, _null, _null, lineHeight, wordSpacing);
    },
    text$2$fontSize$fontWeight(_, fontSize, fontWeight) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, _null, _null, _null, fontSize, fontWeight, _null, _null);
    },
    text$1$decoration(_, decoration) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, _null, decoration, _null, _null, _null, _null, _null);
    },
    text$2$align$fontSize(_, align, fontSize) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, align, _null, _null, _null, fontSize, _null, _null, _null);
    },
    text$2$decoration$fontSize(_, decoration, fontSize) {
      var _null = null;
      return this.text$8$align$color$decoration$fontFamily$fontSize$fontWeight$lineHeight$wordSpacing(0, _null, _null, decoration, _null, fontSize, _null, _null, _null);
    },
    background$3$color$image$size(_, color, image, size) {
      var _null = null;
      return this.combine$1(new A._BackgroundStyles(color, _null, _null, image, _null, _null, _null, size));
    },
    background$1$color(_, color) {
      return this.background$3$color$image$size(0, color, null, null);
    },
    background$2$image$size(_, image, size) {
      return this.background$3$color$image$size(0, null, image, size);
    },
    box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(border, cursor, height, margin, maxHeight, minHeight, opacity, padding, position, radius, shadow, transition, width) {
      var _null = null;
      return this.combine$1(A._BoxStyles$(border, _null, cursor, _null, height, margin, maxHeight, _null, minHeight, _null, opacity, _null, _null, padding, position, radius, shadow, _null, transition, _null, width));
    },
    box$2$minHeight$width(minHeight, width) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, _null, _null, minHeight, _null, _null, _null, _null, _null, _null, width);
    },
    box$2$margin$padding(margin, padding) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, margin, _null, _null, _null, padding, _null, _null, _null, _null, _null);
    },
    box$1$margin(margin) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, margin, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    box$2$height$width(height, width) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, height, _null, _null, _null, _null, _null, _null, _null, _null, _null, width);
    },
    box$1$radius(radius) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, _null, _null, _null, _null, _null, _null, radius, _null, _null, _null);
    },
    box$1$padding(padding) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, _null, _null, _null, _null, padding, _null, _null, _null, _null, _null);
    },
    box$2$margin$width(margin, width) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, margin, _null, _null, _null, _null, _null, _null, _null, _null, width);
    },
    box$1$transition(transition) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, transition, _null);
    },
    box$1$height(height) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, height, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    box$1$width(width) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, width);
    },
    box$3$height$margin$width(height, margin, width) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, height, margin, _null, _null, _null, _null, _null, _null, _null, _null, width);
    },
    box$2$margin$maxHeight(margin, maxHeight) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, margin, maxHeight, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    box$3$margin$maxHeight$width(margin, maxHeight, width) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, margin, maxHeight, _null, _null, _null, _null, _null, _null, _null, width);
    },
    box$5$height$margin$padding$radius$width(height, margin, padding, radius, width) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, height, margin, _null, _null, _null, padding, _null, radius, _null, _null, width);
    },
    box$2$shadow$transition(shadow, transition) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, shadow, transition, _null);
    },
    box$4$height$margin$radius$width(height, margin, radius, width) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, height, margin, _null, _null, _null, _null, _null, radius, _null, _null, width);
    },
    box$3$cursor$shadow$transition(cursor, shadow, transition) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, cursor, _null, _null, _null, _null, _null, _null, _null, _null, shadow, transition, _null);
    },
    box$3$opacity$position$radius(opacity, position, radius) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, _null, _null, _null, opacity, _null, position, radius, _null, _null, _null);
    },
    box$2$opacity$transition(opacity, transition) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, _null, _null, _null, _null, _null, opacity, _null, _null, _null, _null, transition, _null);
    },
    box$4$border$padding$radius$width(border, padding, radius, width) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(border, _null, _null, _null, _null, _null, _null, padding, _null, radius, _null, _null, width);
    },
    box$2$cursor$transition(cursor, transition) {
      var _null = null;
      return this.box$13$border$cursor$height$margin$maxHeight$minHeight$opacity$padding$position$radius$shadow$transition$width(_null, cursor, _null, _null, _null, _null, _null, _null, _null, _null, _null, transition, _null);
    },
    flexbox$4$alignItems$direction$justifyContent$wrap(alignItems, direction, justifyContent, wrap) {
      return this.combine$1(new A._FlexBoxStyles(direction, wrap, justifyContent, alignItems));
    },
    flexbox$3$alignItems$direction$justifyContent(alignItems, direction, justifyContent) {
      return this.flexbox$4$alignItems$direction$justifyContent$wrap(alignItems, direction, justifyContent, null);
    },
    flexbox$1$alignItems(alignItems) {
      return this.flexbox$4$alignItems$direction$justifyContent$wrap(alignItems, null, null, null);
    },
    flexbox$2$alignItems$direction(alignItems, direction) {
      return this.flexbox$4$alignItems$direction$justifyContent$wrap(alignItems, direction, null, null);
    },
    flexbox$1$direction(direction) {
      return this.flexbox$4$alignItems$direction$justifyContent$wrap(null, direction, null, null);
    },
    flexbox$2$direction$justifyContent(direction, justifyContent) {
      return this.flexbox$4$alignItems$direction$justifyContent$wrap(null, direction, justifyContent, null);
    },
    flexItem$1$alignSelf(alignSelf) {
      return this.combine$1(new A._FlexItemStyles(null, null, alignSelf));
    }
  };
  A._CombinedStyles.prototype = {
    get$styles() {
      var t1 = type$.String;
      return B.JSArray_methods.fold$1$2(this._styles, A.LinkedHashMap_LinkedHashMap$_empty(t1, t1), new A._CombinedStyles_styles_closure(), type$.Map_String_String);
    },
    combine$1(styles) {
      var t1 = A.List_List$_of(this._styles, type$.Styles);
      t1.push(styles);
      return new A._CombinedStyles(t1);
    }
  };
  A._CombinedStyles_styles_closure.prototype = {
    call$2(v, s) {
      type$.Map_String_String._as(v);
      J.addAll$1$ax(v, type$.Styles._as(s).get$styles());
      return v;
    },
    $signature: 98
  };
  A._Styles_Object_StylesMixin.prototype = {};
  A.BuildOwner.prototype = {
    performInitialBuild$1(element) {
      return this.performInitialBuild$body$BuildOwner(element);
    },
    performInitialBuild$body$BuildOwner(element) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$performInitialBuild$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              element.super$Element$mount(null, null);
              element.didMount$0();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$performInitialBuild$1, $async$completer);
    },
    scheduleBuildFor$1(element) {
      var _this = this;
      if (element._inDirtyList) {
        _this._dirtyElementsNeedsResorting = true;
        return;
      }
      if (!_this._scheduledBuild) {
        element._binding.scheduleBuild$1(_this.get$performBuild());
        _this._scheduledBuild = true;
      }
      B.JSArray_methods.add$1(_this._dirtyElements, element);
      element._inDirtyList = true;
    },
    lockState$1(callback) {
      return this.lockState$body$BuildOwner(type$.dynamic_Function._as(callback));
    },
    lockState$body$BuildOwner(callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$next = [], res;
      var $async$lockState$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 2;
              res = callback.call$0();
              $async$goto = res instanceof A._Future ? 5 : 6;
              break;
            case 5:
              // then
              $async$goto = 7;
              return A._asyncAwait(res, $async$lockState$1);
            case 7:
              // returning from await.
            case 6:
              // join
              $async$next.push(4);
              // goto finally
              $async$goto = 3;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 3:
              // finally
              $async$handler = 1;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 4:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return A._asyncStartSync($async$lockState$1, $async$completer);
    },
    performBuild$0() {
      var dirtyCount, index, element, e, element0, t1, t2, t3, exception, line, toZone, _i, _this = this;
      try {
        t1 = _this._dirtyElements;
        B.JSArray_methods.sort$1(t1, A.framework_Element__sort$closure());
        _this._dirtyElementsNeedsResorting = false;
        dirtyCount = t1.length;
        index = 0;
        while (true) {
          t2 = index;
          t3 = dirtyCount;
          if (typeof t2 !== "number")
            return t2.$lt();
          if (typeof t3 !== "number")
            return A.iae(t3);
          if (!(t2 < t3))
            break;
          element = B.JSArray_methods.$index(t1, index);
          try {
            element.rebuild$0();
            element.toString;
          } catch (exception) {
            e = A.unwrapException(exception);
            line = "Error on rebuilding component: " + A.S(e);
            toZone = $.printToZone;
            if (toZone == null)
              A.printString(line);
            else
              toZone.call$1(line);
            throw exception;
          }
          t2 = index;
          if (typeof t2 !== "number")
            return t2.$add();
          index = t2 + 1;
          t2 = dirtyCount;
          t3 = t1.length;
          if (typeof t2 !== "number")
            return t2.$lt();
          if (!(t2 < t3)) {
            t2 = _this._dirtyElementsNeedsResorting;
            t2.toString;
          } else
            t2 = true;
          if (t2) {
            B.JSArray_methods.sort$1(t1, A.framework_Element__sort$closure());
            t2 = _this._dirtyElementsNeedsResorting = false;
            dirtyCount = t1.length;
            while (true) {
              t3 = index;
              if (typeof t3 !== "number")
                return t3.$gt();
              if (t3 > 0) {
                t3 = index;
                if (typeof t3 !== "number")
                  return t3.$sub();
                t3 = B.JSArray_methods.$index(t1, t3 - 1)._dirty;
              } else
                t3 = t2;
              if (!t3)
                break;
              t3 = index;
              if (typeof t3 !== "number")
                return t3.$sub();
              index = t3 - 1;
            }
          }
        }
      } finally {
        for (t1 = _this._dirtyElements, t2 = t1.length, _i = 0; _i < t2; ++_i) {
          element0 = t1[_i];
          element0._inDirtyList = false;
        }
        B.JSArray_methods.clear$0(t1);
        _this._dirtyElementsNeedsResorting = null;
        _this.lockState$1(_this._inactiveElements.get$_unmountAll());
        _this._scheduledBuild = false;
      }
    }
  };
  A.BuildableElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
    },
    didMount$0() {
      this.rebuild$0();
      this.super$Element$didMount();
    },
    shouldRebuild$1(newComponent) {
      return true;
    },
    performRebuild$0() {
      var e, st, exception, t1, t2, _this = this, _null = null, built = null;
      try {
        built = J.toList$0$ax(_this.build$0());
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        built = A._setArrayType([new A.DomComponent("div", _null, _null, _null, _null, _null, new A.Text("Error on building component: " + A.S(e), _null), _null, _null)], type$.JSArray_Component);
        A.print("Error: " + A.S(e) + " " + A.S(st));
      } finally {
        _this._dirty = false;
      }
      t1 = _this._framework$_children;
      if (t1 == null)
        t1 = A._setArrayType([], type$.JSArray_Element);
      t2 = _this._forgottenChildren;
      _this._framework$_children = _this.updateChildren$3$forgottenChildren(t1, built, t2);
      t2.clear$0(0);
    },
    visitChildren$1(visitor) {
      var t1, t2, t3, child;
      type$.void_Function_Element._as(visitor);
      t1 = this._framework$_children;
      t1 = J.get$iterator$ax(t1 == null ? [] : t1);
      t2 = this._forgottenChildren;
      t3 = type$.Element_2;
      for (; t1.moveNext$0();) {
        child = t1.get$current(t1);
        if (!t2.contains$1(0, child))
          visitor.call$1(t3._as(child));
      }
    },
    forgetChild$1(child) {
      this._forgottenChildren.add$1(0, child);
      this.super$Element$forgetChild(child);
    }
  };
  A.ComponentsBinding.prototype = {
    attachRootComponent$1(app) {
      return this.attachRootComponent$body$ComponentsBinding(app);
    },
    attachRootComponent$body$ComponentsBinding(app) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, buildOwner;
      var $async$attachRootComponent$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.ComponentsBinding__rootElement;
              buildOwner = t1 == null ? null : t1._owner;
              if (buildOwner == null)
                buildOwner = new A.AsyncBuildOwner(A._setArrayType([], type$.JSArray_Element), new A._InactiveElements(A.HashSet_HashSet(type$.Element_2)));
              $async$goto = 2;
              return A._asyncAwait(buildOwner.lockState$1(new A.ComponentsBinding_attachRootComponent_closure($async$self, buildOwner, app)), $async$attachRootComponent$1);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$attachRootComponent$1, $async$completer);
    }
  };
  A.ComponentsBinding_attachRootComponent_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, element, t2, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.buildOwner;
              t1._isFirstBuild = true;
              element = A._RootElement$(new A._Root($async$self.app, null, null));
              t2 = element._binding = $async$self.$this;
              element._owner = t1;
              element.RenderObjectElement__renderObject = A.MarkupRenderObject$();
              $async$goto = 2;
              return A._asyncAwait(t1.performInitialBuild$1(element), $async$call$0);
            case 2:
              // returning from await.
              t2.ComponentsBinding__rootElement = element;
              t1._isFirstBuild = false;
              t2.rootCompleter.complete$0(0);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 99
  };
  A._Root.prototype = {
    createElement$0(_) {
      var t1 = A.HashSet_HashSet(type$.Element_2),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A._RootElement(null, false, t1, t2, this, B._ElementLifecycle_0);
    }
  };
  A._RootElement.prototype = {
    updateRenderObject$0() {
    }
  };
  A.DomComponent.prototype = {
    createElement$0(_) {
      var t1 = A.HashSet_HashSet(type$.Element_2),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.DomElement(null, false, t1, t2, this, B._ElementLifecycle_0);
    }
  };
  A.DomElement.prototype = {
    get$component() {
      return type$.DomComponent._as(A.Element.prototype.get$component.call(this));
    },
    _updateInheritance$0() {
      var t1, _this = this;
      _this.super$Element$_updateInheritance();
      t1 = _this._inheritedElements;
      if (t1 != null && t1.containsKey$1(0, B.Type__WrappingDomComponent_kh6)) {
        t1 = _this._inheritedElements;
        t1.toString;
        _this._inheritedElements = A.HashMap_HashMap$from(t1, type$.Type, type$.InheritedElement);
      }
      t1 = _this._inheritedElements;
      _this._wrappingElement = t1 == null ? null : t1.remove$1(0, B.Type__WrappingDomComponent_kh6);
    },
    didChangeDependencies$0() {
      this.super$Element$didChangeDependencies();
      this.updateRenderObject$0();
    },
    shouldRerender$1(newComponent) {
      var t2, _this = this,
        t1 = type$.DomComponent;
      t1._as(newComponent);
      t2 = true;
      if (t1._as(A.Element.prototype.get$component.call(_this)).tag === newComponent.tag)
        if (t1._as(A.Element.prototype.get$component.call(_this)).id == newComponent.id)
          if (t1._as(A.Element.prototype.get$component.call(_this)).classes == newComponent.classes)
            if (t1._as(A.Element.prototype.get$component.call(_this)).styles == newComponent.styles) {
              t2 = t1._as(A.Element.prototype.get$component.call(_this)).attributes == newComponent.attributes;
              if (t2)
                t1._as(A.Element.prototype.get$component.call(_this));
              t1 = !t2;
            } else
              t1 = t2;
          else
            t1 = t2;
        else
          t1 = t2;
      else
        t1 = t2;
      return t1;
    },
    updateRenderObject$0() {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this.RenderObjectElement__renderObject;
      t1.toString;
      t2 = type$.DomComponent;
      t3 = t2._as(A.Element.prototype.get$component.call(_this));
      t4 = t2._as(A.Element.prototype.get$component.call(_this));
      t5 = t2._as(A.Element.prototype.get$component.call(_this));
      t6 = t2._as(A.Element.prototype.get$component.call(_this)).styles;
      t6 = t6 == null ? null : t6.get$styles();
      t1.updateElement$6(t3.tag, t4.id, t5.classes, t6, t2._as(A.Element.prototype.get$component.call(_this)).attributes, t2._as(A.Element.prototype.get$component.call(_this)).events);
    }
  };
  A.Text.prototype = {
    createElement$0(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new A.TextElement(null, false, t1, this, B._ElementLifecycle_0);
    }
  };
  A.TextElement.prototype = {};
  A.Component.prototype = {};
  A._ElementLifecycle.prototype = {
    _enumToString$0() {
      return "_ElementLifecycle." + this._name;
    }
  };
  A.Element.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$hashCode(_) {
      return this._cachedHash;
    },
    get$component() {
      var t1 = this._component;
      t1.toString;
      return t1;
    },
    updateChild$3(child, newComponent, prevSibling) {
      var newChild, t1, oldComponent, _this = this;
      if (newComponent == null) {
        if (child != null) {
          if (J.$eq$(_this._lastChild, child))
            _this.updateLastChild$1(prevSibling);
          _this.deactivateChild$1(child);
        }
        return null;
      }
      if (child != null)
        if (child._component === newComponent) {
          if (child._parentChanged || !J.$eq$(child._prevSibling, prevSibling))
            child.updatePrevSibling$1(prevSibling);
          newChild = child;
        } else {
          if (!child._parentChanged) {
            t1 = child.get$component();
            t1 = A.getRuntimeTypeOfDartObject(t1) === A.getRuntimeTypeOfDartObject(newComponent) && J.$eq$(t1.key, newComponent.key);
          } else
            t1 = true;
          if (t1) {
            if (child._parentChanged || !J.$eq$(child._prevSibling, prevSibling))
              child.updatePrevSibling$1(prevSibling);
            oldComponent = child.get$component();
            child.update$1(0, newComponent);
            child.didUpdate$1(oldComponent);
            newChild = child;
          } else {
            _this.deactivateChild$1(child);
            newChild = _this.inflateComponent$2(newComponent, prevSibling);
          }
        }
      else
        newChild = _this.inflateComponent$2(newComponent, prevSibling);
      if (J.$eq$(_this._lastChild, prevSibling))
        _this.updateLastChild$1(newChild);
      return newChild;
    },
    updateChildren$3$forgottenChildren(oldChildren, newComponents, forgottenChildren) {
      var replaceWithNullIfForgotten, t1, newChild, newChildrenBottom, oldChildrenBottom, t2, t3, newChildren, prevChild, newChildrenTop, oldChildrenTop, oldChild, newComponent, t4, retakeOldKeyedChildren, newKeyedChildren, newChildrenTopPeek, key, oldChildrenTopPeek, t5, _this = this, _null = null;
      type$.List_Element._as(oldChildren);
      type$.List_Component._as(newComponents);
      replaceWithNullIfForgotten = new A.Element_updateChildren_replaceWithNullIfForgotten(type$.nullable_Set_Element._as(forgottenChildren));
      t1 = J.getInterceptor$asx(oldChildren);
      if (t1.get$length(oldChildren) <= 1 && newComponents.length <= 1) {
        newChild = _this.updateChild$3(replaceWithNullIfForgotten.call$1(A.IterableExtensions_get_firstOrNull(oldChildren, type$.Element_2)), A.IterableExtensions_get_firstOrNull(newComponents, type$.Component), _null);
        t1 = A._setArrayType([], type$.JSArray_Element);
        if (newChild != null)
          t1.push(newChild);
        return t1;
      }
      newChildrenBottom = newComponents.length - 1;
      oldChildrenBottom = t1.get$length(oldChildren) - 1;
      t2 = t1.get$length(oldChildren);
      t3 = newComponents.length;
      newChildren = t2 === t3 ? oldChildren : A.List_List$filled(t3, _null, true, type$.nullable_Element);
      t2 = J.getInterceptor$ax(newChildren);
      prevChild = _null;
      newChildrenTop = 0;
      oldChildrenTop = 0;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenTop));
        if (!(newChildrenTop < newComponents.length))
          return A.ioore(newComponents, newChildrenTop);
        newComponent = newComponents[newChildrenTop];
        if (oldChild != null) {
          t3 = oldChild.get$component();
          t3 = !(A.getRuntimeTypeOfDartObject(t3) === A.getRuntimeTypeOfDartObject(newComponent) && J.$eq$(t3.key, newComponent.key));
        } else
          t3 = true;
        if (t3)
          break;
        t3 = _this.updateChild$3(oldChild, newComponent, prevChild);
        t3.toString;
        t2.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
        ++oldChildrenTop;
        prevChild = t3;
      }
      while (true) {
        t3 = oldChildrenTop <= oldChildrenBottom;
        if (!(t3 && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenBottom));
        if (!(newChildrenBottom >= 0 && newChildrenBottom < newComponents.length))
          return A.ioore(newComponents, newChildrenBottom);
        newComponent = newComponents[newChildrenBottom];
        if (oldChild != null) {
          t4 = oldChild.get$component();
          t4 = !(A.getRuntimeTypeOfDartObject(t4) === A.getRuntimeTypeOfDartObject(newComponent) && J.$eq$(t4.key, newComponent.key));
        } else
          t4 = true;
        if (t4)
          break;
        --oldChildrenBottom;
        --newChildrenBottom;
      }
      retakeOldKeyedChildren = _null;
      if (newChildrenTop <= newChildrenBottom && t3) {
        t3 = type$.Key;
        newKeyedChildren = A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Component);
        for (newChildrenTopPeek = newChildrenTop; newChildrenTopPeek <= newChildrenBottom;) {
          if (!(newChildrenTopPeek < newComponents.length))
            return A.ioore(newComponents, newChildrenTopPeek);
          newComponent = newComponents[newChildrenTopPeek];
          key = newComponent.key;
          if (key != null)
            newKeyedChildren.$indexSet(0, key, newComponent);
          ++newChildrenTopPeek;
        }
        if (newKeyedChildren._length !== 0) {
          retakeOldKeyedChildren = A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Element_2);
          for (oldChildrenTopPeek = oldChildrenTop; oldChildrenTopPeek <= oldChildrenBottom;) {
            oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenTopPeek));
            if (oldChild != null) {
              key = oldChild.get$component().key;
              if (key != null) {
                newComponent = newKeyedChildren.$index(0, key);
                if (newComponent != null) {
                  t3 = oldChild.get$component();
                  t3 = A.getRuntimeTypeOfDartObject(t3) === A.getRuntimeTypeOfDartObject(newComponent) && J.$eq$(t3.key, newComponent.key);
                } else
                  t3 = false;
                if (t3)
                  retakeOldKeyedChildren.$indexSet(0, key, oldChild);
              }
            }
            ++oldChildrenTopPeek;
          }
        }
      }
      for (t3 = retakeOldKeyedChildren == null, t4 = !t3; newChildrenTop <= newChildrenBottom; prevChild = t5) {
        if (oldChildrenTop <= oldChildrenBottom) {
          oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenTop));
          if (oldChild != null) {
            key = oldChild.get$component().key;
            if (key == null || !t4 || !retakeOldKeyedChildren.containsKey$1(0, key)) {
              oldChild._prevAncestorSibling = oldChild._prevSibling = oldChild._framework$_parent = null;
              t5 = _this._owner._inactiveElements;
              if (oldChild._lifecycleState === B._ElementLifecycle_1) {
                oldChild.detachRenderObject$0();
                oldChild.deactivate$0();
                oldChild.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
              }
              t5._framework$_elements.add$1(0, oldChild);
            }
          }
          ++oldChildrenTop;
        }
        if (!(newChildrenTop < newComponents.length))
          return A.ioore(newComponents, newChildrenTop);
        newComponent = newComponents[newChildrenTop];
        key = newComponent.key;
        if (key != null)
          oldChild = t3 ? _null : retakeOldKeyedChildren.$index(0, key);
        else
          oldChild = _null;
        t5 = _this.updateChild$3(oldChild, newComponent, prevChild);
        t5.toString;
        t2.$indexSet(newChildren, newChildrenTop, t5);
        ++newChildrenTop;
      }
      for (; oldChildrenTop <= oldChildrenBottom;) {
        oldChild = replaceWithNullIfForgotten.call$1(t1.$index(oldChildren, oldChildrenTop));
        if (oldChild != null) {
          key = oldChild.get$component().key;
          if (key == null || !t4 || !retakeOldKeyedChildren.containsKey$1(0, key)) {
            oldChild._prevAncestorSibling = oldChild._prevSibling = oldChild._framework$_parent = null;
            t3 = _this._owner._inactiveElements;
            if (oldChild._lifecycleState === B._ElementLifecycle_1) {
              oldChild.detachRenderObject$0();
              oldChild.deactivate$0();
              oldChild.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
            }
            t3._framework$_elements.add$1(0, oldChild);
          }
        }
        ++oldChildrenTop;
      }
      newChildrenBottom = newComponents.length - 1;
      oldChildrenBottom = t1.get$length(oldChildren) - 1;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = t1.$index(oldChildren, oldChildrenTop);
        if (!(newChildrenTop < newComponents.length))
          return A.ioore(newComponents, newChildrenTop);
        t3 = _this.updateChild$3(oldChild, newComponents[newChildrenTop], prevChild);
        t3.toString;
        t2.$indexSet(newChildren, newChildrenTop, t3);
        ++newChildrenTop;
        ++oldChildrenTop;
        prevChild = t3;
      }
      return t2.cast$1$0(newChildren, type$.Element_2);
    },
    mount$2($parent, prevSibling) {
      var t1, t2, _this = this;
      _this._framework$_parent = $parent;
      t1 = type$.RenderObjectElement._is($parent);
      if (t1)
        t2 = $parent;
      else
        t2 = $parent == null ? null : $parent._parentRenderObjectElement;
      _this._parentRenderObjectElement = t2;
      _this._prevSibling = prevSibling;
      if (prevSibling == null)
        if (t1)
          t1 = null;
        else
          t1 = $parent == null ? null : $parent._prevAncestorSibling;
      else
        t1 = prevSibling;
      _this._prevAncestorSibling = t1;
      _this._lifecycleState = B._ElementLifecycle_1;
      t1 = $parent != null;
      if (t1) {
        t2 = $parent._depth;
        t2.toString;
        ++t2;
      } else
        t2 = 1;
      _this._depth = t2;
      if (t1) {
        t1 = $parent._owner;
        t1.toString;
        _this._owner = t1;
        t1 = $parent._binding;
        t1.toString;
        _this._binding = t1;
      }
      if (_this.get$component().key instanceof A.GlobalKey)
        _this._binding.toString;
      _this._updateInheritance$0();
      _this._updateObservers$0();
      _this.attachNotificationTree$0();
    },
    didMount$0() {
    },
    update$1(_, newComponent) {
      if (this.shouldRebuild$1(newComponent))
        this._dirty = true;
      this._component = newComponent;
    },
    didUpdate$1(oldComponent) {
      if (this._dirty)
        this.rebuild$0();
    },
    _updateDepth$1(parentDepth) {
      var expectedDepth = parentDepth + 1,
        t1 = this._depth;
      t1.toString;
      if (t1 < expectedDepth) {
        this._depth = expectedDepth;
        this.visitChildren$1(new A.Element__updateDepth_closure(expectedDepth));
      }
    },
    _retakeInactiveElement$2(key, newComponent) {
      var t1, $parent,
        element = $.ComponentsBinding__globalKeyRegistry.$index(0, type$.GlobalKey_State_StatefulComponent._as(key));
      if (element == null)
        return null;
      t1 = element.get$component();
      if (!(A.getRuntimeTypeOfDartObject(t1) === A.getRuntimeTypeOfDartObject(newComponent) && J.$eq$(t1.key, newComponent.key)))
        return null;
      $parent = element._framework$_parent;
      if ($parent != null) {
        $parent.forgetChild$1(element);
        $parent.deactivateChild$1(element);
      }
      this._owner._inactiveElements._framework$_elements.remove$1(0, element);
      return element;
    },
    inflateComponent$2(newComponent, prevSibling) {
      var newChild, t1, updatedChild, _this = this,
        key = newComponent.key;
      if (key instanceof A.GlobalKey) {
        newChild = _this._retakeInactiveElement$2(key, newComponent);
        if (newChild != null) {
          newChild._framework$_parent = _this;
          newChild._parentRenderObjectElement = type$.RenderObjectElement._is(_this) ? _this : _this._parentRenderObjectElement;
          t1 = _this._depth;
          t1.toString;
          newChild._updateDepth$1(t1);
          newChild.activate$0();
          newChild.visitChildren$1(A.framework_Element__activateRecursively$closure());
          newChild._parentChanged = true;
          updatedChild = _this.updateChild$3(newChild, newComponent, prevSibling);
          updatedChild.toString;
          return updatedChild;
        }
      }
      newChild = newComponent.createElement$0(0);
      newChild.mount$2(_this, prevSibling);
      newChild.didMount$0();
      return newChild;
    },
    deactivateChild$1(child) {
      var t1;
      child._prevAncestorSibling = child._prevSibling = child._framework$_parent = null;
      t1 = this._owner._inactiveElements;
      if (child._lifecycleState === B._ElementLifecycle_1) {
        child.detachRenderObject$0();
        child.deactivate$0();
        child.visitChildren$1(A.framework__InactiveElements__deactivateRecursively$closure());
      }
      t1._framework$_elements.add$1(0, child);
    },
    forgetChild$1(child) {
    },
    activate$0() {
      var t3, _this = this,
        t1 = _this._dependencies,
        t2 = t1 == null,
        hadDependencies = !t2 && t1._collection$_length !== 0;
      _this._lifecycleState = B._ElementLifecycle_1;
      t3 = _this._framework$_parent;
      t3.toString;
      if (!type$.RenderObjectElement._is(t3))
        t3 = t3._parentRenderObjectElement;
      _this._parentRenderObjectElement = t3;
      if (!t2)
        t1.clear$0(0);
      _this._hadUnsatisfiedDependencies = false;
      _this._updateInheritance$0();
      _this._updateObservers$0();
      _this.attachNotificationTree$0();
      if (_this._dirty)
        _this._owner.scheduleBuildFor$1(_this);
      if (hadDependencies)
        _this.didChangeDependencies$0();
    },
    deactivate$0() {
      var t2, t3, _this = this,
        t1 = _this._dependencies;
      if (t1 != null && t1._collection$_length !== 0)
        for (t2 = A._instanceType(t1), t1 = new A._HashSetIterator(t1, t1._computeElements$0(), t2._eval$1("_HashSetIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
          t3 = t1._collection$_current;
          (t3 == null ? t2._as(t3) : t3).deactivateDependent$1(_this);
        }
      _this._inheritedElements = null;
      _this._lifecycleState = B._ElementLifecycle_2;
    },
    unmount$0() {
      var _i, key, _this = this,
        t1 = _this._observerElements;
      if (t1 != null && t1.length !== 0) {
        for (t1 = t1.length, _i = 0; _i < t1; ++_i)
          ;
        _this._observerElements = null;
      }
      key = _this.get$component().key;
      if (key instanceof A.GlobalKey)
        if (J.$eq$($.ComponentsBinding__globalKeyRegistry.$index(0, key), _this))
          $.ComponentsBinding__globalKeyRegistry.remove$1(0, key);
      _this._dependencies = _this._component = _this._parentRenderObjectElement = null;
      _this._lifecycleState = B._ElementLifecycle_3;
    },
    _updateInheritance$0() {
      var t1 = this._framework$_parent;
      this._inheritedElements = t1 == null ? null : t1._inheritedElements;
    },
    _updateObservers$0() {
      var t1 = this._framework$_parent;
      this._observerElements = t1 == null ? null : t1._observerElements;
    },
    attachNotificationTree$0() {
      var t1 = this._framework$_parent;
      this._notificationTree = t1 == null ? null : t1._notificationTree;
    },
    visitAncestorElements$1(visitor) {
      var ancestor;
      type$.bool_Function_Element._as(visitor);
      ancestor = this._framework$_parent;
      while (true) {
        if (!(ancestor != null && visitor.call$1(ancestor)))
          break;
        ancestor = ancestor._framework$_parent;
      }
    },
    didChangeDependencies$0() {
      this.markNeedsBuild$0();
    },
    markNeedsBuild$0() {
      var _this = this;
      if (_this._lifecycleState !== B._ElementLifecycle_1)
        return;
      if (_this._dirty)
        return;
      _this._dirty = true;
      _this._owner.scheduleBuildFor$1(_this);
    },
    rebuild$0() {
      var t1, t2, _i, _this = this;
      if (_this._lifecycleState !== B._ElementLifecycle_1 || !_this._dirty)
        return;
      t1 = _this._observerElements;
      if (t1 != null && t1.length !== 0)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].willRebuildElement$1(_this);
      _this._owner.performRebuildOn$2(_this, new A.Element_rebuild_closure(_this));
    },
    attachRenderObject$0() {
    },
    detachRenderObject$0() {
      this.visitChildren$1(new A.Element_detachRenderObject_closure());
    },
    updateLastChild$1(child) {
      var t1, _this = this;
      _this._lastChild = child;
      _this._lastRenderObjectElement = child == null ? null : child.get$_lastRenderObjectElement();
      t1 = _this._framework$_parent;
      if (J.$eq$(t1 == null ? null : t1._lastChild, _this)) {
        t1 = _this._framework$_parent;
        t1 = t1 == null ? null : t1.get$_lastRenderObjectElement();
        t1 = !J.$eq$(t1, _this.get$_lastRenderObjectElement());
      } else
        t1 = false;
      if (t1)
        _this._framework$_parent.updateLastChild$1(_this);
    },
    updatePrevSibling$1(prevSibling) {
      var _this = this;
      _this._prevSibling = prevSibling;
      _this._updateAncestorSiblingRecursively$1(_this._parentChanged);
      _this._parentChanged = false;
    },
    _didUpdateSlot$0() {
    },
    _updateAncestorSiblingRecursively$1(didChangeAncestor) {
      var t1, _this = this,
        newAncestorSibling = _this._prevSibling;
      if (newAncestorSibling == null) {
        t1 = _this._framework$_parent;
        if (type$.RenderObjectElement._is(t1))
          newAncestorSibling = null;
        else {
          t1 = t1 == null ? null : t1._prevAncestorSibling;
          newAncestorSibling = t1;
        }
      }
      if (didChangeAncestor || !J.$eq$(newAncestorSibling, _this._prevAncestorSibling)) {
        _this._prevAncestorSibling = newAncestorSibling;
        _this._didUpdateSlot$0();
        if (!type$.RenderObjectElement._is(_this))
          _this.visitChildren$1(new A.Element__updateAncestorSiblingRecursively_closure());
      }
    },
    $isBuildContext: 1,
    get$_lastRenderObjectElement() {
      return this._lastRenderObjectElement;
    }
  };
  A.Element_updateChildren_replaceWithNullIfForgotten.prototype = {
    call$1(child) {
      return child != null && this.forgottenChildren.contains$1(0, child) ? null : child;
    },
    $signature: 172
  };
  A.Element__updateDepth_closure.prototype = {
    call$1(child) {
      child._updateDepth$1(this.expectedDepth);
    },
    $signature: 10
  };
  A.Element_rebuild_closure.prototype = {
    call$0() {
      var t3, t4, _i,
        t1 = this.$this,
        t2 = t1._dependencies;
      if (t2 != null && t2._collection$_length !== 0)
        for (t3 = A._instanceType(t2), t2 = new A._HashSetIterator(t2, t2._computeElements$0(), t3._eval$1("_HashSetIterator<1>")), t3 = t3._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          (t4 == null ? t3._as(t4) : t4).didRebuildDependent$1(t1);
        }
      t1 = t1._observerElements;
      if (t1 != null && t1.length !== 0)
        for (t1 = t1.length, _i = 0; _i < t1; ++_i)
          ;
    },
    $signature: 0
  };
  A.Element_detachRenderObject_closure.prototype = {
    call$1(child) {
      child.detachRenderObject$0();
    },
    $signature: 10
  };
  A.Element__updateAncestorSiblingRecursively_closure.prototype = {
    call$1(e) {
      return e._updateAncestorSiblingRecursively$1(true);
    },
    $signature: 10
  };
  A._InactiveElements.prototype = {
    _unmount$1(element) {
      element.visitChildren$1(new A._InactiveElements__unmount_closure(this));
      element.unmount$0();
    },
    _unmountAll$0() {
      var t2, t3,
        t1 = this._framework$_elements,
        elements = A.List_List$_of(t1, A._instanceType(t1)._precomputed1);
      B.JSArray_methods.sort$1(elements, A.framework_Element__sort$closure());
      t1.clear$0(0);
      for (t1 = A._arrayInstanceType(elements)._eval$1("ReversedListIterable<1>"), t2 = new A.ReversedListIterable(elements, t1), t2 = new A.ListIterator(t2, t2.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"); t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        this._unmount$1(t3 == null ? t1._as(t3) : t3);
      }
    }
  };
  A._InactiveElements__unmount_closure.prototype = {
    call$1(child) {
      this.$this._unmount$1(child);
    },
    $signature: 10
  };
  A.Key.prototype = {};
  A.LocalKey.prototype = {};
  A.ValueKey.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return J.get$runtimeType$(other) === A.getRuntimeTypeOfDartObject(this) && this.$ti._is(other) && other.value === this.value;
    },
    get$hashCode(_) {
      return A.Object_hashAll([A.getRuntimeTypeOfDartObject(this), this.value]);
    },
    toString$0(_) {
      var t1 = this.$ti,
        t2 = t1._precomputed1,
        t3 = this.value,
        valueString = A.createRuntimeType(t2) === B.Type_String_AXU ? "<'" + t3 + "'>" : "<" + t3 + ">";
      if (A.getRuntimeTypeOfDartObject(this) === A.createRuntimeType(t1))
        return "[" + valueString + "]";
      return "[" + A.createRuntimeType(t2).toString$0(0) + " " + valueString + "]";
    }
  };
  A.GlobalKey.prototype = {};
  A.ObserverComponent.prototype = {};
  A.ObserverElement.prototype = {
    get$component() {
      return type$.ObserverComponent._as(A.Element.prototype.get$component.call(this));
    },
    _updateObservers$0() {
      var _this = this,
        t1 = _this._framework$_parent,
        incomingElements = t1 == null ? null : t1._observerElements;
      B.JSArray_methods.add$1(incomingElements != null ? _this._observerElements = A.List_List$from(incomingElements, true, type$.ObserverElement) : _this._observerElements = A._setArrayType([], type$.JSArray_ObserverElement), _this);
    }
  };
  A.ProxyComponent.prototype = {
    createElement$0(_) {
      return A.ProxyElement$(this);
    }
  };
  A.ProxyElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
    },
    didMount$0() {
      this.rebuild$0();
      this.super$Element$didMount();
    },
    shouldRebuild$1(newComponent) {
      type$.ProxyComponent._as(newComponent);
      return true;
    },
    performRebuild$0() {
      var comp, newComponents, t1, t2, _this = this;
      _this._dirty = false;
      comp = type$.ProxyComponent._as(_this.get$component());
      newComponents = comp.children;
      if (newComponents == null) {
        t1 = A._setArrayType([], type$.JSArray_Component);
        t2 = comp.child;
        if (t2 != null)
          t1.push(t2);
        newComponents = t1;
      }
      t1 = _this._framework$_children;
      if (t1 == null)
        t1 = A._setArrayType([], type$.JSArray_Element);
      t2 = _this._forgottenChildren;
      _this._framework$_children = _this.updateChildren$3$forgottenChildren(t1, newComponents, t2);
      t2.clear$0(0);
    },
    visitChildren$1(visitor) {
      var t1, t2, t3, child;
      type$.void_Function_Element._as(visitor);
      t1 = this._framework$_children;
      t1 = J.get$iterator$ax(t1 == null ? [] : t1);
      t2 = this._forgottenChildren;
      t3 = type$.Element_2;
      for (; t1.moveNext$0();) {
        child = t1.get$current(t1);
        if (!t2.contains$1(0, child))
          visitor.call$1(t3._as(child));
      }
    },
    forgetChild$1(child) {
      this._forgottenChildren.add$1(0, child);
      this.super$Element$forgetChild(child);
    }
  };
  A.LeafElement.prototype = {
    mount$2($parent, prevSibling) {
      this.super$Element$mount($parent, prevSibling);
    },
    didMount$0() {
      this.rebuild$0();
      this.super$Element$didMount();
    },
    shouldRebuild$1(newComponent) {
      return false;
    },
    performRebuild$0() {
      this._dirty = false;
    },
    visitChildren$1(visitor) {
      type$.void_Function_Element._as(visitor);
    }
  };
  A.RenderObject.prototype = {};
  A.BuildableRenderObjectElement.prototype = {
    didMount$0() {
      var _this = this;
      if (_this.RenderObjectElement__renderObject == null) {
        _this._parentRenderObjectElement.RenderObjectElement__renderObject.toString;
        _this.RenderObjectElement__renderObject = A.MarkupRenderObject$();
        _this.updateRenderObject$0();
      }
      _this.super$BuildableElement$didMount();
    },
    update$1(_, newComponent) {
      this.RenderObjectElement__dirtyRender = true;
      this.super$Element$update(0, newComponent);
    },
    didUpdate$1(oldComponent) {
      var _this = this;
      if (_this.RenderObjectElement__dirtyRender) {
        _this.RenderObjectElement__dirtyRender = false;
        _this.updateRenderObject$0();
      }
      _this.super$Element$didUpdate(oldComponent);
    },
    _didUpdateSlot$0() {
      this.super$Element$_didUpdateSlot();
      this.attachRenderObject$0();
    }
  };
  A.ProxyRenderObjectElement.prototype = {
    didMount$0() {
      var _this = this;
      if (_this.RenderObjectElement__renderObject == null) {
        _this._parentRenderObjectElement.RenderObjectElement__renderObject.toString;
        _this.RenderObjectElement__renderObject = A.MarkupRenderObject$();
        _this.updateRenderObject$0();
      }
      _this.super$ProxyElement$didMount();
    },
    update$1(_, newComponent) {
      if (this.shouldRerender$1(newComponent))
        this.RenderObjectElement__dirtyRender = true;
      this.super$Element$update(0, newComponent);
    },
    didUpdate$1(oldComponent) {
      var _this = this;
      if (_this.RenderObjectElement__dirtyRender) {
        _this.RenderObjectElement__dirtyRender = false;
        _this.updateRenderObject$0();
      }
      _this.super$Element$didUpdate(oldComponent);
    },
    _didUpdateSlot$0() {
      this.super$Element$_didUpdateSlot();
      this.attachRenderObject$0();
    }
  };
  A.LeafRenderObjectElement.prototype = {
    didMount$0() {
      var renderObject, t1, _this = this;
      if (_this.RenderObjectElement__renderObject == null) {
        _this._parentRenderObjectElement.RenderObjectElement__renderObject.toString;
        renderObject = _this.RenderObjectElement__renderObject = A.MarkupRenderObject$();
        t1 = _this._component;
        t1.toString;
        renderObject.text = type$.Text_2._as(t1).text;
        renderObject.rawHtml = false;
      }
      _this.super$LeafElement$didMount();
    },
    update$1(_, newComponent) {
      var t2,
        t1 = type$.Text_2;
      t1._as(newComponent);
      t2 = this._component;
      t2.toString;
      if (t1._as(t2).text !== newComponent.text)
        this.RenderObjectElement__dirtyRender = true;
      this.super$Element$update(0, newComponent);
    },
    didUpdate$1(oldComponent) {
      var t1, t2, _this = this;
      if (_this.RenderObjectElement__dirtyRender) {
        _this.RenderObjectElement__dirtyRender = false;
        t1 = _this.RenderObjectElement__renderObject;
        t1.toString;
        t2 = _this._component;
        t2.toString;
        t1.text = type$.Text_2._as(t2).text;
        t1.rawHtml = false;
      }
      _this.super$Element$didUpdate(oldComponent);
    },
    _didUpdateSlot$0() {
      this.super$Element$_didUpdateSlot();
      this.attachRenderObject$0();
    }
  };
  A.RenderObjectElement.prototype = {
    shouldRerender$1(newComponent) {
      return true;
    },
    attachRenderObject$0() {
      var $parent, prevElem, after, t2,
        t1 = this._parentRenderObjectElement;
      if (t1 == null)
        $parent = null;
      else {
        t1 = t1.RenderObjectElement__renderObject;
        t1.toString;
        $parent = t1;
      }
      if ($parent != null) {
        prevElem = this._prevAncestorSibling;
        while (true) {
          t1 = prevElem == null;
          if (!(!t1 && prevElem.get$_lastRenderObjectElement() == null))
            break;
          prevElem = prevElem._prevAncestorSibling;
        }
        after = t1 ? null : prevElem.get$_lastRenderObjectElement();
        t1 = this.RenderObjectElement__renderObject;
        t1.toString;
        if (after == null)
          t2 = null;
        else {
          t2 = after.RenderObjectElement__renderObject;
          t2.toString;
        }
        $parent.get$children(0).insertAfter$2$after(t1, t2);
      }
    },
    detachRenderObject$0() {
      var $parent,
        t1 = this._parentRenderObjectElement;
      if (t1 == null)
        $parent = null;
      else {
        t1 = t1.RenderObjectElement__renderObject;
        t1.toString;
        $parent = t1;
      }
      if ($parent != null) {
        t1 = this.RenderObjectElement__renderObject;
        t1.toString;
        t1 = $parent.get$children(0).find$1(0, t1);
        if (t1 != null)
          t1.remove$0(0);
      }
    },
    get$_lastRenderObjectElement() {
      return this;
    }
  };
  A.StatefulComponent.prototype = {
    createElement$0(_) {
      var t1 = new A.AppState(),
        t2 = A.HashSet_HashSet(type$.Element_2),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      t1.set$_component(this);
      return new A.StatefulElement(t1, t2, t3, this, B._ElementLifecycle_0);
    }
  };
  A.State.prototype = {
    initState$0() {
    },
    set$_component(_component) {
      A._instanceType(this)._eval$1("State.T?")._as(_component);
    }
  };
  A.StatefulElement.prototype = {
    build$0() {
      return this._framework$_state.build$1(this);
    },
    didMount$0() {
      var _this = this;
      if (_this._owner._isFirstBuild)
        _this._framework$_state.toString;
      _this._initState$0();
      _this.super$BuildableElement$didMount();
    },
    _initState$0() {
      try {
        var t1 = this._framework$_state;
        t1.toString;
        t1.super$State$initState();
        A.print("Hello client");
      } finally {
      }
      this._framework$_state.toString;
    },
    performRebuild$0() {
      var _this = this;
      _this._owner.toString;
      if (_this._didChangeDependencies) {
        _this._framework$_state.toString;
        _this._didChangeDependencies = false;
      }
      _this.super$BuildableElement$performRebuild();
    },
    shouldRebuild$1(newComponent) {
      var t1;
      type$.StatefulComponent._as(newComponent);
      t1 = this._framework$_state;
      t1.toString;
      A._instanceType(t1)._eval$1("State.T")._as(newComponent);
      return true;
    },
    update$1(_, newComponent) {
      type$.StatefulComponent._as(newComponent);
      this.super$Element$update(0, newComponent);
      this._framework$_state.set$_component(newComponent);
    },
    didUpdate$1(oldComponent) {
      var t1;
      type$.StatefulComponent._as(oldComponent);
      try {
        t1 = this._framework$_state;
        t1.toString;
        A._instanceType(t1)._eval$1("State.T")._as(oldComponent);
      } finally {
      }
      this.super$Element$didUpdate(oldComponent);
    },
    activate$0() {
      this.super$Element$activate();
      this._framework$_state.toString;
      this.markNeedsBuild$0();
    },
    deactivate$0() {
      this._framework$_state.toString;
      this.super$Element$deactivate();
    },
    unmount$0() {
      this.super$Element$unmount();
      this._framework$_state.toString;
      this._framework$_state = null;
    },
    didChangeDependencies$0() {
      this.super$Element$didChangeDependencies();
      this._didChangeDependencies = true;
    }
  };
  A.StatelessComponent.prototype = {
    createElement$0(_) {
      var t1 = A.HashSet_HashSet(type$.Element_2),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.StatelessElement(t1, t2, this, B._ElementLifecycle_0);
    }
  };
  A.StatelessElement.prototype = {
    get$component() {
      return type$.StatelessComponent._as(A.Element.prototype.get$component.call(this));
    },
    didMount$0() {
      var _this = this;
      if (_this._owner._isFirstBuild) {
        _this._binding.toString;
        type$.StatelessComponent._as(A.Element.prototype.get$component.call(_this));
      }
      _this.super$BuildableElement$didMount();
    },
    shouldRebuild$1(newComponent) {
      type$.StatelessComponent._as(A.Element.prototype.get$component.call(this));
      return true;
    },
    build$0() {
      return type$.StatelessComponent._as(A.Element.prototype.get$component.call(this)).build$1(this);
    },
    performRebuild$0() {
      this._owner.toString;
      this.super$BuildableElement$performRebuild();
    }
  };
  A.ClientComponentAdapter.prototype = {
    applyBoundary$1(range) {
      var t1 = A.MarkupRenderObject$(),
        t2 = this.name,
        t3 = this.data;
      t3 = t3 != null ? " data=" + t3 : "";
      t1.text = "<!--$" + t2 + t3 + "-->";
      t1.rawHtml = true;
      range.start.insertNext$1(new A.ChildNodeData(t1));
      t1 = A.MarkupRenderObject$();
      t1.text = "<!--/$" + t2 + "-->";
      t1.rawHtml = true;
      range.end.insertPrev$1(new A.ChildNodeData(t1));
    }
  };
  A.ClientComponentRegistry.prototype = {
    createElement$0(_) {
      var t1 = A._setArrayType([], type$.JSArray_Element),
        t2 = A._setArrayType([], type$.JSArray_ClientTarget_Component),
        t3 = A.HashSet_HashSet(type$.Element_2),
        t4 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t4;
      return new A.ClientComponentRegistryElement(t1, t2, t3, t4, this, B._ElementLifecycle_0);
    }
  };
  A.ClientComponentRegistryElement.prototype = {
    willRebuildElement$1(element) {
      var t3, entry, _this = this, t1 = {},
        t2 = _this._binding;
      t2.toString;
      if (!_this._didAddClientScript) {
        B.JSArray_methods.add$1(t2.get$_adapters(), new A.ClientScriptAdapter(_this._clientTargets));
        _this._didAddClientScript = true;
      }
      t3 = t2._options.clients;
      entry = t3 == null ? null : t3.$index(0, A.getRuntimeTypeOfDartObject(element.get$component()));
      if (entry == null)
        return;
      t1.isClientBoundary = true;
      element.visitAncestorElements$1(new A.ClientComponentRegistryElement_willRebuildElement_closure(t1, _this));
      if (!t1.isClientBoundary)
        return;
      B.JSArray_methods.add$1(_this._clientElements, element);
      B.JSArray_methods.add$1(_this._clientTargets, entry);
      t1 = entry.name;
      t3 = entry.dataFor$1(element.get$component());
      B.JSArray_methods.add$1(t2.get$_adapters(), new A.ClientComponentAdapter(t1, t3, element));
    }
  };
  A.ClientComponentRegistryElement_willRebuildElement_closure.prototype = {
    call$1(e) {
      return this._box_0.isClientBoundary = !B.JSArray_methods.contains$1(this.$this._clientElements, e);
    },
    $signature: 25
  };
  A.ClientScriptAdapter.prototype = {
    applyHead$1(head) {
      var source, t3, _null = null,
        t1 = this.clientTargets,
        t2 = t1.length;
      if (t2 === 0)
        return false;
      source = t2 === 1 ? B.JSArray_methods.get$first(t1).name + ".client" : "main.clients";
      t1 = head.get$children(0);
      t2 = A.MarkupRenderObject$();
      t3 = type$.String;
      t2.updateElement$6("script", _null, _null, _null, A.LinkedHashMap_LinkedHashMap$_literal(["src", source + ".dart.js", "defer", ""], t3, t3), _null);
      t1.insertBefore$1(0, t2);
      return true;
    }
  };
  A.DocumentStructureMixin.prototype = {
    createDocumentStructure$1(root) {
      var range, headNode, head, bodyNode, body, rangeBefore, rangeAfter,
        t1 = root.get$children(0).findWhere$1(new A.DocumentStructureMixin_createDocumentStructure_closure()),
        html = t1 == null ? null : t1.node;
      if (html == null) {
        range = root.get$children(0).range$0();
        t1 = root.get$children(0);
        html = A.MarkupRenderObject$();
        html.tag = "html";
        html.get$children(0).insertNodeAfter$1(range);
        t1.insertAfter$1(html);
      }
      headNode = html.get$children(0).findWhere$1(new A.DocumentStructureMixin_createDocumentStructure_closure0());
      head = headNode == null ? null : headNode.node;
      bodyNode = html.get$children(0).findWhere$1(new A.DocumentStructureMixin_createDocumentStructure_closure1());
      body = bodyNode == null ? null : bodyNode.node;
      if (head == null) {
        head = A.MarkupRenderObject$();
        head.tag = "head";
        if (body == null) {
          range = html.get$children(0).range$0();
          html.get$children(0).insertAfter$1(head);
          t1 = html.get$children(0);
          body = A.MarkupRenderObject$();
          body.tag = "body";
          body.get$children(0).insertNodeAfter$1(range);
          t1.insertBefore$1(0, body);
        } else
          html.get$children(0).insertAfter$1(head);
      } else if (body == null) {
        rangeBefore = html.get$children(0).range$1$endBefore(headNode);
        rangeAfter = html.get$children(0).range$1$startAfter(headNode);
        body = A.MarkupRenderObject$();
        body.tag = "body";
        t1 = body.get$children(0);
        t1.insertNodeAfter$1(rangeAfter);
        t1.insertNodeAfter$1(rangeBefore);
        html.get$children(0).insertAfter$2$after(body, head);
      }
      return new A._Record_3(html, head, body);
    }
  };
  A.DocumentStructureMixin_createDocumentStructure_closure.prototype = {
    call$1(c) {
      return c.tag === "html";
    },
    $signature: 5
  };
  A.DocumentStructureMixin_createDocumentStructure_closure0.prototype = {
    call$1(c) {
      return c.tag === "head";
    },
    $signature: 5
  };
  A.DocumentStructureMixin_createDocumentStructure_closure1.prototype = {
    call$1(c) {
      return c.tag === "body";
    },
    $signature: 5
  };
  A.DocumentAdapter.prototype = {
    apply$1(root) {
      var t1, t2, t3,
        _0_0 = this.createDocumentStructure$1(root),
        head = _0_0._1;
      if (head.get$children(0).findWhere$1(new A.DocumentAdapter_apply_closure()) == null) {
        t1 = head.get$children(0);
        t2 = A.MarkupRenderObject$();
        t2.tag = "base";
        t3 = type$.String;
        t2.set$attributes(0, A.LinkedHashMap_LinkedHashMap$_literal(["href", "/"], t3, t3));
        t1.insertAfter$1(t2);
      }
      if (root.get$children(0).findWhere$1(new A.DocumentAdapter_apply_closure0()) == null) {
        t1 = root.get$children(0);
        t2 = A.MarkupRenderObject$();
        t2.text = "<!DOCTYPE html>";
        t2.rawHtml = true;
        t1.insertAfter$1(t2);
      }
      return new A._Record_3(_0_0._0, head, _0_0._2);
    }
  };
  A.DocumentAdapter_apply_closure.prototype = {
    call$1(c) {
      return c.tag === "base";
    },
    $signature: 5
  };
  A.DocumentAdapter_apply_closure0.prototype = {
    call$1(r) {
      var t1 = r.text;
      t1 = t1 == null ? null : B.JSString_methods.startsWith$1(t1, "<!DOCTYPE");
      if (t1 === true) {
        t1 = r.rawHtml;
        t1 = t1 === true;
      } else
        t1 = false;
      return t1;
    },
    $signature: 5
  };
  A._DocumentAdapter_RenderAdapter_DocumentStructureMixin.prototype = {};
  A.ElementBoundaryAdapter.prototype = {
    prepare$0() {
      var t1 = this.element;
      t1 = t1._parentRenderObjectElement.RenderObjectElement__renderObject.get$children(0).wrapElement$1(t1);
      this.__ElementBoundaryAdapter_range_A = t1;
      this.prepareBoundary$1(t1);
    },
    apply$1(root) {
      var t1 = this.__ElementBoundaryAdapter_range_A;
      t1 === $ && A.throwLateFieldNI("range");
      return this.applyBoundary$1(t1);
    },
    prepareBoundary$1(range) {
    },
    applyBoundary$1(range) {
    }
  };
  A.GlobalStylesAdapter.prototype = {
    applyHead$1(head) {
      var t2, t3, t4, _null = null,
        t1 = this.binding._options.styles,
        styles = t1 == null ? _null : t1.call$0();
      if (styles == null)
        styles = A._setArrayType([], type$.JSArray_StyleRule);
      if (J.get$isEmpty$asx(styles))
        return false;
      t1 = head.get$children(0);
      t2 = A.MarkupRenderObject$();
      t2.updateElement$6("style", _null, _null, _null, _null, _null);
      t3 = t2.get$children(0);
      t4 = A.MarkupRenderObject$();
      t4.text = A.StyleRulesRender_render(styles);
      t4.rawHtml = true;
      t3.insertBefore$1(0, t4);
      t1.insertBefore$1(0, t2);
      return true;
    }
  };
  A.HeadScopeAdapter.prototype = {
    prepare$0() {
    },
    apply$1(root) {
      var head, needsInsert,
        t1 = root.get$children(0).findWhere$1(new A.HeadScopeAdapter_apply_closure()),
        html = t1 == null ? null : t1.node;
      if (html == null)
        html = root;
      t1 = html.get$children(0).findWhere$1(new A.HeadScopeAdapter_apply_closure0());
      head = t1 == null ? null : t1.node;
      needsInsert = head == null;
      if (needsInsert) {
        head = A.MarkupRenderObject$();
        head.tag = "head";
      }
      if (this.applyHead$1(head) && needsInsert)
        html.get$children(0).insertAfter$1(head);
    }
  };
  A.HeadScopeAdapter_apply_closure.prototype = {
    call$1(c) {
      return c.tag === "html";
    },
    $signature: 5
  };
  A.HeadScopeAdapter_apply_closure0.prototype = {
    call$1(c) {
      return c.tag === "head";
    },
    $signature: 5
  };
  A.AsyncBuildOwner.prototype = {
    performInitialBuild$1(element) {
      return this.performInitialBuild$body$AsyncBuildOwner(element);
    },
    performInitialBuild$body$AsyncBuildOwner(element) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, c;
      var $async$performInitialBuild$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self.super$BuildOwner$performInitialBuild(element), $async$performInitialBuild$1);
            case 2:
              // returning from await.
              t1 = $.$get$_asyncBuildLocks();
              A.Expando__checkType(element);
              t1 = t1._jsWeakMap.get(element);
              if (t1 == null)
                t1 = null;
              else {
                t2 = new A._Future($.Zone__current, type$._Future_dynamic);
                c = new A._SyncCompleter(t2, type$._SyncCompleter_dynamic);
                t1._then$1(type$.void_Function_$opt_dynamic._as(c.get$complete(c)));
                t1 = t2;
              }
              $async$goto = 3;
              return A._asyncAwait(t1 instanceof A._Future ? t1 : A._Future$value(t1, type$.void), $async$performInitialBuild$1);
            case 3:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$performInitialBuild$1, $async$completer);
    },
    performRebuildOn$2(child, whenComplete) {
      var t2, parentAsyncBuildLock, t3, chain,
        t1 = type$.void_Function;
      t1._as(whenComplete);
      t2 = child._framework$_parent;
      if (t2 == null)
        parentAsyncBuildLock = null;
      else {
        t3 = $.$get$_asyncBuildLocks();
        A.Expando__checkType(t2);
        parentAsyncBuildLock = t3._jsWeakMap.get(t2);
      }
      chain = new A.TaskChain(true, A.LinkedHashSet_LinkedHashSet$_empty(t1)).then$1(new A.AsyncBuildOwner_performRebuildOn_closure(child)).then$1(new A.AsyncBuildOwner_performRebuildOn_closure0(whenComplete)).then$1(new A.AsyncBuildOwner_performRebuildOn_closure1(parentAsyncBuildLock)).then$1(new A.AsyncBuildOwner_performRebuildOn_closure2(child)).then$1(new A.AsyncBuildOwner_performRebuildOn_closure3(child));
      t1 = child._framework$_parent;
      if (t1 != null) {
        t2 = $.$get$_asyncBuildLocks();
        t2.$ti._eval$1("1?")._as(chain);
        t2._jsWeakMap.set(t1, chain);
      }
    }
  };
  A.AsyncBuildOwner_performRebuildOn_closure.prototype = {
    call$0() {
      return this.child.performRebuild$0();
    },
    $signature: 0
  };
  A.AsyncBuildOwner_performRebuildOn_closure0.prototype = {
    call$0() {
      return this.whenComplete.call$0();
    },
    $signature: 0
  };
  A.AsyncBuildOwner_performRebuildOn_closure1.prototype = {
    call$0() {
      return this.parentAsyncBuildLock;
    },
    $signature: 39
  };
  A.AsyncBuildOwner_performRebuildOn_closure2.prototype = {
    call$0() {
      return this.child.attachRenderObject$0();
    },
    $signature: 0
  };
  A.AsyncBuildOwner_performRebuildOn_closure3.prototype = {
    call$0() {
      var t1 = this.child,
        t2 = $.$get$_asyncBuildLocks();
      A.Expando__checkType(t1);
      return t2._jsWeakMap.get(t1);
    },
    $signature: 39
  };
  A.TaskChain.prototype = {
    _async_build_owner$_complete$0() {
      var t1, t2, l;
      this._done = true;
      for (t1 = this._listeners, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        l = t1._collection$_current;
        (l == null ? t2._as(l) : l).call$0();
      }
    },
    _then$1(fn) {
      type$.void_Function._as(fn);
      if (this._done)
        fn.call$0();
      else
        this._listeners.add$1(0, fn);
    },
    then$1(fn) {
      var c = new A.TaskChain(false, A.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function));
      this._then$1(new A.TaskChain_then_closure(type$.nullable_Object_Function._as(fn), c));
      return c;
    }
  };
  A.TaskChain_then_closure.prototype = {
    call$0() {
      var t1,
        r = this.fn.call$0();
      if (r instanceof A._Future)
        r.then$1$1(new A.TaskChain_then__closure(this.c), type$.Null);
      else {
        t1 = this.c;
        if (r instanceof A.TaskChain)
          r._then$1(new A.TaskChain_then__closure0(t1));
        else
          t1._async_build_owner$_complete$0();
      }
    },
    $signature: 0
  };
  A.TaskChain_then__closure.prototype = {
    call$1(_) {
      this.c._async_build_owner$_complete$0();
    },
    $signature: 3
  };
  A.TaskChain_then__closure0.prototype = {
    call$0() {
      this.c._async_build_owner$_complete$0();
    },
    $signature: 0
  };
  A.ChildNodeData.prototype = {};
  A.ChildNodeBoundary.prototype = {};
  A.BaseChildNode.prototype = {
    set$_prev(_prev) {
      this._prev = type$.nullable_ChildNode._as(_prev);
    },
    set$_child_nodes$_next(_next) {
      this._child_nodes$_next = type$.nullable_ChildNode._as(_next);
    },
    get$_prev() {
      return this._prev;
    },
    get$_child_nodes$_next() {
      return this._child_nodes$_next;
    }
  };
  A.ChildNode.prototype = {
    get$_child_nodes$_start(_) {
      return this;
    },
    get$_child_nodes$_end() {
      return this;
    },
    insertNext$1(node) {
      var t1, t2, _this = this;
      node.set$_prev(_this);
      node.set$_child_nodes$_next(_this.get$_child_nodes$_next());
      t1 = _this.get$_child_nodes$_next();
      if (t1 != null) {
        t2 = node.get$_child_nodes$_end();
        t1.set$_prev(t2);
      }
      t1 = node.get$_child_nodes$_start(node);
      _this.set$_child_nodes$_next(t1);
    },
    insertPrev$1(node) {
      var t1, _this = this;
      node._child_nodes$_next = _this;
      node._prev = _this.get$_prev();
      t1 = _this.get$_prev();
      if (t1 != null)
        t1.set$_child_nodes$_next(node);
      _this.set$_prev(node);
    },
    remove$0(_) {
      var _this = this,
        t1 = _this.get$_prev();
      if (t1 != null)
        t1.set$_child_nodes$_next(_this.get$_child_nodes$_next());
      t1 = _this.get$_child_nodes$_next();
      if (t1 != null)
        t1.set$_prev(_this.get$_prev());
      _this.set$_prev(null);
      _this.set$_child_nodes$_next(null);
    }
  };
  A.ChildListRange.prototype = {
    get$_prev() {
      return this.start._prev;
    },
    set$_prev(prev) {
      this.start._prev = prev;
    },
    get$_child_nodes$_next() {
      return this.end._child_nodes$_next;
    },
    set$_child_nodes$_next(next) {
      this.end._child_nodes$_next = next;
    },
    get$_child_nodes$_start(_) {
      return this.start;
    },
    get$_child_nodes$_end() {
      return this.end;
    },
    get$iterator(_) {
      return new A.ChildListIterator(this.start, this.end._child_nodes$_next);
    }
  };
  A.ChildList.prototype = {
    insertAfter$2$after(child, after) {
      var t1 = this.find$1(0, child);
      this.insertNodeAfter$2$after(t1 == null ? new A.ChildNodeData(child) : t1, after);
    },
    insertAfter$1(child) {
      return this.insertAfter$2$after(child, null);
    },
    insertNodeAfter$2$after(node, after) {
      var afterNode;
      node.remove$0(0);
      afterNode = this.find$1(0, after);
      if (afterNode == null)
        this._child_nodes$_first.insertNext$1(node);
      else
        afterNode.insertNext$1(node);
    },
    insertNodeAfter$1(node) {
      return this.insertNodeAfter$2$after(node, null);
    },
    insertBefore$1(_, child) {
      var beforeNode,
        t1 = this.find$1(0, child);
      if (t1 == null)
        t1 = new A.ChildNodeData(child);
      t1.remove$0(0);
      beforeNode = this.find$1(0, null);
      if (beforeNode == null)
        this._child_nodes$_last.insertPrev$1(t1);
      else
        beforeNode.insertPrev$1(t1);
    },
    find$1(_, child) {
      if (child == null)
        return null;
      return this.findWhere$1(new A.ChildList_find_closure(child));
    },
    get$iterator(_) {
      return new A.ChildListIterator(this._child_nodes$_first, null);
    },
    range$2$endBefore$startAfter(endBefore, startAfter) {
      var start = new A.BaseChildNode(),
        end = new A.BaseChildNode();
      (startAfter == null ? this._child_nodes$_first : startAfter).insertNext$1(start);
      (endBefore == null ? this._child_nodes$_last : endBefore).insertPrev$1(end);
      return A.ChildListRange$(start, end);
    },
    range$0() {
      return this.range$2$endBefore$startAfter(null, null);
    },
    range$1$endBefore(endBefore) {
      return this.range$2$endBefore$startAfter(endBefore, null);
    },
    range$1$startAfter(startAfter) {
      return this.range$2$endBefore$startAfter(null, startAfter);
    },
    findWhere$1(fn) {
      var curr, t1;
      type$.bool_Function_MarkupRenderObject._as(fn);
      curr = this._child_nodes$_first;
      for (; curr != null;) {
        if (curr instanceof A.ChildNodeData)
          t1 = fn.call$1(curr.node);
        else
          t1 = false;
        if (t1)
          return curr;
        curr = curr.get$_child_nodes$_next();
      }
      return null;
    },
    wrapElement$1(element) {
      var prevElem, startAfter, endBefore, _0_0, compared, _1_0, start, end, _this = this, _s5_ = "range", _box_0 = {},
        t1 = _box_0.prevElem = element._prevAncestorSibling;
      while (true) {
        if (!(t1 != null && t1.get$_lastRenderObjectElement() == null))
          break;
        prevElem = _box_0.prevElem._prevAncestorSibling;
        _box_0.prevElem = prevElem;
        t1 = prevElem;
      }
      startAfter = _this.findWhere$1(new A.ChildList_wrapElement_closure(_box_0));
      if (startAfter == null)
        startAfter = _this._child_nodes$_first;
      t1 = _this.findWhere$1(new A.ChildList_wrapElement_closure0(element));
      endBefore = t1 == null ? null : t1._child_nodes$_next;
      if (endBefore == null)
        endBefore = _this._child_nodes$_last;
      for (; true;) {
        _0_0 = startAfter._child_nodes$_next;
        if (_0_0 instanceof A.ChildNodeBoundary) {
          compared = _this.compareElements$2(element, _0_0.element);
          if (compared === 1) {
            t1 = _0_0.__ChildNodeBoundary_range_F;
            t1 === $ && A.throwLateFieldNI(_s5_);
            startAfter = t1.end;
            continue;
          } else {
            if (compared === 3) {
              t1 = _0_0.__ChildNodeBoundary_range_F;
              t1 === $ && A.throwLateFieldNI(_s5_);
              t1 = t1.start === _0_0;
            } else
              t1 = false;
            if (t1) {
              startAfter = _0_0;
              continue;
            }
          }
        }
        break;
      }
      for (; true;) {
        _1_0 = endBefore.get$_prev();
        if (_1_0 instanceof A.ChildNodeBoundary) {
          compared = _this.compareElements$2(_1_0.element, element);
          if (compared === 1) {
            t1 = _1_0.__ChildNodeBoundary_range_F;
            t1 === $ && A.throwLateFieldNI(_s5_);
            endBefore = t1.start;
            continue;
          } else {
            if (compared === 2) {
              t1 = _1_0.__ChildNodeBoundary_range_F;
              t1 === $ && A.throwLateFieldNI(_s5_);
              t1 = t1.end === _1_0;
            } else
              t1 = false;
            if (t1) {
              endBefore = _1_0;
              continue;
            }
          }
        }
        break;
      }
      start = new A.ChildNodeBoundary(element);
      end = new A.ChildNodeBoundary(element);
      startAfter.insertNext$1(start);
      endBefore.insertPrev$1(end);
      return A.ChildListRange$(start, end);
    },
    compareElements$2(a, b) {
      var t1, t2, currB, currA, prevA, prevB,
        parentA = A._Cell$named("parentA"),
        parentB = A._Cell$named("parentB");
      a.visitAncestorElements$1(new A.ChildList_compareElements_closure(parentA));
      b.visitAncestorElements$1(new A.ChildList_compareElements_closure0(parentB));
      if (!J.$eq$(parentA._readLocal$0(), parentB._readLocal$0())) {
        t1 = a._depth;
        t1.toString;
        t2 = b._depth;
        t2.toString;
        if (t1 === t2)
          return this.compareElements$2(parentA._readLocal$0(), parentB._readLocal$0());
        else if (t1 < t2) {
          if (a.$eq(0, parentB._readLocal$0()))
            return 2;
          return this.compareElements$2(a, parentB._readLocal$0());
        } else {
          if (parentA._readLocal$0() === b)
            return 3;
          return this.compareElements$2(parentA._readLocal$0(), b);
        }
      }
      for (currB = b, currA = a; true; currB = prevB, currA = prevA) {
        prevA = currA._prevSibling;
        prevB = currB._prevSibling;
        if (J.$eq$(prevB, a) || prevA == null)
          return 0;
        if (prevA.$eq(0, b) || prevB == null)
          return 1;
      }
    }
  };
  A.ChildList_find_closure.prototype = {
    call$1(n) {
      return n === this.child;
    },
    $signature: 5
  };
  A.ChildList_wrapElement_closure.prototype = {
    call$1(n) {
      var t1 = this._box_0.prevElem,
        t2 = null;
      if (t1 == null)
        t1 = t2;
      else {
        t1 = t1.get$_lastRenderObjectElement();
        if (t1 == null)
          t1 = t2;
        else {
          t1 = t1.RenderObjectElement__renderObject;
          t1.toString;
        }
      }
      return n === t1;
    },
    $signature: 5
  };
  A.ChildList_wrapElement_closure0.prototype = {
    call$1(n) {
      var t1 = this.element.get$_lastRenderObjectElement();
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.RenderObjectElement__renderObject;
        t1.toString;
      }
      return n === t1;
    },
    $signature: 5
  };
  A.ChildList_compareElements_closure.prototype = {
    call$1(e) {
      this.parentA.__late_helper$_value = e;
      return false;
    },
    $signature: 25
  };
  A.ChildList_compareElements_closure0.prototype = {
    call$1(e) {
      this.parentB.__late_helper$_value = e;
      return false;
    },
    $signature: 25
  };
  A.ChildListIterator.prototype = {
    get$current(_) {
      var t1 = this.__ChildListIterator_current_A;
      t1 === $ && A.throwLateFieldNI("current");
      return t1;
    },
    moveNext$0() {
      var _0_0, node, t1, t2, t3, _this = this;
      for (t1 = _this._child_nodes$_end, t2 = type$.MarkupRenderObject; t3 = _this._child_nodes$_current, t3 != null;) {
        if (t3 === t1)
          return false;
        try {
          _0_0 = t3;
          node = null;
          if (_0_0 instanceof A.ChildNodeData) {
            node = _0_0.node;
            _this.__ChildListIterator_current_A = t2._as(node);
            return true;
          }
        } finally {
          _this._child_nodes$_current = _this._child_nodes$_current.get$_child_nodes$_next();
        }
      }
      return false;
    },
    $isIterator: 1
  };
  A._ChildList_Object_Iterable.prototype = {};
  A._ChildListRange_ChildNode_Iterable.prototype = {};
  A.AsyncBuildableElement.prototype = {
    build$0() {
      var t1 = this.__AsyncBuildableElement__built_A;
      t1 === $ && A.throwLateFieldNI("_built");
      return t1;
    },
    performRebuild$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, $async$temp1;
      var $async$performRebuild$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._component;
              t1.toString;
              $async$temp1 = type$.Iterable_Component;
              $async$goto = 2;
              return A._asyncAwait(type$.AsyncStatelessComponent._as(t1).build$1($async$self).toList$0(0), $async$performRebuild$0);
            case 2:
              // returning from await.
              $async$self.__AsyncBuildableElement__built_A = $async$temp1._as($async$result);
              $async$self.super$BuildableElement$performRebuild();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$performRebuild$0, $async$completer);
    }
  };
  A.AsyncStatelessComponent.prototype = {
    createElement$0(_) {
      var t1 = A.HashSet_HashSet(type$.Element_2),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      return new A.AsyncStatelessElement(t1, t2, this, B._ElementLifecycle_0);
    }
  };
  A.AsyncStatelessElement.prototype = {};
  A.MarkupRenderObject.prototype = {
    get$children(_) {
      var t1, t2,
        value = this.__MarkupRenderObject_children_FI;
      if (value === $) {
        t1 = new A.BaseChildNode();
        t2 = new A.BaseChildNode();
        t1.insertNext$1(t2);
        this.__MarkupRenderObject_children_FI !== $ && A.throwLateFieldADI("children");
        value = this.__MarkupRenderObject_children_FI = new A.ChildList(t1, t2);
      }
      return value;
    },
    updateElement$6(tag, id, classes, styles, attributes, events) {
      var _this = this,
        t1 = type$.nullable_Map_String_String;
      t1._as(styles);
      t1._as(attributes);
      type$.nullable_Map_of_String_and_void_Function_Event._as(events);
      _this.tag = tag;
      _this.id = id;
      _this.classes = classes;
      _this.styles = styles;
      _this.attributes = attributes;
    },
    renderToHtml$0() {
      var t1, _1_0, tag, t2, _2_0, _3_0, t3, classes, _4_0, styles, _5_0, attrs, t4, t5, t6, val, childOutput, fullChildOutput, _i, child, _this = this, _null = null,
        output = new A.StringBuffer(""),
        _0_0 = _this.text;
      if (_0_0 != null)
        if (_this.rawHtml === true) {
          t1 = "" + _0_0;
          output._contents = t1;
        } else {
          t1 = "" + B.HtmlEscape_gMB.convert$1(_0_0);
          output._contents = t1;
        }
      else {
        _1_0 = _this.tag;
        if (_1_0 != null) {
          tag = _1_0.toLowerCase();
          t1 = _this._domValidator;
          t1.validateElementName$1(tag);
          t2 = output._contents = "" + ("<" + tag);
          _2_0 = _this.id;
          if (typeof _2_0 == "string") {
            t2 += ' id="' + _this._attributeEscape.convert$1(_2_0) + '"';
            output._contents = t2;
          }
          _3_0 = _this.classes;
          if (typeof _3_0 == "string") {
            t3 = _3_0.length !== 0;
            classes = _3_0;
          } else {
            classes = _null;
            t3 = false;
          }
          if (t3) {
            t2 += ' class="' + _this._attributeEscape.convert$1(classes) + '"';
            output._contents = t2;
          }
          _4_0 = _this.styles;
          if (_4_0 != null) {
            t3 = J.get$isNotEmpty$asx(_4_0);
            styles = _4_0;
          } else {
            styles = _null;
            t3 = false;
          }
          if (t3) {
            t2 += ' style="' + _this._attributeEscape.convert$1(J.get$entries$x(styles).map$1$1(0, new A.MarkupRenderObject_renderToHtml_closure(), type$.String).join$1(0, "; ")) + '"';
            output._contents = t2;
          }
          _5_0 = _this.attributes;
          if (_5_0 != null) {
            t3 = J.get$isNotEmpty$asx(_5_0);
            attrs = _5_0;
          } else {
            attrs = _null;
            t3 = false;
          }
          if (t3) {
            for (t3 = J.get$entries$x(attrs), t3 = t3.get$iterator(t3), t4 = _this._attributeEscape; t3.moveNext$0();) {
              t5 = t3.get$current(t3);
              t6 = t5.key;
              t1.validateAttributeName$1(t6);
              t5 = t5.value;
              if (J.get$length$asx(t5) !== 0) {
                t6 = A.S(t6);
                A._asString(t5);
                val = t4._convert$3(t5, 0, t5.length);
                t5 = val == null ? t5 : val;
                t5 = t2 + (" " + t6 + '="' + t5 + '"');
                output._contents = t5;
                t2 = t5;
              } else {
                t2 += " " + A.S(t6);
                output._contents = t2;
              }
            }
            t1 = t2;
          } else
            t1 = t2;
          if (B.Set_yw2Hs.contains$1(0, tag)) {
            t1 += "/>";
            output._contents = t1;
          } else {
            output._contents = t1 + ">";
            childOutput = A._setArrayType([], type$.JSArray_String);
            for (t1 = new A.ChildListIterator(_this.get$children(0)._child_nodes$_first, _null); t1.moveNext$0();) {
              t2 = t1.__ChildListIterator_current_A;
              t2 === $ && A.throwLateFieldNI("current");
              B.JSArray_methods.add$1(childOutput, t2.renderToHtml$0());
            }
            fullChildOutput = B.JSArray_methods.fold$1$2(childOutput, "", new A.MarkupRenderObject_renderToHtml_closure0(), type$.String);
            t1 = fullChildOutput.length > 80 || B.JSString_methods.contains$1(fullChildOutput, "\n");
            t2 = output._contents;
            if (t1) {
              t1 = t2 + "\n";
              output._contents = t1;
              for (t2 = childOutput.length, _i = 0; _i < childOutput.length; childOutput.length === t2 || (0, A.throwConcurrentModificationError)(childOutput), ++_i) {
                child = childOutput[_i];
                t1 += "  " + A.stringReplaceAllUnchecked(child, "\n", "\n  ") + "\n";
                output._contents = t1;
              }
            } else
              t1 = output._contents = t2 + fullChildOutput;
            t1 += "</" + tag + ">";
            output._contents = t1;
          }
        } else {
          for (t1 = new A.ChildListIterator(_this.get$children(0)._child_nodes$_first, _null), t2 = ""; t1.moveNext$0(); t2 = t3) {
            t3 = t1.__ChildListIterator_current_A;
            t3 === $ && A.throwLateFieldNI("current");
            t3 = t2 + (t3.renderToHtml$0() + "\n");
            output._contents = t3;
          }
          t1 = t2;
        }
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    set$attributes(_, attributes) {
      this.attributes = type$.nullable_Map_String_String._as(attributes);
    }
  };
  A.MarkupRenderObject_renderToHtml_closure.prototype = {
    call$1(e) {
      type$.MapEntry_String_String._as(e);
      return A.S(e.key) + ": " + A.S(e.value);
    },
    $signature: 41
  };
  A.MarkupRenderObject_renderToHtml_closure0.prototype = {
    call$2(s, o) {
      return A._asString(s) + A._asString(o);
    },
    $signature: 105
  };
  A.DomValidator.prototype = {
    validateElementName$1(tag) {
      var t1 = this._tags;
      if (t1.contains$1(0, tag))
        return;
      if ($.$get$DomValidator__elementRegExp().matchAsPrefix$1(0, tag) != null)
        t1.add$1(0, tag);
      else
        throw A.wrapException(A.ArgumentError$('"' + tag + '" is not a valid element name.', null));
    },
    validateAttributeName$1($name) {
      var t1 = this._attrs;
      if (t1.contains$1(0, $name))
        return;
      if ($.$get$DomValidator__attributeRegExp().matchAsPrefix$1(0, $name) != null)
        t1.add$1(0, $name);
      else
        throw A.wrapException(A.ArgumentError$('"' + $name + '" is not a valid attribute name.', null));
    }
  };
  A.render_closure.prototype = {
    call$1(message) {
      var t1;
      message.get$length(message);
      t1 = A.StateError$("Pattern matching error");
      throw A.wrapException(t1);
    },
    $signature: 8
  };
  A._createSetup_closure.prototype = {
    call$1(binding) {
      type$.ServerAppBinding._as(binding);
      binding._options = this.options;
      binding.super$ComponentsBinding$attachRootComponent(new A.ClientComponentRegistry(this.app, null, null));
    },
    $signature: 106
  };
  A.ServerApp.prototype = {
    _run$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, _0_0, client, server, t2, t1, lock;
      var $async$_run$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.ServerApp__server;
              lock = new A.Object();
              $.ServerApp__runLock = lock;
              $async$goto = 3;
              return A._asyncAwait($async$self._createServer$0(), $async$_run$0);
            case 3:
              // returning from await.
              _0_0 = $async$result;
              client = _0_0._0;
              server = _0_0._1;
              if ($.ServerApp__runLock !== lock) {
                server.close$1$force(0, true);
                client._isClosed = true;
                client._abortController.abort();
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = $.ServerApp__server;
              if (t2 != null)
                t2.close$1$force(0, true);
              $.ServerApp__server = server;
              t2 = $.ServerApp__client;
              if (t2 != null) {
                t2._isClosed = true;
                t2._abortController.abort();
              }
              $.ServerApp__client = client;
              if (t1 == null) {
                A.print("[INFO] Running server in debug mode");
                A.print("Serving at http://localhost:" + A.S($.ServerApp__server.get$port(0)));
              } else
                A.print("[INFO] Server application reloaded.");
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_run$0, $async$completer);
    },
    _createServer$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Record_2_Client_and_HttpServer),
        $async$returnValue, $async$self = this, t1, port, client, $async$temp1, $async$temp2;
      var $async$_createServer$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.$index$asx(A._Platform_environment()._map, "PORT");
              port = A.int_parse(t1 == null ? "8080" : t1, null);
              client = A.zoneClient();
              if (client == null)
                client = new A.BrowserClient(type$.JSObject._as(new init.G.AbortController()));
              $async$temp1 = A;
              $async$temp2 = client;
              $async$goto = 3;
              return A._asyncAwait(A.serve(A.createHandler(new A.ServerApp__createServer_closure($async$self), client), A.InternetAddress_anyIPv4(), port, true), $async$_createServer$0);
            case 3:
              // returning from await.
              $async$returnValue = new $async$temp1._Record_2($async$temp2, $async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_createServer$0, $async$completer);
    }
  };
  A.ServerApp__createServer_closure.prototype = {
    call$2(_, render) {
      return type$.FutureOr_Response_Function_void_Function_ServerAppBinding._as(render).call$1(this.$this._setup);
    },
    $signature: 107
  };
  A.ServerAppBinding.prototype = {
    render$1$standalone(standalone) {
      return this.render$body$ServerAppBinding(false);
    },
    render$body$ServerAppBinding(standalone) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, t1, t2, t3, t4, t5, _i;
      var $async$render$1$standalone = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.rootCompleter.future, $async$render$1$standalone);
            case 3:
              // returning from await.
              t1 = $async$self.ComponentsBinding__rootElement.RenderObjectElement__renderObject;
              t1.toString;
              t2 = $async$self.get$_adapters();
              t2 = A.List_List$_of(new A.ReversedListIterable(t2, A._arrayInstanceType(t2)._eval$1("ReversedListIterable<1>")), type$.RenderAdapter);
              t2.push(new A.GlobalStylesAdapter($async$self));
              t2.push(new A.DocumentAdapter());
              for (t3 = A._arrayInstanceType(t2)._eval$1("ReversedListIterable<1>"), t4 = new A.ReversedListIterable(t2, t3), t4 = new A.ListIterator(t4, t4.get$length(0), t3._eval$1("ListIterator<ListIterable.E>")), t3 = t3._eval$1("ListIterable.E"); t4.moveNext$0();) {
                t5 = t4.__internal$_current;
                (t5 == null ? t3._as(t5) : t5).prepare$0();
              }
              for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
                t2[_i].apply$1(t1);
              $async$returnValue = t1.renderToHtml$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$render$1$standalone, $async$completer);
    },
    scheduleFrame$1(frameCallback) {
      type$.void_Function._as(frameCallback);
      throw A.wrapException(A.UnsupportedError$("Scheduling a frame is not supported on the server, and should never happen."));
    },
    get$_adapters() {
      var result,
        value = this.__ServerAppBinding__adapters_FI;
      if (value === $) {
        result = A._setArrayType([], type$.JSArray_RenderAdapter);
        this.__ServerAppBinding__adapters_FI !== $ && A.throwLateFieldADI("_adapters");
        this.__ServerAppBinding__adapters_FI = result;
        value = result;
      }
      return value;
    }
  };
  A.RenderAdapter.prototype = {
    prepare$0() {
    },
    apply$1(root) {
    }
  };
  A._ServerAppBinding_AppBinding_ComponentsBinding.prototype = {};
  A.staticFileHandler_closure.prototype = {
    call$1(_) {
      type$.Request._as(_);
      return A.Response$notFound("");
    },
    $signature: 108
  };
  A.createHandler_closure.prototype = {
    call$1(request) {
      return this.$call$body$createHandler_closure(request);
    },
    $call$body$createHandler_closure(request) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, t1, t2;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$_allowedRenderPaths();
              t2 = A.IterableExtensions_get_lastOrNull(request.url.get$pathSegments(), type$.String);
              t2 = A._asString(t2 == null ? "" : t2);
              if (!t1._nativeRegExp.test(t2)) {
                $async$returnValue = A.Response$(404, null, null, null, null);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self.handle.call$2(request, new A.createHandler__closure(request, A._proxyFileLoader(request, $async$self.staticHandler)));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 17
  };
  A.createHandler__closure.prototype = {
    call$1(setup) {
      return this.$call$body$createHandler__closure(type$.void_Function_ServerAppBinding._as(setup));
    },
    $call$body$createHandler__closure(setup) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, requestUri, t1, $async$temp1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              setup.toString;
              requestUri = $async$self.request.url.normalizePath$0();
              t1 = requestUri.path;
              if (!B.JSString_methods.startsWith$1(t1, "/"))
                requestUri = requestUri.replace$1$path(0, "/" + t1);
              $async$temp1 = A;
              $async$goto = 3;
              return A._asyncAwait(A.render(setup, requestUri, $async$self.fileLoader, false), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.Response$ok($async$result, null, A.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "text/html"], type$.String, type$.Object));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 110
  };
  A._proxyFileLoader_closure.prototype = {
    call$1($name) {
      return this.$call$body$_proxyFileLoader_closure($name);
    },
    $call$body$_proxyFileLoader_closure($name) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_String),
        $async$returnValue, $async$self = this, t2, response, encoding, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.req;
              t1 = $async$self.proxyHandler.call$1(A.Request$("GET", t1.requestedUri.replace$1$path(0, "/" + A.S($name)), null, t1.context, t1.get$encoding(0), t1._headers.get$singleValues(), null, t1.protocolVersion));
              t2 = type$.Response;
              $async$goto = 3;
              return A._asyncAwait(type$.Future_Response._is(t1) ? t1 : A._Future$value(t2._as(t1), t2), $async$call$1);
            case 3:
              // returning from await.
              response = $async$result;
              if (response.statusCode === 200) {
                encoding = response.get$encoding(0);
                if (encoding == null)
                  encoding = B.C_Utf8Codec;
                t1 = encoding.decodeStream$1(response._body.read$0(0));
              } else
                t1 = null;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 111
  };
  A._sseProxyHandler_createSseConnection.prototype = {
    $call$body$_sseProxyHandler_createSseConnection(req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$self = this, t1, t2, serverReq, $async$temp1, $async$temp2, $async$temp3;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.serverUri;
              t2 = req.requestedUri;
              serverReq = A.StreamedRequest$(req.method, t1.replace$2$path$query(0, req.url.path, t2.get$query(t2)));
              serverReq._checkFinalized$0();
              serverReq._followRedirects = false;
              t2 = serverReq.headers;
              t2.addAll$1(0, req._headers.get$singleValues());
              t2.$indexSet(0, "Host", t1.get$authority());
              serverReq._streamed_request$_controller.close$0(0);
              $async$temp1 = req;
              $async$temp2 = A;
              $async$temp3 = req;
              $async$goto = 2;
              return A._asyncAwait($async$self.client.send$1(0, serverReq), $async$call$1);
            case 2:
              // returning from await.
              $async$temp1.hijack$1(new $async$temp2._sseProxyHandler_createSseConnection_closure($async$temp3, $async$result));
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    call$1(req) {
      return this.$call$body$_sseProxyHandler_createSseConnection(req);
    },
    $signature: 17
  };
  A._sseProxyHandler_createSseConnection_closure.prototype = {
    call$1(channel) {
      var t2, sink, t1 = {};
      type$.StreamChannel_List_int._as(channel);
      t2 = type$.Sink_List_int._as(channel.sink);
      sink = new A._Utf8EncoderSink(new A._ByteAdapterSink(t2), new Uint8Array(1024));
      t2 = "HTTP/1.1 200 OK\r\nContent-Type: text/event-stream\r\nCache-Control: no-cache\r\nConnection: keep-alive\r\nAccess-Control-Allow-Credentials: true\r\nAccess-Control-Allow-Origin: " + A.S(J.$index$asx(this.req._headers.get$singleValues()._map, "origin")) + "\r\n\r\n";
      sink.addSlice$4(t2, 0, t2.length, false);
      t1.reqChannelSub = t1.serverSseSub = null;
      t1.serverSseSub = B.Utf8Decoder_false.super$Converter$bind(type$.Stream_List_int._as(this.serverResponse.stream)).listen$2$onDone(sink.get$add(sink), new A._sseProxyHandler_createSseConnection__closure(t1, sink));
      t1.reqChannelSub = channel.stream.listen$2$onDone(new A._sseProxyHandler_createSseConnection__closure0(), new A._sseProxyHandler_createSseConnection__closure1(t1, sink));
    },
    $signature: 112
  };
  A._sseProxyHandler_createSseConnection__closure.prototype = {
    call$0() {
      var t1 = this._box_0.reqChannelSub;
      if (t1 != null)
        t1.cancel$0(0);
      this.sink.close$0(0);
    },
    $signature: 0
  };
  A._sseProxyHandler_createSseConnection__closure0.prototype = {
    call$1(_) {
      type$.List_int._as(_);
    },
    $signature: 18
  };
  A._sseProxyHandler_createSseConnection__closure1.prototype = {
    call$0() {
      var t1 = this._box_0.serverSseSub;
      if (t1 != null)
        t1.cancel$0(0);
      this.sink.close$0(0);
    },
    $signature: 0
  };
  A._sseProxyHandler_closure.prototype = {
    call$1(req) {
      return this.$call$body$_sseProxyHandler_closure(req);
    },
    $call$body$_sseProxyHandler_closure(req) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = J.$eq$(J.$index$asx(req._headers.get$singleValues()._map, "accept"), "text/event-stream") && req.method === "GET" ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait($async$self.createSseConnection.call$1(req), $async$call$1);
            case 5:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              $async$returnValue = A.Response$notFound("");
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 17
  };
  A.Context.prototype = {
    absolute$15(_, part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15) {
      var t1;
      A._validateArgList("absolute", A._setArrayType([part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15], type$.JSArray_nullable_String));
      t1 = this.style;
      t1 = t1.rootLength$1(part1) > 0 && !t1.isRootRelative$1(part1);
      if (t1)
        return part1;
      t1 = this._context$_current;
      return this.join$16(0, t1 == null ? A.current() : t1, part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15);
    },
    absolute$1(_, part1) {
      var _null = null;
      return this.absolute$15(0, part1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    join$16(_, part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15, part16) {
      var parts = A._setArrayType([part1, part2, part3, part4, part5, part6, part7, part8, part9, part10, part11, part12, part13, part14, part15, part16], type$.JSArray_nullable_String);
      A._validateArgList("join", parts);
      return this.joinAll$1(new A.WhereTypeIterable(parts, type$.WhereTypeIterable_String));
    },
    join$2(_, part1, part2) {
      var _null = null;
      return this.join$16(0, part1, part2, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    joinAll$1(parts) {
      var t1, t2, t3, needsSeparator, isAbsoluteAndNotRootRelative, t4, t5, parsed, path, t6;
      for (t1 = J.where$1$ax(type$.Iterable_String._as(parts), new A.Context_joinAll_closure()), t2 = J.get$iterator$ax(t1.__internal$_iterable), t1 = new A.WhereIterator(t2, t1._f, t1.$ti._eval$1("WhereIterator<1>")), t3 = this.style, needsSeparator = false, isAbsoluteAndNotRootRelative = false, t4 = ""; t1.moveNext$0();) {
        t5 = t2.get$current(t2);
        if (t3.isRootRelative$1(t5) && isAbsoluteAndNotRootRelative) {
          parsed = A.ParsedPath_ParsedPath$parse(t5, t3);
          path = t4.charCodeAt(0) == 0 ? t4 : t4;
          t4 = B.JSString_methods.substring$2(path, 0, t3.rootLength$2$withDrive(path, true));
          parsed.root = t4;
          if (t3.needsSeparator$1(t4))
            B.JSArray_methods.$indexSet(parsed.separators, 0, t3.get$separator());
          t4 = "" + parsed.toString$0(0);
        } else if (t3.rootLength$1(t5) > 0) {
          isAbsoluteAndNotRootRelative = !t3.isRootRelative$1(t5);
          t4 = "" + t5;
        } else {
          t6 = t5.length;
          if (t6 !== 0) {
            if (0 >= t6)
              return A.ioore(t5, 0);
            t6 = t3.containsSeparator$1(t5[0]);
          } else
            t6 = false;
          if (!t6)
            if (needsSeparator)
              t4 += t3.get$separator();
          t4 += t5;
        }
        needsSeparator = t3.needsSeparator$1(t5);
      }
      return t4.charCodeAt(0) == 0 ? t4 : t4;
    },
    split$1(_, path) {
      var parsed = A.ParsedPath_ParsedPath$parse(path, this.style),
        t1 = parsed.parts,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("WhereIterable<1>");
      t1 = A.List_List$_of(new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Context_split_closure()), t3), t3._eval$1("Iterable.E"));
      parsed.set$parts(t1);
      t1 = parsed.root;
      if (t1 != null)
        B.JSArray_methods.insert$2(parsed.parts, 0, t1);
      return parsed.parts;
    },
    normalize$1(_, path) {
      var parsed;
      if (!this._needsNormalization$1(path))
        return path;
      parsed = A.ParsedPath_ParsedPath$parse(path, this.style);
      parsed.normalize$0(0);
      return parsed.toString$0(0);
    },
    _needsNormalization$1(path) {
      var t2, i, start, previous, t3, previousPrevious, codeUnit, t4,
        t1 = this.style,
        root = t1.rootLength$1(path);
      if (root !== 0) {
        if (t1 === $.$get$Style_windows())
          for (t2 = path.length, i = 0; i < root; ++i) {
            if (!(i < t2))
              return A.ioore(path, i);
            if (path.charCodeAt(i) === 47)
              return true;
          }
        start = root;
        previous = 47;
      } else {
        start = 0;
        previous = null;
      }
      for (t2 = new A.CodeUnits(path)._string, t3 = t2.length, i = start, previousPrevious = null; i < t3; ++i, previousPrevious = previous, previous = codeUnit) {
        if (!(i >= 0))
          return A.ioore(t2, i);
        codeUnit = t2.charCodeAt(i);
        if (t1.isSeparator$1(codeUnit)) {
          if (t1 === $.$get$Style_windows() && codeUnit === 47)
            return true;
          if (previous != null && t1.isSeparator$1(previous))
            return true;
          if (previous === 46)
            t4 = previousPrevious == null || previousPrevious === 46 || t1.isSeparator$1(previousPrevious);
          else
            t4 = false;
          if (t4)
            return true;
        }
      }
      if (previous == null)
        return true;
      if (t1.isSeparator$1(previous))
        return true;
      if (previous === 46)
        t1 = previousPrevious == null || t1.isSeparator$1(previousPrevious) || previousPrevious === 46;
      else
        t1 = false;
      if (t1)
        return true;
      return false;
    },
    relative$2$from(path, from) {
      var fromParsed, pathParsed, t2, t3, t4, t5, t6, _this = this,
        _s26_ = 'Unable to find a path to "',
        t1 = from == null;
      if (t1 && _this.style.rootLength$1(path) <= 0)
        return _this.normalize$1(0, path);
      if (t1) {
        t1 = _this._context$_current;
        from = t1 == null ? A.current() : t1;
      } else
        from = _this.absolute$1(0, from);
      t1 = _this.style;
      if (t1.rootLength$1(from) <= 0 && t1.rootLength$1(path) > 0)
        return _this.normalize$1(0, path);
      if (t1.rootLength$1(path) <= 0 || t1.isRootRelative$1(path))
        path = _this.absolute$1(0, path);
      if (t1.rootLength$1(path) <= 0 && t1.rootLength$1(from) > 0)
        throw A.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      fromParsed = A.ParsedPath_ParsedPath$parse(from, t1);
      fromParsed.normalize$0(0);
      pathParsed = A.ParsedPath_ParsedPath$parse(path, t1);
      pathParsed.normalize$0(0);
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        t2 = t2[0] === ".";
      } else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      t2 = fromParsed.root;
      t3 = pathParsed.root;
      if (t2 != t3)
        t2 = t2 == null || t3 == null || !t1.pathsEqual$2(t2, t3);
      else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      while (true) {
        t2 = fromParsed.parts;
        t3 = t2.length;
        t4 = false;
        if (t3 !== 0) {
          t5 = pathParsed.parts;
          t6 = t5.length;
          if (t6 !== 0) {
            if (0 >= t3)
              return A.ioore(t2, 0);
            t2 = t2[0];
            if (0 >= t6)
              return A.ioore(t5, 0);
            t5 = t1.pathsEqual$2(t2, t5[0]);
            t2 = t5;
          } else
            t2 = t4;
        } else
          t2 = t4;
        if (!t2)
          break;
        B.JSArray_methods.removeAt$1(fromParsed.parts, 0);
        B.JSArray_methods.removeAt$1(fromParsed.separators, 1);
        B.JSArray_methods.removeAt$1(pathParsed.parts, 0);
        B.JSArray_methods.removeAt$1(pathParsed.separators, 1);
      }
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return A.ioore(t2, 0);
        t2 = t2[0] === "..";
      } else
        t2 = false;
      if (t2)
        throw A.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      t2 = type$.String;
      B.JSArray_methods.insertAll$2(pathParsed.parts, 0, A.List_List$filled(t3, "..", false, t2));
      B.JSArray_methods.$indexSet(pathParsed.separators, 0, "");
      B.JSArray_methods.insertAll$2(pathParsed.separators, 1, A.List_List$filled(fromParsed.parts.length, t1.get$separator(), false, t2));
      t1 = pathParsed.parts;
      t2 = t1.length;
      if (t2 === 0)
        return ".";
      if (t2 > 1 && J.$eq$(B.JSArray_methods.get$last(t1), ".")) {
        B.JSArray_methods.removeLast$0(pathParsed.parts);
        t1 = pathParsed.separators;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        B.JSArray_methods.add$1(t1, "");
      }
      pathParsed.root = "";
      pathParsed.removeTrailingSeparators$0();
      return pathParsed.toString$0(0);
    },
    relative$1(path) {
      return this.relative$2$from(path, null);
    },
    toUri$1(path) {
      var t2,
        t1 = this.style;
      if (t1.rootLength$1(path) <= 0)
        return t1.relativePathToUri$1(path);
      else {
        t2 = this._context$_current;
        return t1.absolutePathToUri$1(this.join$2(0, t2 == null ? A.current() : t2, path));
      }
    },
    prettyUri$1(uri) {
      var path, rel, _this = this,
        typedUri = A._parseUri(uri);
      if (typedUri.get$scheme() === "file" && _this.style === $.$get$Style_url())
        return typedUri.toString$0(0);
      else if (typedUri.get$scheme() !== "file" && typedUri.get$scheme() !== "" && _this.style !== $.$get$Style_url())
        return typedUri.toString$0(0);
      path = _this.normalize$1(0, _this.style.pathFromUri$1(A._parseUri(typedUri)));
      rel = _this.relative$1(path);
      return _this.split$1(0, rel).length > _this.split$1(0, path).length ? path : rel;
    }
  };
  A.Context_joinAll_closure.prototype = {
    call$1(part) {
      return A._asString(part) !== "";
    },
    $signature: 2
  };
  A.Context_split_closure.prototype = {
    call$1(part) {
      return A._asString(part).length !== 0;
    },
    $signature: 2
  };
  A._validateArgList_closure.prototype = {
    call$1(arg) {
      A._asStringQ(arg);
      return arg == null ? "null" : '"' + arg + '"';
    },
    $signature: 46
  };
  A.InternalStyle.prototype = {
    getRoot$1(path) {
      var t1,
        $length = this.rootLength$1(path);
      if ($length > 0)
        return B.JSString_methods.substring$2(path, 0, $length);
      if (this.isRootRelative$1(path)) {
        if (0 >= path.length)
          return A.ioore(path, 0);
        t1 = path[0];
      } else
        t1 = null;
      return t1;
    },
    relativePathToUri$1(path) {
      var segments, t2, _null = null,
        t1 = path.length;
      if (t1 === 0)
        return A._Uri__Uri(_null, _null, _null, _null, _null, _null, _null);
      segments = A.Context_Context(this).split$1(0, path);
      t2 = t1 - 1;
      if (!(t2 >= 0))
        return A.ioore(path, t2);
      if (this.isSeparator$1(path.charCodeAt(t2)))
        B.JSArray_methods.add$1(segments, "");
      return A._Uri__Uri(_null, _null, segments, _null, _null, _null, _null);
    },
    pathsEqual$2(path1, path2) {
      return path1 === path2;
    }
  };
  A.ParsedPath.prototype = {
    get$hasTrailingSeparator() {
      var t1 = this.parts;
      if (t1.length !== 0)
        t1 = J.$eq$(B.JSArray_methods.get$last(t1), "") || !J.$eq$(B.JSArray_methods.get$last(this.separators), "");
      else
        t1 = false;
      return t1;
    },
    removeTrailingSeparators$0() {
      var t1, t2, _this = this;
      while (true) {
        t1 = _this.parts;
        if (!(t1.length !== 0 && J.$eq$(B.JSArray_methods.get$last(t1), "")))
          break;
        B.JSArray_methods.removeLast$0(_this.parts);
        t1 = _this.separators;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      }
      t1 = _this.separators;
      t2 = t1.length;
      if (t2 !== 0)
        B.JSArray_methods.$indexSet(t1, t2 - 1, "");
    },
    normalize$0(_) {
      var t1, t2, leadingDoubles, _i, part, t3, _this = this,
        newParts = A._setArrayType([], type$.JSArray_String);
      for (t1 = _this.parts, t2 = t1.length, leadingDoubles = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        part = t1[_i];
        if (!(part === "." || part === ""))
          if (part === "..") {
            t3 = newParts.length;
            if (t3 !== 0) {
              if (0 >= t3)
                return A.ioore(newParts, -1);
              newParts.pop();
            } else
              ++leadingDoubles;
          } else
            B.JSArray_methods.add$1(newParts, part);
      }
      if (_this.root == null)
        B.JSArray_methods.insertAll$2(newParts, 0, A.List_List$filled(leadingDoubles, "..", false, type$.String));
      if (newParts.length === 0 && _this.root == null)
        B.JSArray_methods.add$1(newParts, ".");
      _this.parts = newParts;
      t1 = _this.style;
      _this.separators = A.List_List$filled(newParts.length + 1, t1.get$separator(), true, type$.String);
      t2 = _this.root;
      if (t2 == null || newParts.length === 0 || !t1.needsSeparator$1(t2))
        B.JSArray_methods.$indexSet(_this.separators, 0, "");
      t2 = _this.root;
      if (t2 != null && t1 === $.$get$Style_windows())
        _this.root = A.stringReplaceAllUnchecked(t2, "/", "\\");
      _this.removeTrailingSeparators$0();
    },
    toString$0(_) {
      var t2, t3, t4, t5, i,
        t1 = this.root;
      t1 = t1 != null ? "" + t1 : "";
      for (t2 = this.parts, t3 = t2.length, t4 = this.separators, t5 = t4.length, i = 0; i < t3; ++i) {
        if (!(i < t5))
          return A.ioore(t4, i);
        t1 = t1 + t4[i] + t2[i];
      }
      t1 += A.S(B.JSArray_methods.get$last(t4));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    set$parts(parts) {
      this.parts = type$.List_String._as(parts);
    }
  };
  A.PathException.prototype = {
    toString$0(_) {
      return "PathException: " + this.message;
    },
    $isException: 1
  };
  A.Style0.prototype = {
    toString$0(_) {
      return this.get$name(this);
    }
  };
  A.PosixStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t2,
        t1 = path.length;
      if (t1 !== 0) {
        t2 = t1 - 1;
        if (!(t2 >= 0))
          return A.ioore(path, t2);
        t2 = path.charCodeAt(t2) !== 47;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    },
    rootLength$2$withDrive(path, withDrive) {
      var t1 = path.length;
      if (t1 !== 0) {
        if (0 >= t1)
          return A.ioore(path, 0);
        t1 = path.charCodeAt(0) === 47;
      } else
        t1 = false;
      if (t1)
        return 1;
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return false;
    },
    pathFromUri$1(uri) {
      var t1;
      if (uri.get$scheme() === "" || uri.get$scheme() === "file") {
        t1 = uri.get$path(uri);
        return A._Uri__uriDecode(t1, 0, t1.length, B.C_Utf8Codec, false);
      }
      throw A.wrapException(A.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
    },
    absolutePathToUri$1(path) {
      var _null = null,
        parsed = A.ParsedPath_ParsedPath$parse(path, this),
        t1 = parsed.parts;
      if (t1.length === 0)
        B.JSArray_methods.addAll$1(t1, A._setArrayType(["", ""], type$.JSArray_String));
      else if (parsed.get$hasTrailingSeparator())
        B.JSArray_methods.add$1(parsed.parts, "");
      return A._Uri__Uri(_null, _null, parsed.parts, _null, _null, "file", _null);
    },
    get$name() {
      return "posix";
    },
    get$separator() {
      return "/";
    }
  };
  A.UrlStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t2,
        t1 = path.length;
      if (t1 === 0)
        return false;
      t2 = t1 - 1;
      if (!(t2 >= 0))
        return A.ioore(path, t2);
      if (path.charCodeAt(t2) !== 47)
        return true;
      return B.JSString_methods.endsWith$1(path, "://") && this.rootLength$1(path) === t1;
    },
    rootLength$2$withDrive(path, withDrive) {
      var i, codeUnit, index,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      if (0 >= t1)
        return A.ioore(path, 0);
      if (path.charCodeAt(0) === 47)
        return 1;
      for (i = 0; i < t1; ++i) {
        codeUnit = path.charCodeAt(i);
        if (codeUnit === 47)
          return 0;
        if (codeUnit === 58) {
          if (i === 0)
            return 0;
          index = B.JSString_methods.indexOf$2(path, "/", B.JSString_methods.startsWith$2(path, "//", i + 1) ? i + 3 : i);
          if (index <= 0)
            return t1;
          if (!withDrive || t1 < index + 3)
            return index;
          if (!B.JSString_methods.startsWith$1(path, "file://"))
            return index;
          t1 = A.driveLetterEnd(path, index + 1);
          return t1 == null ? index : t1;
        }
      }
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      var t1 = path.length;
      if (t1 !== 0) {
        if (0 >= t1)
          return A.ioore(path, 0);
        t1 = path.charCodeAt(0) === 47;
      } else
        t1 = false;
      return t1;
    },
    pathFromUri$1(uri) {
      return uri.toString$0(0);
    },
    relativePathToUri$1(path) {
      return A.Uri_parse(path);
    },
    absolutePathToUri$1(path) {
      return A.Uri_parse(path);
    },
    get$name() {
      return "url";
    },
    get$separator() {
      return "/";
    }
  };
  A.WindowsStyle.prototype = {
    containsSeparator$1(path) {
      return B.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47 || codeUnit === 92;
    },
    needsSeparator$1(path) {
      var t2,
        t1 = path.length;
      if (t1 === 0)
        return false;
      t2 = t1 - 1;
      if (!(t2 >= 0))
        return A.ioore(path, t2);
      t2 = path.charCodeAt(t2);
      return !(t2 === 47 || t2 === 92);
    },
    rootLength$2$withDrive(path, withDrive) {
      var t2, index,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      if (0 >= t1)
        return A.ioore(path, 0);
      if (path.charCodeAt(0) === 47)
        return 1;
      if (path.charCodeAt(0) === 92) {
        if (t1 >= 2) {
          if (1 >= t1)
            return A.ioore(path, 1);
          t2 = path.charCodeAt(1) !== 92;
        } else
          t2 = true;
        if (t2)
          return 1;
        index = B.JSString_methods.indexOf$2(path, "\\", 2);
        if (index > 0) {
          index = B.JSString_methods.indexOf$2(path, "\\", index + 1);
          if (index > 0)
            return index;
        }
        return t1;
      }
      if (t1 < 3)
        return 0;
      if (!A.isAlphabetic(path.charCodeAt(0)))
        return 0;
      if (path.charCodeAt(1) !== 58)
        return 0;
      t1 = path.charCodeAt(2);
      if (!(t1 === 47 || t1 === 92))
        return 0;
      return 3;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return this.rootLength$1(path) === 1;
    },
    pathFromUri$1(uri) {
      var path, t1;
      if (uri.get$scheme() !== "" && uri.get$scheme() !== "file")
        throw A.wrapException(A.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
      path = uri.get$path(uri);
      if (uri.get$host(uri) === "") {
        if (path.length >= 3 && B.JSString_methods.startsWith$1(path, "/") && A.driveLetterEnd(path, 1) != null)
          path = B.JSString_methods.replaceFirst$2(path, "/", "");
      } else
        path = "\\\\" + uri.get$host(uri) + path;
      t1 = A.stringReplaceAllUnchecked(path, "/", "\\");
      return A._Uri__uriDecode(t1, 0, t1.length, B.C_Utf8Codec, false);
    },
    absolutePathToUri$1(path) {
      var rootParts, t2, _null = null,
        parsed = A.ParsedPath_ParsedPath$parse(path, this),
        t1 = parsed.root;
      t1.toString;
      if (B.JSString_methods.startsWith$1(t1, "\\\\")) {
        rootParts = new A.WhereIterable(A._setArrayType(t1.split("\\"), type$.JSArray_String), type$.bool_Function_String._as(new A.WindowsStyle_absolutePathToUri_closure()), type$.WhereIterable_String);
        B.JSArray_methods.insert$2(parsed.parts, 0, rootParts.get$last(0));
        if (parsed.get$hasTrailingSeparator())
          B.JSArray_methods.add$1(parsed.parts, "");
        return A._Uri__Uri(rootParts.get$first(0), _null, parsed.parts, _null, _null, "file", _null);
      } else {
        if (parsed.parts.length === 0 || parsed.get$hasTrailingSeparator())
          B.JSArray_methods.add$1(parsed.parts, "");
        t1 = parsed.parts;
        t2 = parsed.root;
        t2.toString;
        t2 = A.stringReplaceAllUnchecked(t2, "/", "");
        B.JSArray_methods.insert$2(t1, 0, A.stringReplaceAllUnchecked(t2, "\\", ""));
        return A._Uri__Uri(_null, _null, parsed.parts, _null, _null, "file", _null);
      }
    },
    codeUnitsEqual$2(codeUnit1, codeUnit2) {
      var upperCase1;
      if (codeUnit1 === codeUnit2)
        return true;
      if (codeUnit1 === 47)
        return codeUnit2 === 92;
      if (codeUnit1 === 92)
        return codeUnit2 === 47;
      if ((codeUnit1 ^ codeUnit2) !== 32)
        return false;
      upperCase1 = codeUnit1 | 32;
      return upperCase1 >= 97 && upperCase1 <= 122;
    },
    pathsEqual$2(path1, path2) {
      var t1, t2, i;
      if (path1 === path2)
        return true;
      t1 = path1.length;
      t2 = path2.length;
      if (t1 !== t2)
        return false;
      for (i = 0; i < t1; ++i) {
        if (!(i < t2))
          return A.ioore(path2, i);
        if (!this.codeUnitsEqual$2(path1.charCodeAt(i), path2.charCodeAt(i)))
          return false;
      }
      return true;
    },
    get$name() {
      return "windows";
    },
    get$separator() {
      return "\\";
    }
  };
  A.WindowsStyle_absolutePathToUri_closure.prototype = {
    call$1(part) {
      return A._asString(part) !== "";
    },
    $signature: 2
  };
  A.serveRequests_closure.prototype = {
    call$0() {
      this.requests.listen$1(new A.serveRequests__closure(this.handler, this.poweredByHeader));
    },
    $signature: 0
  };
  A.serveRequests__closure.prototype = {
    call$1(request) {
      return A.handleRequest(type$.HttpRequest._as(request), this.handler, this.poweredByHeader);
    },
    $signature: 113
  };
  A.serveRequests_closure0.prototype = {
    call$2(error, stackTrace) {
      type$.StackTrace._as(stackTrace);
      A._logTopLevelError("Asynchronous error\n" + A.S(error), stackTrace);
    },
    $signature: 35
  };
  A.handleRequest_closure.prototype = {
    call$2(key, value) {
      this.message._contents += A._asString(key) + ": " + A._asString(value) + "\n";
      return null;
    },
    $signature: 12
  };
  A._fromHttpRequest_closure.prototype = {
    call$2(k, v) {
      this.headers.$indexSet(0, k, type$.List_String._as(v));
    },
    $signature: 9
  };
  A._fromHttpRequest_onHijack.prototype = {
    call$1(callback) {
      type$.void_Function_StreamChannel_List_int._as(callback);
      this.request.response.detachSocket$1$writeHeaders(false).then$1$1(new A._fromHttpRequest_onHijack_closure(callback), type$.void);
    },
    $signature: 114
  };
  A._fromHttpRequest_onHijack_closure.prototype = {
    call$1(socket) {
      type$.Socket._as(socket);
      return this.callback.call$1(new A._StreamChannel(socket, socket, type$._StreamChannel_List_int));
    },
    $signature: 30
  };
  A._writeResponse_closure.prototype = {
    call$2(header, value) {
      this.httpResponse.headers.$set$2(0, A._asString(header), type$.List_String._as(value));
    },
    $signature: 9
  };
  A._writeResponse_closure0.prototype = {
    call$1(_) {
      return this.httpResponse.close$0(0);
    },
    $signature: 48
  };
  A._logTopLevelError_closure.prototype = {
    call$1(frame) {
      return frame.get$isCore() || frame.get$$package() === "shelf";
    },
    $signature: 19
  };
  A.Body.prototype = {
    read$0(_) {
      var t1 = this._stream;
      if (t1 == null)
        throw A.wrapException(A.StateError$("The 'read' method can only be called once on a shelf.Request/shelf.Response object."));
      this._stream = null;
      return t1;
    }
  };
  A.Body__isPlainAscii_closure.prototype = {
    call$1(byte) {
      return (A._asInt(byte) & 128) === 0;
    },
    $signature: 116
  };
  A.Cascade.prototype = {
    get$handler() {
      var handler = this._handler;
      if (handler == null)
        throw A.wrapException(A.StateError$("Can't get a handler for a cascade with no inner handlers."));
      return new A.Cascade_handler_closure(this, handler);
    },
    handler$1(arg0) {
      return this.get$handler().call$1(arg0);
    }
  };
  A.Cascade_handler_closure.prototype = {
    call$1(request) {
      var t1, t2;
      type$.Request._as(request);
      t1 = this.$this;
      if (t1._parent._handler == null)
        return this.handler.call$1(request);
      t2 = type$.Response;
      return A.Future_Future$sync(new A.Cascade_handler__closure(t1, request), t2).then$1$1(new A.Cascade_handler__closure0(t1, this.handler, request), t2);
    },
    $signature: 38
  };
  A.Cascade_handler__closure.prototype = {
    call$0() {
      var t1 = this.$this._parent;
      if (t1 == null)
        t1 = type$.Cascade._as(t1);
      return t1.handler$1(this.request);
    },
    $signature: 53
  };
  A.Cascade_handler__closure0.prototype = {
    call$1(response) {
      type$.Response._as(response);
      if (this.$this._shouldCascade.call$1(response))
        return this.handler.call$1(this.request);
      return response;
    },
    $signature: 51
  };
  A._computeShouldCascade_closure.prototype = {
    call$1(response) {
      return this.statusCodeSet.contains$1(0, response.statusCode);
    },
    $signature: 120
  };
  A.Headers.prototype = {
    get$singleValues() {
      var t1, _this = this,
        value = _this.__Headers_singleValues_FI;
      if (value === $) {
        t1 = type$.String;
        t1 = A.CaseInsensitiveMap$from(_this.map$2$1(0, new A.Headers_singleValues_closure(), t1, t1), t1);
        _this.__Headers_singleValues_FI !== $ && A.throwLateFieldADI("singleValues");
        value = _this.__Headers_singleValues_FI = new A.UnmodifiableMapView(t1, type$.UnmodifiableMapView_String_String);
      }
      return value;
    }
  };
  A.Headers_singleValues_closure.prototype = {
    call$2(key, value) {
      var t1;
      A._asString(key);
      t1 = A.joinHeaderValues(type$.List_String._as(value));
      t1.toString;
      return new A.MapEntry(key, t1, type$.MapEntry_String_String);
    },
    $signature: 121
  };
  A.Headers$__closure.prototype = {
    call$1(e) {
      return J.get$isNotEmpty$asx(type$.MapEntry_of_String_and_List_String._as(e).value);
    },
    $signature: 122
  };
  A.Headers$__closure0.prototype = {
    call$1(e) {
      var t1 = type$.MapEntry_of_String_and_List_String;
      t1._as(e);
      return new A.MapEntry(e.key, A.List_List$unmodifiable(e.value, type$.String), t1);
    },
    $signature: 123
  };
  A.HijackException.prototype = {
    toString$0(_) {
      return "A shelf request's underlying data stream was hijacked.\nThis exception is used for control flow and should only be handled by a Shelf adapter.";
    },
    $isException: 1
  };
  A.Message.prototype = {
    get$contentLength() {
      var _s14_ = "content-length",
        t1 = this._contentLengthCache;
      if (t1 != null)
        return t1;
      t1 = this._headers;
      if (!J.containsKey$1$x(t1.get$singleValues()._map, _s14_))
        return null;
      t1 = J.$index$asx(t1.get$singleValues()._map, _s14_);
      t1.toString;
      return this._contentLengthCache = A.int_parse(t1, null);
    },
    get$mimeType(_) {
      var contentType = this.get$_contentType();
      if (contentType == null)
        return null;
      return contentType.type + "/" + contentType.subtype;
    },
    get$encoding(_) {
      var t1, t2,
        contentType = this.get$_contentType();
      if (contentType == null)
        return null;
      t1 = contentType.parameters._map;
      t2 = J.getInterceptor$x(t1);
      if (!t2.containsKey$1(t1, "charset"))
        return null;
      return A.Encoding_getByName(t2.$index(t1, "charset"));
    },
    get$_contentType() {
      var contentTypeValue,
        t1 = this._contentTypeCache;
      if (t1 != null)
        return t1;
      contentTypeValue = J.$index$asx(this._headers.get$singleValues()._map, "content-type");
      if (contentTypeValue == null)
        return null;
      return this._contentTypeCache = A.MediaType_MediaType$parse(contentTypeValue);
    }
  };
  A.Request.prototype = {
    Request$_$10$body$context$encoding$handlerPath$headers$onHijack$protocolVersion$url(method, requestedUri, body, context, encoding, handlerPath, headers, onHijack, protocolVersion, url) {
      var e, exception, t2, handlerPart, t3, rest, join, _this = this, _null = null,
        _s12_ = "requestedUri",
        t1 = _this.method;
      if (t1.length === 0)
        throw A.wrapException(A.ArgumentError$value(t1, "method", "cannot be empty."));
      try {
        t1 = _this.requestedUri;
        t1.get$pathSegments();
        t1.get$queryParametersAll();
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (type$.FormatException._is(t1)) {
          e = t1;
          throw A.wrapException(A.ArgumentError$value(_this.requestedUri, _s12_, "URI parsing failed: " + A.S(e)));
        } else
          throw exception;
      }
      t1 = _this.requestedUri;
      if (!t1.get$isAbsolute())
        throw A.wrapException(A.ArgumentError$value(t1, _s12_, "must be an absolute URL."));
      if (t1.get$fragment().length !== 0)
        throw A.wrapException(A.ArgumentError$value(t1, _s12_, "may not have a fragment."));
      t2 = _this.handlerPath;
      handlerPart = B.JSArray_methods.join$1(A._Uri__Uri(_null, t2, _null, _null, _null, _null, _null).get$pathSegments(), "/");
      t3 = _this.url;
      rest = B.JSArray_methods.join$1(t3.get$pathSegments(), "/");
      join = B.JSString_methods.startsWith$1(t3.path, "/") ? "/" : "";
      if (handlerPart + join + rest !== B.JSArray_methods.join$1(t1.get$pathSegments(), "/"))
        throw A.wrapException(A.ArgumentError$value(t1, _s12_, 'handlerPath "' + t2 + '" and url "' + t3.toString$0(0) + '" must combine to equal requestedUri path "' + t1.get$path(t1) + '".'));
    },
    hijack$1(callback) {
      var t1;
      type$.void_Function_StreamChannel_List_int._as(callback);
      t1 = this._onHijack;
      if (t1 == null)
        throw A.wrapException(A.StateError$("This request can't be hijacked."));
      t1.run$1(callback);
      throw A.wrapException(B.C_HijackException);
    }
  };
  A._OnHijack.prototype = {
    run$1(callback) {
      type$.void_Function_StreamChannel_List_int._as(callback);
      if (this.called)
        throw A.wrapException(A.StateError$("This request has already been hijacked."));
      this.called = true;
      A.Future_Future$microtask(new A._OnHijack_run_closure(this, callback), type$.void);
    }
  };
  A._OnHijack_run_closure.prototype = {
    call$0() {
      return this.$this._callback.call$1(this.callback);
    },
    $signature: 0
  };
  A.Response.prototype = {
    change$2$body$headers(body, headers) {
      var t1 = type$.String,
        headersAll = A.updateMap(this._headers, A._expandToHeadersAll(type$.nullable_Map_of_String_and_nullable_Object._as(headers)), t1, type$.List_String),
        newContext = A.updateMap(this.context, null, t1, type$.Object);
      return A.Response$(this.statusCode, body, newContext, null, headersAll);
    },
    change$1$body(body) {
      return this.change$2$body$headers(body, null);
    }
  };
  A.ShelfUnmodifiableMap.prototype = {};
  A._EmptyShelfUnmodifiableMap.prototype = {
    addAll$1(_, other) {
      type$.Map_String_Object._as(other);
      return this.super$MapView$addAll(0, A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Object));
    },
    $isShelfUnmodifiableMap: 1
  };
  A._expandToHeadersAll_closure.prototype = {
    call$1(e) {
      var val, t1;
      type$.MapEntry_of_String_and_nullable_Object._as(e);
      val = e.value;
      t1 = val == null ? null : A.expandHeaderValue(val);
      return new A.MapEntry(e.key, t1, type$.MapEntry_of_String_and_nullable_List_String);
    },
    $signature: 148
  };
  A.expandToHeadersAll_closure.prototype = {
    call$1(e) {
      type$.MapEntry_String_Object._as(e);
      return new A.MapEntry(e.key, A.expandHeaderValue(e.value), type$.MapEntry_of_String_and_List_String);
    },
    $signature: 125
  };
  A.createGzipMiddleware_closure.prototype = {
    call$1(innerHandler) {
      var _this = this;
      return new A.createGzipMiddleware__closure(type$.FutureOr_Response_Function_Request._as(innerHandler), _this.minimalGzipContentLength, _this.alreadyCompressedContentType, _this.compressionLevel, _this.addCompressionRatioHeader, _this.addServerTiming, _this.serverTimingEntryName);
    },
    $signature: 126
  };
  A.createGzipMiddleware__closure.prototype = {
    call$1(request) {
      var acceptEncoding, t1, _this = this;
      type$.Request._as(request);
      acceptEncoding = J.$index$asx(request._headers.get$singleValues()._map, "accept-encoding");
      t1 = acceptEncoding == null ? null : B.JSString_methods.contains$1(acceptEncoding, "gzip");
      if (t1 !== true)
        return _this.innerHandler.call$1(request);
      t1 = type$.Response;
      return A.Future_Future$sync(new A.createGzipMiddleware___closure(_this.innerHandler, request), t1).then$1$1(new A.createGzipMiddleware___closure0(_this.minimalGzipContentLength, _this.alreadyCompressedContentType, _this.compressionLevel, _this.addCompressionRatioHeader, _this.addServerTiming, _this.serverTimingEntryName), t1);
    },
    $signature: 38
  };
  A.createGzipMiddleware___closure.prototype = {
    call$0() {
      return this.innerHandler.call$1(this.request);
    },
    $signature: 53
  };
  A.createGzipMiddleware___closure0.prototype = {
    call$1(response) {
      var _this = this;
      return A.gzipEncodeResponse(type$.Response._as(response), _this.addCompressionRatioHeader, _this.addServerTiming, _this.alreadyCompressedContentType, _this.compressionLevel, _this.minimalGzipContentLength, _this.serverTimingEntryName);
    },
    $signature: 51
  };
  A.gzipEncodeResponse_closure.prototype = {
    call$2(result, bytes) {
      var bsLength, t1, t2, t3, newCapacity;
      type$._BytesBuffer._as(result);
      type$.List_int._as(bytes);
      bsLength = J.get$length$asx(bytes);
      t1 = result._gzip_encoding$_length + bsLength;
      t2 = result._bytes;
      t3 = t2.length;
      if (t3 < t1) {
        newCapacity = Math.max(t3 * 2, t1);
        B.NativeUint8List_methods.addAll$1(new Uint8Array(newCapacity), t2);
      }
      B.NativeUint8List_methods.setAll$2(result._bytes, result._gzip_encoding$_length, bytes);
      result._gzip_encoding$_length += bsLength;
      return result;
    },
    $signature: 127
  };
  A.isAlreadyCompressedContentType_closure.prototype = {
    call$1(e) {
      return A.isAlreadyCompressedExtension(A._asString(e));
    },
    $signature: 2
  };
  A._BytesBuffer.prototype = {
    get$length(_) {
      return this._gzip_encoding$_length;
    },
    toUint8List$0() {
      var t1 = this._gzip_encoding$_length,
        t2 = this._bytes;
      if (t1 === t2.length)
        return t2;
      else
        return B.NativeUint8List_methods.sublist$2(t2, 0, t1);
    }
  };
  A.proxyHandler_closure.prototype = {
    call$1(serverRequest) {
      return this.$call$body$proxyHandler_closure(type$.Request._as(serverRequest));
    },
    $call$body$proxyHandler_closure(serverRequest) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Response),
        $async$returnValue, $async$self = this, t2, t3, t4, t5, clientResponse, t1, requestUrl, clientRequest;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._box_0;
              requestUrl = t1.uri.resolve$1(serverRequest.url.get$_text());
              clientRequest = A.StreamedRequest$(serverRequest.method, requestUrl);
              clientRequest._checkFinalized$0();
              clientRequest._followRedirects = false;
              t2 = clientRequest.headers;
              t2.addAll$1(0, serverRequest._headers.get$singleValues());
              t2.$indexSet(0, "Host", t1.uri.get$authority());
              A._addHeader(t2, "via", serverRequest.protocolVersion + " " + A.S(t1.proxyName));
              t2 = clientRequest._streamed_request$_controller;
              t3 = A._instanceType(t2)._eval$1("_StreamSinkWrapper<1>");
              t4 = new A._StreamSinkWrapper(t2, t3);
              t5 = new A._StreamSinkWrapper(t2, t3);
              serverRequest._body.read$0(0).forEach$1(0, type$.void_Function_List_int._as(t4.get$add(t4))).catchError$1(new A._StreamSinkWrapper(t2, t3).get$addError()).whenComplete$1(t5.get$close(t5))._ignore$0();
              $async$goto = 3;
              return A._asyncAwait($async$self.nonNullClient.send$1(0, clientRequest), $async$call$1);
            case 3:
              // returning from await.
              clientResponse = $async$result;
              t2 = clientResponse.headers;
              A._addHeader(t2, "via", "1.1 " + A.S(t1.proxyName));
              t2.remove$1(0, "transfer-encoding");
              if (t2.$index(0, "content-encoding") === "gzip") {
                t2.remove$1(0, "content-encoding");
                t2.remove$1(0, "content-length");
                A._addHeader(t2, "warning", "214 " + A.S(t1.proxyName) + ' "GZIP decoded"');
              }
              $async$returnValue = A.Response$(clientResponse.statusCode, clientResponse.stream, null, null, t2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 17
  };
  A.SourceFile.prototype = {
    get$length(_) {
      return this._decodedChars.length;
    },
    get$lines(_) {
      return this._lineStarts.length;
    },
    SourceFile$decoded$2$url(decodedChars, url) {
      var t1, t2, t3, i, c, j, t4;
      for (t1 = this._decodedChars, t2 = t1.length, t3 = this._lineStarts, i = 0; i < t2; ++i) {
        c = t1[i];
        if (c === 13) {
          j = i + 1;
          if (j < t2) {
            if (!(j < t2))
              return A.ioore(t1, j);
            t4 = t1[j] !== 10;
          } else
            t4 = true;
          if (t4)
            c = 10;
        }
        if (c === 10)
          B.JSArray_methods.add$1(t3, i + 1);
      }
    },
    getLine$1(offset) {
      var t1, _this = this;
      if (offset < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw A.wrapException(A.RangeError$("Offset " + offset + string$.x20must_ + _this.get$length(0) + "."));
      t1 = _this._lineStarts;
      if (offset < B.JSArray_methods.get$first(t1))
        return -1;
      if (offset >= B.JSArray_methods.get$last(t1))
        return t1.length - 1;
      if (_this._isNearCachedLine$1(offset)) {
        t1 = _this._cachedLine;
        t1.toString;
        return t1;
      }
      return _this._cachedLine = _this._binarySearch$1(offset) - 1;
    },
    _isNearCachedLine$1(offset) {
      var t2, t3, t4,
        t1 = this._cachedLine;
      if (t1 == null)
        return false;
      t2 = this._lineStarts;
      t3 = t2.length;
      if (t1 >>> 0 !== t1 || t1 >= t3)
        return A.ioore(t2, t1);
      if (offset < t2[t1])
        return false;
      if (!(t1 >= t3 - 1)) {
        t4 = t1 + 1;
        if (!(t4 < t3))
          return A.ioore(t2, t4);
        t4 = offset < t2[t4];
      } else
        t4 = true;
      if (t4)
        return true;
      if (!(t1 >= t3 - 2)) {
        t4 = t1 + 2;
        if (!(t4 < t3))
          return A.ioore(t2, t4);
        t4 = offset < t2[t4];
        t2 = t4;
      } else
        t2 = true;
      if (t2) {
        this._cachedLine = t1 + 1;
        return true;
      }
      return false;
    },
    _binarySearch$1(offset) {
      var min, half,
        t1 = this._lineStarts,
        t2 = t1.length,
        max = t2 - 1;
      for (min = 0; min < max;) {
        half = min + B.JSInt_methods._tdivFast$1(max - min, 2);
        if (!(half >= 0 && half < t2))
          return A.ioore(t1, half);
        if (t1[half] > offset)
          max = half;
        else
          min = half + 1;
      }
      return max;
    },
    getColumn$1(offset) {
      var line, t1, lineStart, _this = this;
      if (offset < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw A.wrapException(A.RangeError$("Offset " + offset + " must be not be greater than the number of characters in the file, " + _this.get$length(0) + "."));
      line = _this.getLine$1(offset);
      t1 = _this._lineStarts;
      if (!(line >= 0 && line < t1.length))
        return A.ioore(t1, line);
      lineStart = t1[line];
      if (lineStart > offset)
        throw A.wrapException(A.RangeError$("Line " + line + " comes after offset " + offset + "."));
      return offset - lineStart;
    },
    getOffset$1(line) {
      var t1, t2, result, t3;
      if (line < 0)
        throw A.wrapException(A.RangeError$("Line may not be negative, was " + line + "."));
      else {
        t1 = this._lineStarts;
        t2 = t1.length;
        if (line >= t2)
          throw A.wrapException(A.RangeError$("Line " + line + " must be less than the number of lines in the file, " + this.get$lines(0) + "."));
      }
      result = t1[line];
      if (result <= this._decodedChars.length) {
        t3 = line + 1;
        t1 = t3 < t2 && result >= t1[t3];
      } else
        t1 = true;
      if (t1)
        throw A.wrapException(A.RangeError$("Line " + line + " doesn't have 0 columns."));
      return result;
    }
  };
  A.FileLocation.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$line(_) {
      return this.file.getLine$1(this.offset);
    },
    get$column() {
      return this.file.getColumn$1(this.offset);
    },
    get$offset(receiver) {
      return this.offset;
    }
  };
  A._FileSpan.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$length(_) {
      return this._end - this._file$_start;
    },
    get$start(_) {
      return A.FileLocation$_(this.file, this._file$_start);
    },
    get$end(_) {
      return A.FileLocation$_(this.file, this._end);
    },
    get$text(_) {
      return A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(this.file._decodedChars, this._file$_start, this._end), 0, null);
    },
    get$context(_) {
      var _this = this,
        t1 = _this.file,
        endOffset = _this._end,
        endLine = t1.getLine$1(endOffset);
      if (t1.getColumn$1(endOffset) === 0 && endLine !== 0) {
        if (endOffset - _this._file$_start === 0)
          return endLine === t1._lineStarts.length - 1 ? "" : A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(endLine), t1.getOffset$1(endLine + 1)), 0, null);
      } else
        endOffset = endLine === t1._lineStarts.length - 1 ? t1._decodedChars.length : t1.getOffset$1(endLine + 1);
      return A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(t1.getLine$1(_this._file$_start)), endOffset), 0, null);
    },
    compareTo$1(_, other) {
      var result;
      type$.SourceSpan._as(other);
      if (!(other instanceof A._FileSpan))
        return this.super$SourceSpanMixin$compareTo(0, other);
      result = B.JSInt_methods.compareTo$1(this._file$_start, other._file$_start);
      return result === 0 ? B.JSInt_methods.compareTo$1(this._end, other._end) : result;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!(other instanceof A._FileSpan))
        return _this.super$SourceSpanMixin$$eq(0, other);
      return _this._file$_start === other._file$_start && _this._end === other._end && J.$eq$(_this.file.url, other.file.url);
    },
    get$hashCode(_) {
      return A.Object_hash(this._file$_start, this._end, this.file.url, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $isSourceSpanWithContext: 1
  };
  A.Highlighter.prototype = {
    highlight$0(_) {
      var t2, highlightsByColumn, t3, t4, i, line, lastLine, t5, t6, t7, t8, t9, t10, t11, t12, t13, index, primaryIdx, primary, _i, _this = this, _null = null,
        t1 = _this._lines;
      _this._writeFileStart$1(B.JSArray_methods.get$first(t1).url);
      t2 = _this._maxMultilineSpans;
      highlightsByColumn = A.List_List$filled(t2, _null, false, type$.nullable__Highlight);
      for (t3 = _this._highlighter$_buffer, t2 = t2 !== 0, t4 = _this._primaryColor, i = 0; i < t1.length; ++i) {
        line = t1[i];
        if (i > 0) {
          lastLine = t1[i - 1];
          t5 = line.url;
          if (!J.$eq$(lastLine.url, t5)) {
            _this._writeSidebar$1$end("\u2575");
            t3._contents += "\n";
            _this._writeFileStart$1(t5);
          } else if (lastLine.number + 1 !== line.number) {
            _this._writeSidebar$1$text("...");
            t3._contents += "\n";
          }
        }
        for (t5 = line.highlights, t6 = A._arrayInstanceType(t5)._eval$1("ReversedListIterable<1>"), t7 = new A.ReversedListIterable(t5, t6), t7 = new A.ListIterator(t7, t7.get$length(0), t6._eval$1("ListIterator<ListIterable.E>")), t6 = t6._eval$1("ListIterable.E"), t8 = line.number, t9 = line.text; t7.moveNext$0();) {
          t10 = t7.__internal$_current;
          if (t10 == null)
            t10 = t6._as(t10);
          t11 = t10.span;
          t12 = t11.get$start(t11);
          t12 = t12.get$line(t12);
          t13 = t11.get$end(t11);
          if (t12 !== t13.get$line(t13)) {
            t12 = t11.get$start(t11);
            t11 = t12.get$line(t12) === t8 && _this._isOnlyWhitespace$1(B.JSString_methods.substring$2(t9, 0, t11.get$start(t11).get$column()));
          } else
            t11 = false;
          if (t11) {
            index = B.JSArray_methods.indexOf$1(highlightsByColumn, _null);
            if (index < 0)
              A.throwExpression(A.ArgumentError$(A.S(highlightsByColumn) + " contains no null elements.", _null));
            B.JSArray_methods.$indexSet(highlightsByColumn, index, t10);
          }
        }
        _this._writeSidebar$1$line(t8);
        t3._contents += " ";
        _this._writeMultilineHighlights$2(line, highlightsByColumn);
        if (t2)
          t3._contents += " ";
        primaryIdx = B.JSArray_methods.indexWhere$1(t5, new A.Highlighter_highlight_closure());
        if (primaryIdx === -1)
          primary = _null;
        else {
          if (!(primaryIdx >= 0 && primaryIdx < t5.length))
            return A.ioore(t5, primaryIdx);
          primary = t5[primaryIdx];
        }
        t6 = primary != null;
        if (t6) {
          t7 = primary.span;
          t10 = t7.get$start(t7);
          t10 = t10.get$line(t10) === t8 ? t7.get$start(t7).get$column() : 0;
          t11 = t7.get$end(t7);
          _this._writeHighlightedText$4$color(t9, t10, t11.get$line(t11) === t8 ? t7.get$end(t7).get$column() : t9.length, t4);
        } else
          _this._writeText$1(t9);
        t3._contents += "\n";
        if (t6)
          _this._writeIndicator$3(line, primary, highlightsByColumn);
        for (t5 = t5.length, _i = 0; _i < t5; ++_i)
          continue;
      }
      _this._writeSidebar$1$end("\u2575");
      t1 = t3._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _writeFileStart$1(url) {
      var t1, t2, _this = this;
      if (!_this._multipleFiles || !type$.Uri._is(url))
        _this._writeSidebar$1$end("\u2577");
      else {
        _this._writeSidebar$1$end("\u250c");
        _this._colorize$1$2$color(new A.Highlighter__writeFileStart_closure(_this), "\x1b[34m", type$.void);
        t1 = _this._highlighter$_buffer;
        t2 = " " + $.$get$context().prettyUri$1(url);
        t1._contents += t2;
      }
      _this._highlighter$_buffer._contents += "\n";
    },
    _writeMultilineHighlights$3$current(line, highlightsByColumn, current) {
      var t1, currentColor, t2, t3, t4, t5, t6, foundCurrent, _i, highlight, t7, startLine, t8, endLine, _this = this, _box_0 = {};
      type$.List_nullable__Highlight._as(highlightsByColumn);
      _box_0.openedOnThisLine = false;
      _box_0.openedOnThisLineColor = null;
      t1 = current == null;
      if (t1)
        currentColor = null;
      else
        currentColor = _this._primaryColor;
      for (t2 = highlightsByColumn.length, t3 = type$.Null, t4 = _this._primaryColor, t1 = !t1, t5 = _this._highlighter$_buffer, t6 = type$.void, foundCurrent = false, _i = 0; _i < t2; ++_i) {
        highlight = highlightsByColumn[_i];
        t7 = highlight == null;
        if (t7)
          startLine = null;
        else {
          t8 = highlight.span;
          t8 = t8.get$start(t8);
          startLine = t8.get$line(t8);
        }
        if (t7)
          endLine = null;
        else {
          t8 = highlight.span;
          t8 = t8.get$end(t8);
          endLine = t8.get$line(t8);
        }
        if (t1 && highlight === current) {
          _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure(_this, startLine, line), currentColor, t3);
          foundCurrent = true;
        } else if (foundCurrent)
          _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure0(_this, highlight), currentColor, t3);
        else if (t7)
          if (_box_0.openedOnThisLine)
            _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure1(_this), _box_0.openedOnThisLineColor, t6);
          else
            t5._contents += " ";
        else
          _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure2(_box_0, _this, current, startLine, line, highlight, endLine), t4, t3);
      }
    },
    _writeMultilineHighlights$2(line, highlightsByColumn) {
      return this._writeMultilineHighlights$3$current(line, highlightsByColumn, null);
    },
    _writeHighlightedText$4$color(text, startColumn, endColumn, color) {
      var _this = this;
      _this._writeText$1(B.JSString_methods.substring$2(text, 0, startColumn));
      _this._colorize$1$2$color(new A.Highlighter__writeHighlightedText_closure(_this, text, startColumn, endColumn), color, type$.void);
      _this._writeText$1(B.JSString_methods.substring$2(text, endColumn, text.length));
    },
    _writeIndicator$3(line, highlight, highlightsByColumn) {
      var color, t1, t2, t3, _this = this;
      type$.List_nullable__Highlight._as(highlightsByColumn);
      color = _this._primaryColor;
      t1 = highlight.span;
      t2 = t1.get$start(t1);
      t2 = t2.get$line(t2);
      t3 = t1.get$end(t1);
      if (t2 === t3.get$line(t3)) {
        _this._writeSidebar$0();
        t1 = _this._highlighter$_buffer;
        t1._contents += " ";
        _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
        if (highlightsByColumn.length !== 0)
          t1._contents += " ";
        _this._writeLabel$3(highlight, highlightsByColumn, _this._colorize$1$2$color(new A.Highlighter__writeIndicator_closure(_this, line, highlight), color, type$.int));
      } else {
        t2 = t1.get$start(t1);
        t3 = line.number;
        if (t2.get$line(t2) === t3) {
          if (B.JSArray_methods.contains$1(highlightsByColumn, highlight))
            return;
          A.replaceFirstNull(highlightsByColumn, highlight, type$._Highlight);
          _this._writeSidebar$0();
          t1 = _this._highlighter$_buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$1$2$color(new A.Highlighter__writeIndicator_closure0(_this, line, highlight), color, type$.void);
          t1._contents += "\n";
        } else {
          t2 = t1.get$end(t1);
          if (t2.get$line(t2) === t3) {
            t1 = t1.get$end(t1).get$column();
            if (t1 === line.text.length) {
              A.replaceWithNull(highlightsByColumn, highlight, type$._Highlight);
              return;
            }
            _this._writeSidebar$0();
            _this._highlighter$_buffer._contents += " ";
            _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
            _this._writeLabel$3(highlight, highlightsByColumn, _this._colorize$1$2$color(new A.Highlighter__writeIndicator_closure1(_this, false, line, highlight), color, type$.int));
            A.replaceWithNull(highlightsByColumn, highlight, type$._Highlight);
          }
        }
      }
    },
    _writeArrow$3$beginning(line, column, beginning) {
      var t1 = beginning ? 0 : 1,
        t2 = this._highlighter$_buffer;
      t1 = B.JSString_methods.$mul("\u2500", 1 + column + this._countTabs$1(B.JSString_methods.substring$2(line.text, 0, column + t1)) * 3);
      t2._contents = (t2._contents += t1) + "^";
    },
    _writeArrow$2(line, column) {
      return this._writeArrow$3$beginning(line, column, true);
    },
    _writeLabel$3(highlight, highlightsByColumn, underlineLength) {
      type$.List_nullable__Highlight._as(highlightsByColumn);
      this._highlighter$_buffer._contents += "\n";
      return;
    },
    _writeText$1(text) {
      var t1, t2, t3, t4;
      for (t1 = new A.CodeUnits(text), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListBase.E>")), t3 = this._highlighter$_buffer, t2 = t2._eval$1("ListBase.E"); t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        if (t4 === 9) {
          t4 = B.JSString_methods.$mul(" ", 4);
          t3._contents += t4;
        } else {
          t4 = A.Primitives_stringFromCharCode(t4);
          t3._contents += t4;
        }
      }
    },
    _writeSidebar$3$end$line$text(end, line, text) {
      var t1 = {};
      t1.text = text;
      if (line != null)
        t1.text = B.JSInt_methods.toString$0(line + 1);
      this._colorize$1$2$color(new A.Highlighter__writeSidebar_closure(t1, this, end), "\x1b[34m", type$.Null);
    },
    _writeSidebar$1$end(end) {
      return this._writeSidebar$3$end$line$text(end, null, null);
    },
    _writeSidebar$1$text(text) {
      return this._writeSidebar$3$end$line$text(null, null, text);
    },
    _writeSidebar$1$line(line) {
      return this._writeSidebar$3$end$line$text(null, line, null);
    },
    _writeSidebar$0() {
      return this._writeSidebar$3$end$line$text(null, null, null);
    },
    _countTabs$1(text) {
      var t1, t2, count, t3;
      for (t1 = new A.CodeUnits(text), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListBase.E>")), t2 = t2._eval$1("ListBase.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === 9)
          ++count;
      }
      return count;
    },
    _isOnlyWhitespace$1(text) {
      var t1, t2, t3;
      for (t1 = new A.CodeUnits(text), t2 = type$.CodeUnits, t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListBase.E>")), t2 = t2._eval$1("ListBase.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 !== 32 && t3 !== 9)
          return false;
      }
      return true;
    },
    _colorize$1$2$color(callback, color, $T) {
      var t1, result;
      $T._eval$1("0()")._as(callback);
      t1 = this._primaryColor != null;
      if (t1 && color != null)
        this._highlighter$_buffer._contents += color;
      result = callback.call$0();
      if (t1 && color != null)
        this._highlighter$_buffer._contents += "\x1b[0m";
      return result;
    }
  };
  A.Highlighter_closure.prototype = {
    call$0() {
      return this.color;
    },
    $signature: 128
  };
  A.Highlighter$__closure.prototype = {
    call$1(line) {
      var t1 = type$._Line._as(line).highlights,
        t2 = A._arrayInstanceType(t1);
      return new A.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Highlighter$___closure()), t2._eval$1("WhereIterable<1>")).get$length(0);
    },
    $signature: 129
  };
  A.Highlighter$___closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span,
        t2 = t1.get$start(t1);
      t2 = t2.get$line(t2);
      t1 = t1.get$end(t1);
      return t2 !== t1.get$line(t1);
    },
    $signature: 26
  };
  A.Highlighter$__closure0.prototype = {
    call$1(line) {
      return type$._Line._as(line).url;
    },
    $signature: 131
  };
  A.Highlighter__collateLines_closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span.get$sourceUrl();
      return t1 == null ? new A.Object() : t1;
    },
    $signature: 132
  };
  A.Highlighter__collateLines_closure0.prototype = {
    call$2(highlight1, highlight2) {
      var t1 = type$._Highlight;
      return t1._as(highlight1).span.compareTo$1(0, t1._as(highlight2).span);
    },
    $signature: 133
  };
  A.Highlighter__collateLines_closure1.prototype = {
    call$1(entry) {
      var url, highlightsForFile, lines, t1, t2, t3, t4, context, t5, linesBeforeSpan, lineNumber, _i, line, activeHighlights, flags, highlightIndex, oldHighlightLength, t6, t7, t8;
      type$.MapEntry_of_Object_and_List__Highlight._as(entry);
      url = entry.key;
      highlightsForFile = entry.value;
      lines = A._setArrayType([], type$.JSArray__Line);
      for (t1 = J.getInterceptor$ax(highlightsForFile), t2 = t1.get$iterator(highlightsForFile), t3 = type$.JSArray__Highlight; t2.moveNext$0();) {
        t4 = t2.get$current(t2).span;
        context = t4.get$context(t4);
        t5 = A.findLineStart(context, t4.get$text(t4), t4.get$start(t4).get$column());
        t5.toString;
        linesBeforeSpan = B.JSString_methods.allMatches$1("\n", B.JSString_methods.substring$2(context, 0, t5)).get$length(0);
        t4 = t4.get$start(t4);
        lineNumber = t4.get$line(t4) - linesBeforeSpan;
        for (t4 = context.split("\n"), t5 = t4.length, _i = 0; _i < t5; ++_i) {
          line = t4[_i];
          if (lines.length === 0 || lineNumber > B.JSArray_methods.get$last(lines).number)
            B.JSArray_methods.add$1(lines, new A._Line(line, lineNumber, url, A._setArrayType([], t3)));
          ++lineNumber;
        }
      }
      activeHighlights = A._setArrayType([], t3);
      for (t2 = lines.length, t3 = type$.bool_Function__Highlight, flags = activeHighlights.$flags | 0, highlightIndex = 0, _i = 0; _i < lines.length; lines.length === t2 || (0, A.throwConcurrentModificationError)(lines), ++_i) {
        line = lines[_i];
        t4 = t3._as(new A.Highlighter__collateLines__closure(line));
        flags & 1 && A.throwUnsupportedOperation(activeHighlights, 16);
        B.JSArray_methods._removeWhere$2(activeHighlights, t4, true);
        oldHighlightLength = activeHighlights.length;
        for (t4 = t1.skip$1(highlightsForFile, highlightIndex), t5 = t4.$ti, t4 = new A.ListIterator(t4, t4.get$length(0), t5._eval$1("ListIterator<ListIterable.E>")), t6 = line.number, t5 = t5._eval$1("ListIterable.E"); t4.moveNext$0();) {
          t7 = t4.__internal$_current;
          if (t7 == null)
            t7 = t5._as(t7);
          t8 = t7.span;
          t8 = t8.get$start(t8);
          if (t8.get$line(t8) > t6)
            break;
          B.JSArray_methods.add$1(activeHighlights, t7);
        }
        highlightIndex += activeHighlights.length - oldHighlightLength;
        B.JSArray_methods.addAll$1(line.highlights, activeHighlights);
      }
      return lines;
    },
    $signature: 134
  };
  A.Highlighter__collateLines__closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span;
      t1 = t1.get$end(t1);
      return t1.get$line(t1) < this.line.number;
    },
    $signature: 26
  };
  A.Highlighter_highlight_closure.prototype = {
    call$1(highlight) {
      type$._Highlight._as(highlight);
      return true;
    },
    $signature: 26
  };
  A.Highlighter__writeFileStart_closure.prototype = {
    call$0() {
      var t1 = this.$this._highlighter$_buffer,
        t2 = B.JSString_methods.$mul("\u2500", 2) + ">";
      t1._contents += t2;
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure.prototype = {
    call$0() {
      var t1 = this.$this._highlighter$_buffer,
        t2 = this.startLine === this.line.number ? "\u250c" : "\u2514";
      t1._contents += t2;
    },
    $signature: 1
  };
  A.Highlighter__writeMultilineHighlights_closure0.prototype = {
    call$0() {
      var t1 = this.$this._highlighter$_buffer,
        t2 = this.highlight == null ? "\u2500" : "\u253c";
      t1._contents += t2;
    },
    $signature: 1
  };
  A.Highlighter__writeMultilineHighlights_closure1.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += "\u2500";
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure2.prototype = {
    call$0() {
      var t2, t3, _this = this,
        t1 = _this._box_0,
        vertical = t1.openedOnThisLine ? "\u253c" : "\u2502";
      if (_this.current != null)
        _this.$this._highlighter$_buffer._contents += vertical;
      else {
        t2 = _this.line;
        t3 = t2.number;
        if (_this.startLine === t3) {
          t2 = _this.$this;
          t2._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights__closure(t1, t2), t1.openedOnThisLineColor, type$.Null);
          t1.openedOnThisLine = true;
          if (t1.openedOnThisLineColor == null)
            t1.openedOnThisLineColor = t2._primaryColor;
        } else {
          if (_this.endLine === t3) {
            t3 = _this.highlight.span;
            t2 = t3.get$end(t3).get$column() === t2.text.length;
          } else
            t2 = false;
          t3 = _this.$this;
          if (t2)
            t3._highlighter$_buffer._contents += "\u2514";
          else
            t3._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights__closure0(t3, vertical), t1.openedOnThisLineColor, type$.Null);
        }
      }
    },
    $signature: 1
  };
  A.Highlighter__writeMultilineHighlights__closure.prototype = {
    call$0() {
      var t1 = this.$this._highlighter$_buffer,
        t2 = this._box_0.openedOnThisLine ? "\u252c" : "\u250c";
      t1._contents += t2;
    },
    $signature: 1
  };
  A.Highlighter__writeMultilineHighlights__closure0.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += this.vertical;
    },
    $signature: 1
  };
  A.Highlighter__writeHighlightedText_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this._writeText$1(B.JSString_methods.substring$2(_this.text, _this.startColumn, _this.endColumn));
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure.prototype = {
    call$0() {
      var tabsBefore, tabsInside,
        t1 = this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = t2._contents,
        t4 = this.highlight.span,
        startColumn = t4.get$start(t4).get$column(),
        endColumn = t4.get$end(t4).get$column();
      t4 = this.line.text;
      tabsBefore = t1._countTabs$1(B.JSString_methods.substring$2(t4, 0, startColumn));
      tabsInside = t1._countTabs$1(B.JSString_methods.substring$2(t4, startColumn, endColumn));
      startColumn += tabsBefore * 3;
      t4 = B.JSString_methods.$mul(" ", startColumn);
      t2._contents += t4;
      t4 = B.JSString_methods.$mul("^", Math.max(endColumn + (tabsBefore + tabsInside) * 3 - startColumn, 1));
      return (t2._contents += t4).length - t3.length;
    },
    $signature: 40
  };
  A.Highlighter__writeIndicator_closure0.prototype = {
    call$0() {
      var t1 = this.highlight.span;
      return this.$this._writeArrow$2(this.line, t1.get$start(t1).get$column());
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure1.prototype = {
    call$0() {
      var t4, _this = this,
        t1 = _this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = t2._contents;
      if (_this.coversWholeLine) {
        t1 = B.JSString_methods.$mul("\u2500", 3);
        t2._contents += t1;
      } else {
        t4 = _this.highlight.span;
        t1._writeArrow$3$beginning(_this.line, Math.max(t4.get$end(t4).get$column() - 1, 0), false);
      }
      return t2._contents.length - t3.length;
    },
    $signature: 40
  };
  A.Highlighter__writeSidebar_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = this._box_0.text;
      if (t3 == null)
        t3 = "";
      t1 = B.JSString_methods.padRight$1(t3, t1._paddingBeforeSidebar);
      t1 = t2._contents += t1;
      t3 = this.end;
      t2._contents = t1 + (t3 == null ? "\u2502" : t3);
    },
    $signature: 1
  };
  A._Highlight.prototype = {
    toString$0(_) {
      var t3, t4,
        t1 = this.span,
        t2 = t1.get$start(t1);
      t2 = t2.get$line(t2);
      t3 = t1.get$start(t1).get$column();
      t4 = t1.get$end(t1);
      t1 = "" + "primary " + ("" + t2 + ":" + t3 + "-" + t4.get$line(t4) + ":" + t1.get$end(t1).get$column());
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._Highlight_closure.prototype = {
    call$0() {
      var t1, t2, t3, t4,
        newSpan = this.span;
      if (!(type$.SourceSpanWithContext._is(newSpan) && A.findLineStart(newSpan.get$context(newSpan), newSpan.get$text(newSpan), newSpan.get$start(newSpan).get$column()) != null)) {
        t1 = newSpan.get$start(newSpan);
        t1 = A.SourceLocation$(t1.get$offset(t1), 0, 0, newSpan.get$sourceUrl());
        t2 = newSpan.get$end(newSpan);
        t2 = t2.get$offset(t2);
        t3 = newSpan.get$sourceUrl();
        t4 = A.countCodeUnits(newSpan.get$text(newSpan), 10);
        newSpan = A.SourceSpanWithContext$(t1, A.SourceLocation$(t2, A._Highlight__lastLineLength(newSpan.get$text(newSpan)), t4, t3), newSpan.get$text(newSpan), newSpan.get$text(newSpan));
      }
      return A._Highlight__normalizeEndOfLine(A._Highlight__normalizeTrailingNewline(A._Highlight__normalizeNewlines(newSpan)));
    },
    $signature: 136
  };
  A._Line.prototype = {
    toString$0(_) {
      return "" + this.number + ': "' + this.text + '" (' + B.JSArray_methods.join$1(this.highlights, ", ") + ")";
    }
  };
  A.SourceLocation.prototype = {
    distance$1(other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t1) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      var t1;
      type$.SourceLocation._as(other);
      t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t1) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.sourceUrl, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.sourceUrl;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var _this = this,
        t1 = A.getRuntimeTypeOfDartObject(_this).toString$0(0),
        source = _this.sourceUrl;
      return "<" + t1 + ": " + _this.offset + " " + (A.S(source == null ? "unknown source" : source) + ":" + (_this.line + 1) + ":" + (_this.column + 1)) + ">";
    },
    $isComparable: 1,
    get$sourceUrl() {
      return this.sourceUrl;
    },
    get$offset(receiver) {
      return this.offset;
    },
    get$line(receiver) {
      return this.line;
    },
    get$column() {
      return this.column;
    }
  };
  A.SourceLocationMixin.prototype = {
    distance$1(other) {
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(this.get$sourceUrl()) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      type$.SourceLocation._as(other);
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(this.get$sourceUrl()) + '" and "' + A.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.file.url, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.file.url;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var t1 = A.getRuntimeTypeOfDartObject(this).toString$0(0),
        t2 = this.offset,
        t3 = this.file,
        source = t3.url;
      return "<" + t1 + ": " + t2 + " " + (A.S(source == null ? "unknown source" : source) + ":" + (t3.getLine$1(t2) + 1) + ":" + (t3.getColumn$1(t2) + 1)) + ">";
    },
    $isComparable: 1,
    $isSourceLocation: 1
  };
  A.SourceSpanBase.prototype = {
    SourceSpanBase$3(start, end, text) {
      var t3,
        t1 = this.end,
        t2 = this.start;
      if (!J.$eq$(t1.get$sourceUrl(), t2.get$sourceUrl()))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t2.get$sourceUrl()) + '" and  "' + A.S(t1.get$sourceUrl()) + "\" don't match.", null));
      else if (t1.get$offset(t1) < t2.get$offset(t2))
        throw A.wrapException(A.ArgumentError$("End " + t1.toString$0(0) + " must come after start " + t2.toString$0(0) + ".", null));
      else {
        t3 = this.text;
        if (t3.length !== t2.distance$1(t1))
          throw A.wrapException(A.ArgumentError$('Text "' + t3 + '" must be ' + t2.distance$1(t1) + " characters long.", null));
      }
    },
    get$start(receiver) {
      return this.start;
    },
    get$end(receiver) {
      return this.end;
    },
    get$text(receiver) {
      return this.text;
    }
  };
  A.SourceSpanException.prototype = {
    get$message(_) {
      return this._span_exception$_message;
    },
    toString$0(_) {
      var t3, t4, highlight,
        t1 = this._span,
        t2 = "" + ("line " + (t1.get$start(0).get$line(0) + 1) + ", column " + (t1.get$start(0).get$column() + 1));
      if (t1.get$sourceUrl() != null) {
        t3 = t1.get$sourceUrl();
        t4 = $.$get$context();
        t3.toString;
        t3 = t2 + (" of " + t4.prettyUri$1(t3));
        t2 = t3;
      }
      t2 += ": " + this._span_exception$_message;
      highlight = t1.highlight$1$color(0, null);
      t1 = highlight.length !== 0 ? t2 + "\n" + highlight : t2;
      return "Error on " + (t1.charCodeAt(0) == 0 ? t1 : t1);
    },
    $isException: 1
  };
  A.SourceSpanFormatException.prototype = {
    get$offset(_) {
      var t1 = this._span;
      t1 = A.FileLocation$_(t1.file, t1._file$_start);
      return t1.offset;
    },
    $isFormatException: 1,
    get$source(receiver) {
      return this.source;
    }
  };
  A.SourceSpanMixin.prototype = {
    get$sourceUrl() {
      return this.get$start(this).get$sourceUrl();
    },
    get$length(_) {
      var t2, _this = this,
        t1 = _this.get$end(_this);
      t1 = t1.get$offset(t1);
      t2 = _this.get$start(_this);
      return t1 - t2.get$offset(t2);
    },
    compareTo$1(_, other) {
      var result, _this = this;
      type$.SourceSpan._as(other);
      result = _this.get$start(_this).compareTo$1(0, other.get$start(other));
      return result === 0 ? _this.get$end(_this).compareTo$1(0, other.get$end(other)) : result;
    },
    highlight$1$color(_, color) {
      var _this = this;
      if (!type$.SourceSpanWithContext._is(_this) && _this.get$length(_this) === 0)
        return "";
      return A.Highlighter$(_this, color).highlight$0(0);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.SourceSpanMixin && _this.get$start(_this).$eq(0, other.get$start(other)) && _this.get$end(_this).$eq(0, other.get$end(other));
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$start(_this), _this.get$end(_this), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "<" + A.getRuntimeTypeOfDartObject(_this).toString$0(0) + ": from " + _this.get$start(_this).toString$0(0) + " to " + _this.get$end(_this).toString$0(0) + ' "' + _this.get$text(_this) + '">';
    },
    $isComparable: 1,
    $isSourceSpan: 1
  };
  A.SourceSpanWithContext.prototype = {
    get$context(_) {
      return this._context;
    }
  };
  A.Chain.prototype = {
    get$terse() {
      return this.foldFrames$2$terse(new A.Chain_terse_closure(), true);
    },
    foldFrames$2$terse(predicate, terse) {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,Trace>"),
        foldedTraces = new A.MappedListIterable(t1, t2._eval$1("Trace(1)")._as(new A.Chain_foldFrames_closure(type$.bool_Function_Frame._as(predicate), terse)), t3),
        nonEmptyTraces = foldedTraces.super$Iterable$where(0, t3._eval$1("bool(ListIterable.E)")._as(new A.Chain_foldFrames_closure0(terse)));
      if (!nonEmptyTraces.get$iterator(0).moveNext$0() && !foldedTraces.get$isEmpty(0))
        return new A.Chain(A.List_List$unmodifiable(A._setArrayType([foldedTraces.get$last(0)], type$.JSArray_Trace), type$.Trace));
      return new A.Chain(A.List_List$unmodifiable(nonEmptyTraces, type$.Trace));
    },
    foldFrames$1(predicate) {
      predicate.toString;
      return this.foldFrames$2$terse(predicate, false);
    },
    toTrace$0() {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1);
      return A.Trace$(new A.ExpandIterable(t1, t2._eval$1("Iterable<Frame>(1)")._as(new A.Chain_toTrace_closure()), t2._eval$1("ExpandIterable<1,Frame>")), null);
    },
    toString$0(_) {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Chain_toString_closure(new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Chain_toString_closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int))), t2._eval$1("MappedListIterable<1,String>")).join$1(0, string$.x3d_____);
    },
    $isStackTrace: 1
  };
  A.Chain_Chain$forTrace_closure.prototype = {
    call$0() {
      return A.Chain_Chain$parse(this.trace.toString$0(0));
    },
    $signature: 37
  };
  A.Chain_Chain$parse_closure.prototype = {
    call$1(line) {
      return A._asString(line).length !== 0;
    },
    $signature: 2
  };
  A.Chain_terse_closure.prototype = {
    call$1(_) {
      return false;
    },
    $signature: 19
  };
  A.Chain_foldFrames_closure.prototype = {
    call$1(trace) {
      return type$.Trace._as(trace).foldFrames$2$terse(this.predicate, this.terse);
    },
    $signature: 138
  };
  A.Chain_foldFrames_closure0.prototype = {
    call$1(trace) {
      type$.Trace._as(trace);
      if (trace.get$frames().length > 1)
        return true;
      if (trace.get$frames().length === 0)
        return false;
      if (!this.terse)
        return false;
      return J.get$line$z(B.JSArray_methods.get$single(trace.get$frames())) != null;
    },
    $signature: 139
  };
  A.Chain_toTrace_closure.prototype = {
    call$1(trace) {
      return type$.Trace._as(trace).get$frames();
    },
    $signature: 140
  };
  A.Chain_toString_closure0.prototype = {
    call$1(trace) {
      var t1 = type$.Trace._as(trace).get$frames(),
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Chain_toString__closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int);
    },
    $signature: 141
  };
  A.Chain_toString__closure0.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return frame.get$location(frame).length;
    },
    $signature: 50
  };
  A.Chain_toString_closure.prototype = {
    call$1(trace) {
      var t1 = type$.Trace._as(trace).get$frames(),
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Chain_toString__closure(this.longest)), t2._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $signature: 143
  };
  A.Chain_toString__closure.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return B.JSString_methods.padRight$1(frame.get$location(frame), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 28
  };
  A.Frame.prototype = {
    get$isCore() {
      return this.uri.get$scheme() === "dart";
    },
    get$library() {
      var t1 = this.uri;
      if (t1.get$scheme() === "data")
        return "data:...";
      return $.$get$context().prettyUri$1(t1);
    },
    get$$package() {
      var t1 = this.uri;
      if (t1.get$scheme() !== "package")
        return null;
      return B.JSArray_methods.get$first(t1.get$path(t1).split("/"));
    },
    get$location(_) {
      var t2, _this = this,
        t1 = _this.line;
      if (t1 == null)
        return _this.get$library();
      t2 = _this.column;
      if (t2 == null)
        return _this.get$library() + " " + A.S(t1);
      return _this.get$library() + " " + A.S(t1) + ":" + A.S(t2);
    },
    toString$0(_) {
      return this.get$location(0) + " in " + A.S(this.member);
    },
    get$uri() {
      return this.uri;
    },
    get$line(receiver) {
      return this.line;
    },
    get$column() {
      return this.column;
    },
    get$member() {
      return this.member;
    }
  };
  A.Frame_Frame$parseVM_closure.prototype = {
    call$0() {
      var match, t2, t3, member, uri, lineAndColumn, line, _null = null,
        t1 = this.frame;
      if (t1 === "...")
        return new A.Frame(A._Uri__Uri(_null, _null, _null, _null, _null, _null, _null), _null, _null, "...");
      match = $.$get$_vmFrame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null, _null, _null, _null), t1);
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      t3 = $.$get$_asyncBody();
      t2 = A.stringReplaceAllUnchecked(t2, t3, "<async>");
      member = A.stringReplaceAllUnchecked(t2, "<anonymous closure>", "<fn>");
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t3 = t2;
      t3.toString;
      if (B.JSString_methods.startsWith$1(t3, "<data:"))
        uri = A.Uri_Uri$dataFromString("");
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      lineAndColumn = t1[3].split(":");
      t1 = lineAndColumn.length;
      line = t1 > 1 ? A.int_parse(lineAndColumn[1], _null) : _null;
      return new A.Frame(uri, line, t1 > 2 ? A.int_parse(lineAndColumn[2], _null) : _null, member);
    },
    $signature: 13
  };
  A.Frame_Frame$parseV8_closure.prototype = {
    call$0() {
      var member, uri, t2, functionOffset, t3, t4, _null = null, _s4_ = "<fn>",
        t1 = this.frame,
        match = $.$get$_v8WasmFrame().firstMatch$1(t1);
      if (match != null) {
        member = match.namedGroup$1("member");
        t1 = match.namedGroup$1("uri");
        t1.toString;
        uri = A.Frame__uriOrPathToUri(t1);
        t1 = match.namedGroup$1("index");
        t1.toString;
        t2 = match.namedGroup$1("offset");
        t2.toString;
        functionOffset = A.int_parse(t2, 16);
        if (!(member == null))
          t1 = member;
        return new A.Frame(uri, 1, functionOffset + 1, t1);
      }
      match = $.$get$_v8JsFrame().firstMatch$1(t1);
      if (match != null) {
        t1 = new A.Frame_Frame$parseV8_closure_parseJsLocation(t1);
        t2 = match._match;
        t3 = t2.length;
        if (2 >= t3)
          return A.ioore(t2, 2);
        t4 = t2[2];
        if (t4 != null) {
          t3 = t4;
          t3.toString;
          t2 = t2[1];
          t2.toString;
          t2 = A.stringReplaceAllUnchecked(t2, "<anonymous>", _s4_);
          t2 = A.stringReplaceAllUnchecked(t2, "Anonymous function", _s4_);
          return t1.call$2(t3, A.stringReplaceAllUnchecked(t2, "(anonymous function)", _s4_));
        } else {
          if (3 >= t3)
            return A.ioore(t2, 3);
          t2 = t2[3];
          t2.toString;
          return t1.call$2(t2, _s4_);
        }
      }
      return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null, _null, _null, _null), t1);
    },
    $signature: 13
  };
  A.Frame_Frame$parseV8_closure_parseJsLocation.prototype = {
    call$2($location, member) {
      var t2, urlMatch, uri, line, columnMatch, _null = null,
        t1 = $.$get$_v8EvalLocation(),
        evalMatch = t1.firstMatch$1($location);
      for (; evalMatch != null; $location = t2) {
        t2 = evalMatch._match;
        if (1 >= t2.length)
          return A.ioore(t2, 1);
        t2 = t2[1];
        t2.toString;
        evalMatch = t1.firstMatch$1(t2);
      }
      if ($location === "native")
        return new A.Frame(A.Uri_parse("native"), _null, _null, member);
      urlMatch = $.$get$_v8JsUrlLocation().firstMatch$1($location);
      if (urlMatch == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null, _null, _null, _null), this.frame);
      t1 = urlMatch._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t2.toString;
      line = A.int_parse(t2, _null);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      columnMatch = t1[3];
      return new A.Frame(uri, line, columnMatch != null ? A.int_parse(columnMatch, _null) : _null, member);
    },
    $signature: 146
  };
  A.Frame_Frame$_parseFirefoxEval_closure.prototype = {
    call$0() {
      var t2, member, uri, line, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxEvalLocation().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null, _null, _null, _null), t1);
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      t2.toString;
      member = A.stringReplaceAllUnchecked(t2, "/<", "");
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      t1 = t1[3];
      t1.toString;
      line = A.int_parse(t1, _null);
      return new A.Frame(uri, line, _null, member.length === 0 || member === "anonymous" ? "<fn>" : member);
    },
    $signature: 13
  };
  A.Frame_Frame$parseFirefox_closure.prototype = {
    call$0() {
      var t2, t3, t4, uri, member, line, column, functionOffset, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxSafariJSFrame().firstMatch$1(t1);
      if (match != null) {
        t2 = match._match;
        if (3 >= t2.length)
          return A.ioore(t2, 3);
        t3 = t2[3];
        t4 = t3;
        t4.toString;
        if (B.JSString_methods.contains$1(t4, " line "))
          return A.Frame_Frame$_parseFirefoxEval(t1);
        t1 = t3;
        t1.toString;
        uri = A.Frame__uriOrPathToUri(t1);
        t1 = t2.length;
        if (1 >= t1)
          return A.ioore(t2, 1);
        member = t2[1];
        if (member != null) {
          if (2 >= t1)
            return A.ioore(t2, 2);
          t1 = t2[2];
          t1.toString;
          member += B.JSArray_methods.join$0(A.List_List$filled(B.JSString_methods.allMatches$1("/", t1).get$length(0), ".<fn>", false, type$.String));
          if (member === "")
            member = "<fn>";
          member = B.JSString_methods.replaceFirst$2(member, $.$get$_initialDot(), "");
        } else
          member = "<fn>";
        if (4 >= t2.length)
          return A.ioore(t2, 4);
        t1 = t2[4];
        if (t1 === "")
          line = _null;
        else {
          t1 = t1;
          t1.toString;
          line = A.int_parse(t1, _null);
        }
        if (5 >= t2.length)
          return A.ioore(t2, 5);
        t1 = t2[5];
        if (t1 == null || t1 === "")
          column = _null;
        else {
          t1 = t1;
          t1.toString;
          column = A.int_parse(t1, _null);
        }
        return new A.Frame(uri, line, column, member);
      }
      match = $.$get$_firefoxWasmFrame().firstMatch$1(t1);
      if (match != null) {
        t1 = match.namedGroup$1("member");
        t1.toString;
        t2 = match.namedGroup$1("uri");
        t2.toString;
        uri = A.Frame__uriOrPathToUri(t2);
        t2 = match.namedGroup$1("index");
        t2.toString;
        t3 = match.namedGroup$1("offset");
        t3.toString;
        functionOffset = A.int_parse(t3, 16);
        if (!(t1.length !== 0))
          t1 = t2;
        return new A.Frame(uri, 1, functionOffset + 1, t1);
      }
      match = $.$get$_safariWasmFrame().firstMatch$1(t1);
      if (match != null) {
        t1 = match.namedGroup$1("member");
        t1.toString;
        return new A.Frame(A._Uri__Uri(_null, "wasm code", _null, _null, _null, _null, _null), _null, _null, t1);
      }
      return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null, _null, _null, _null), t1);
    },
    $signature: 13
  };
  A.Frame_Frame$parseFriendly_closure.prototype = {
    call$0() {
      var t2, uri, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_friendlyFrame().firstMatch$1(t1);
      if (match == null)
        throw A.wrapException(A.FormatException$("Couldn't parse package:stack_trace stack trace line '" + t1 + "'.", _null, _null));
      t1 = match._match;
      if (1 >= t1.length)
        return A.ioore(t1, 1);
      t2 = t1[1];
      if (t2 === "data:...")
        uri = A.Uri_Uri$dataFromString("");
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      if (uri.get$scheme() === "") {
        t2 = $.$get$context();
        uri = t2.toUri$1(t2.absolute$15(0, t2.style.pathFromUri$1(A._parseUri(uri)), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      }
      if (2 >= t1.length)
        return A.ioore(t1, 2);
      t2 = t1[2];
      if (t2 == null)
        line = _null;
      else {
        t2 = t2;
        t2.toString;
        line = A.int_parse(t2, _null);
      }
      if (3 >= t1.length)
        return A.ioore(t1, 3);
      t2 = t1[3];
      if (t2 == null)
        column = _null;
      else {
        t2 = t2;
        t2.toString;
        column = A.int_parse(t2, _null);
      }
      if (4 >= t1.length)
        return A.ioore(t1, 4);
      return new A.Frame(uri, line, column, t1[4]);
    },
    $signature: 13
  };
  A.LazyChain.prototype = {
    get$_chain() {
      var result, _this = this,
        value = _this.__LazyChain__chain_FI;
      if (value === $) {
        result = _this._thunk.call$0();
        _this.__LazyChain__chain_FI !== $ && A.throwLateFieldADI("_chain");
        _this.__LazyChain__chain_FI = result;
        value = result;
      }
      return value;
    },
    get$terse() {
      return this.get$_chain().get$terse();
    },
    foldFrames$2$terse(predicate, terse) {
      return new A.LazyChain(new A.LazyChain_foldFrames_closure(this, type$.bool_Function_Frame._as(predicate), false));
    },
    foldFrames$1(predicate) {
      predicate.toString;
      return this.foldFrames$2$terse(predicate, false);
    },
    toString$0(_) {
      return this.get$_chain().toString$0(0);
    },
    $isStackTrace: 1,
    $isChain: 1
  };
  A.LazyChain_foldFrames_closure.prototype = {
    call$0() {
      return this.$this.get$_chain().foldFrames$2$terse(this.predicate, this.terse);
    },
    $signature: 37
  };
  A.Trace.prototype = {
    foldFrames$2$terse(predicate, terse) {
      var newFrames, t1, t2, t3, _box_0 = {};
      _box_0.predicate = predicate;
      type$.bool_Function_Frame._as(predicate);
      _box_0.predicate = predicate;
      if (terse)
        _box_0.predicate = new A.Trace_foldFrames_closure(predicate);
      newFrames = A._setArrayType([], type$.JSArray_Frame);
      for (t1 = this.frames, t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new A.ReversedListIterable(t1, t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 instanceof A.UnparsedFrame || !_box_0.predicate.call$1(t3))
          B.JSArray_methods.add$1(newFrames, t3);
        else if (newFrames.length === 0 || !_box_0.predicate.call$1(B.JSArray_methods.get$last(newFrames)))
          B.JSArray_methods.add$1(newFrames, new A.Frame(t3.get$uri(), t3.get$line(t3), t3.get$column(), t3.get$member()));
      }
      if (terse) {
        t1 = type$.MappedListIterable_Frame_Frame;
        newFrames = A.List_List$_of(new A.MappedListIterable(newFrames, type$.Frame_Function_Frame._as(new A.Trace_foldFrames_closure0(_box_0)), t1), t1._eval$1("ListIterable.E"));
        if (newFrames.length > 1 && _box_0.predicate.call$1(B.JSArray_methods.get$first(newFrames)))
          B.JSArray_methods.removeAt$1(newFrames, 0);
      }
      return A.Trace$(new A.ReversedListIterable(newFrames, A._arrayInstanceType(newFrames)._eval$1("ReversedListIterable<1>")), this.original._stackTrace);
    },
    toString$0(_) {
      var t1 = this.frames,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.Trace_toString_closure(new A.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.Trace_toString_closure0()), t2._eval$1("MappedListIterable<1,int>")).fold$1$2(0, 0, B.CONSTANT, type$.int))), t2._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $isStackTrace: 1,
    get$frames() {
      return this.frames;
    }
  };
  A.Trace__parseVM_closure.prototype = {
    call$1(line) {
      return A._asString(line).length !== 0;
    },
    $signature: 2
  };
  A.Trace$parseV8_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(A._asString(line), $.$get$_v8TraceLine());
    },
    $signature: 2
  };
  A.Trace$parseJSCore_closure.prototype = {
    call$1(line) {
      return A._asString(line) !== "\tat ";
    },
    $signature: 2
  };
  A.Trace$parseFirefox_closure.prototype = {
    call$1(line) {
      A._asString(line);
      return line.length !== 0 && line !== "[native code]";
    },
    $signature: 2
  };
  A.Trace$parseFriendly_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(A._asString(line), "=====");
    },
    $signature: 2
  };
  A.Trace_foldFrames_closure.prototype = {
    call$1(frame) {
      var t1;
      if (this.oldPredicate.call$1(frame))
        return true;
      if (frame.get$isCore())
        return true;
      if (frame.get$$package() === "stack_trace")
        return true;
      t1 = frame.get$member();
      t1.toString;
      if (!B.JSString_methods.contains$1(t1, "<async>"))
        return false;
      return frame.get$line(frame) == null;
    },
    $signature: 19
  };
  A.Trace_foldFrames_closure0.prototype = {
    call$1(frame) {
      var t1, t2;
      type$.Frame._as(frame);
      if (frame instanceof A.UnparsedFrame || !this._box_0.predicate.call$1(frame))
        return frame;
      t1 = frame.get$library();
      t2 = $.$get$_terseRegExp();
      return new A.Frame(A.Uri_parse(A.stringReplaceAllUnchecked(t1, t2, "")), null, null, frame.get$member());
    },
    $signature: 147
  };
  A.Trace_toString_closure0.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      return frame.get$location(frame).length;
    },
    $signature: 50
  };
  A.Trace_toString_closure.prototype = {
    call$1(frame) {
      type$.Frame._as(frame);
      if (frame instanceof A.UnparsedFrame)
        return frame.toString$0(0) + "\n";
      return B.JSString_methods.padRight$1(frame.get$location(frame), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 28
  };
  A.UnparsedFrame.prototype = {
    toString$0(_) {
      return this.member;
    },
    $isFrame: 1,
    get$uri() {
      return this.uri;
    },
    get$line() {
      return null;
    },
    get$column() {
      return null;
    },
    get$isCore() {
      return false;
    },
    get$library() {
      return "unparsed";
    },
    get$$package() {
      return null;
    },
    get$location() {
      return "unparsed";
    },
    get$member() {
      return this.member;
    }
  };
  A._StreamChannel.prototype = {};
  A.StreamChannelMixin.prototype = {$isStreamChannel: 1};
  A.StringScannerException.prototype = {
    get$source(_) {
      return A._asString(this.source);
    }
  };
  A.StringScanner.prototype = {
    get$lastMatch() {
      var _this = this;
      if (_this._string_scanner$_position !== _this._lastMatchPosition)
        _this._lastMatch = null;
      return _this._lastMatch;
    },
    scan$1(pattern) {
      var success, _this = this,
        t1 = _this._lastMatch = J.matchAsPrefix$2$s(pattern, _this.string, _this._string_scanner$_position);
      _this._lastMatchPosition = _this._string_scanner$_position;
      success = t1 != null;
      if (success)
        _this._lastMatchPosition = _this._string_scanner$_position = t1.get$end(t1);
      return success;
    },
    expect$2$name(pattern, $name) {
      var t1;
      if (this.scan$1(pattern))
        return;
      if ($name == null)
        if (pattern instanceof A.JSSyntaxRegExp)
          $name = "/" + pattern.pattern + "/";
        else {
          t1 = J.toString$0$(pattern);
          t1 = A.stringReplaceAllUnchecked(t1, "\\", "\\\\");
          $name = '"' + A.stringReplaceAllUnchecked(t1, '"', '\\"') + '"';
        }
      this._fail$1($name);
    },
    expect$1(pattern) {
      return this.expect$2$name(pattern, null);
    },
    expectDone$0() {
      if (this._string_scanner$_position === this.string.length)
        return;
      this._fail$1("no more input");
    },
    error$3$length$position(_, message, $length, position) {
      var t4, match, t5, sourceFile, end, _this = this,
        t1 = _this.string,
        t2 = position == null,
        t3 = !t2;
      if (t3)
        if (position < 0)
          A.throwExpression(A.RangeError$("position must be greater than or equal to 0."));
        else if (position > t1.length)
          A.throwExpression(A.RangeError$("position must be less than or equal to the string length."));
      t4 = $length == null;
      if (t3 && !t4 && position + $length > t1.length)
        A.throwExpression(A.RangeError$("position plus length must not go beyond the end of the string."));
      match = t2 && t4 ? _this.get$lastMatch() : null;
      if (t2)
        position = match == null ? _this._string_scanner$_position : match.get$start(match);
      if (t4)
        $length = match == null ? 0 : match.get$end(match) - match.get$start(match);
      t2 = _this.sourceUrl;
      t3 = new A.CodeUnits(t1);
      t4 = A._setArrayType([0], type$.JSArray_int);
      t5 = new Uint32Array(A._ensureNativeList(t3.toList$0(t3)));
      sourceFile = new A.SourceFile(t2, t4, t5);
      sourceFile.SourceFile$decoded$2$url(t3, t2);
      end = position + $length;
      if (end < position)
        A.throwExpression(A.ArgumentError$("End " + end + " must come after start " + position + ".", null));
      else if (end > t5.length)
        A.throwExpression(A.RangeError$("End " + end + string$.x20must_ + sourceFile.get$length(0) + "."));
      else if (position < 0)
        A.throwExpression(A.RangeError$("Start may not be negative, was " + position + "."));
      throw A.wrapException(new A.StringScannerException(t1, message, new A._FileSpan(sourceFile, position, end)));
    },
    _fail$1($name) {
      this.error$3$length$position(0, "expected " + $name + ".", 0, this._string_scanner$_position);
    }
  };
  A.TypedDataBuffer.prototype = {
    get$length(_) {
      return this._typed_buffer$_length;
    },
    $index(_, index) {
      var t1;
      if (index >= this._typed_buffer$_length)
        throw A.wrapException(A.IndexError$(index, this));
      t1 = this._typed_buffer$_buffer;
      if (!(index >= 0 && index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    $indexSet(_, index, value) {
      var _this = this;
      A._instanceType(_this)._eval$1("TypedDataBuffer.E")._as(value);
      if (index >= _this._typed_buffer$_length)
        throw A.wrapException(A.IndexError$(index, _this));
      B.NativeUint8List_methods.$indexSet(_this._typed_buffer$_buffer, index, value);
    },
    set$length(_, newLength) {
      var t2, t3, i, newBuffer, _this = this,
        t1 = _this._typed_buffer$_length;
      if (newLength < t1)
        for (t2 = _this._typed_buffer$_buffer, t3 = t2.$flags | 0, i = newLength; i < t1; ++i) {
          t3 & 2 && A.throwUnsupportedOperation(t2);
          if (!(i >= 0 && i < t2.length))
            return A.ioore(t2, i);
          t2[i] = 0;
        }
      else {
        t1 = _this._typed_buffer$_buffer.length;
        if (newLength > t1) {
          if (t1 === 0)
            newBuffer = new Uint8Array(newLength);
          else
            newBuffer = _this._createBiggerBuffer$1(newLength);
          B.NativeUint8List_methods.setRange$3(newBuffer, 0, _this._typed_buffer$_length, _this._typed_buffer$_buffer);
          _this._typed_buffer$_buffer = newBuffer;
        }
      }
      _this._typed_buffer$_length = newLength;
    },
    _typed_buffer$_add$1(_, value) {
      var t1, _this = this;
      A._instanceType(_this)._eval$1("TypedDataBuffer.E")._as(value);
      t1 = _this._typed_buffer$_length;
      if (t1 === _this._typed_buffer$_buffer.length)
        _this._grow$1(t1);
      B.NativeUint8List_methods.$indexSet(_this._typed_buffer$_buffer, _this._typed_buffer$_length++, value);
    },
    add$1(_, element) {
      var t1, _this = this;
      A._instanceType(_this)._eval$1("TypedDataBuffer.E")._as(element);
      t1 = _this._typed_buffer$_length;
      if (t1 === _this._typed_buffer$_buffer.length)
        _this._grow$1(t1);
      B.NativeUint8List_methods.$indexSet(_this._typed_buffer$_buffer, _this._typed_buffer$_length++, element);
    },
    _typed_buffer$_addAll$3(values, start, end) {
      var t2, i, value, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("Iterable<TypedDataBuffer.E>")._as(values);
      if (type$.List_dynamic._is(values))
        end = end == null ? J.get$length$asx(values) : end;
      if (end != null) {
        _this._insertKnownLength$4(_this._typed_buffer$_length, values, start, end);
        return;
      }
      for (t2 = J.get$iterator$ax(values), t1 = t1._eval$1("TypedDataBuffer.E"), i = 0; t2.moveNext$0();) {
        value = t2.get$current(t2);
        if (i >= start)
          _this._typed_buffer$_add$1(0, t1._as(value));
        ++i;
      }
      if (i < start)
        throw A.wrapException(A.StateError$("Too few elements"));
    },
    _insertKnownLength$4(index, values, start, end) {
      var t1, valuesLength, newLength, t2, _this = this;
      A._instanceType(_this)._eval$1("Iterable<TypedDataBuffer.E>")._as(values);
      if (type$.List_dynamic._is(values)) {
        t1 = J.getInterceptor$asx(values);
        if (start > t1.get$length(values) || end > t1.get$length(values))
          throw A.wrapException(A.StateError$("Too few elements"));
      }
      valuesLength = end - start;
      newLength = _this._typed_buffer$_length + valuesLength;
      _this._ensureCapacity$1(newLength);
      t1 = _this._typed_buffer$_buffer;
      t2 = index + valuesLength;
      B.NativeUint8List_methods.setRange$4(t1, t2, _this._typed_buffer$_length + valuesLength, t1, index);
      B.NativeUint8List_methods.setRange$4(_this._typed_buffer$_buffer, index, t2, values, start);
      _this._typed_buffer$_length = newLength;
    },
    _ensureCapacity$1(requiredCapacity) {
      var newBuffer, _this = this;
      if (requiredCapacity <= _this._typed_buffer$_buffer.length)
        return;
      newBuffer = _this._createBiggerBuffer$1(requiredCapacity);
      B.NativeUint8List_methods.setRange$3(newBuffer, 0, _this._typed_buffer$_length, _this._typed_buffer$_buffer);
      _this._typed_buffer$_buffer = newBuffer;
    },
    _createBiggerBuffer$1(requiredCapacity) {
      var newLength = this._typed_buffer$_buffer.length * 2;
      if (requiredCapacity != null && newLength < requiredCapacity)
        newLength = requiredCapacity;
      else if (newLength < 8)
        newLength = 8;
      return new Uint8Array(newLength);
    },
    _grow$1($length) {
      var t1 = this._createBiggerBuffer$1(null);
      B.NativeUint8List_methods.setRange$3(t1, 0, $length, this._typed_buffer$_buffer);
      this._typed_buffer$_buffer = t1;
    },
    setRange$4(_, start, end, iterable, skipCount) {
      var t1;
      A._instanceType(this)._eval$1("Iterable<TypedDataBuffer.E>")._as(iterable);
      t1 = this._typed_buffer$_length;
      if (end > t1)
        throw A.wrapException(A.RangeError$range(end, 0, t1, null, null));
      t1 = this._typed_buffer$_buffer;
      if (iterable instanceof A.Uint8Buffer)
        B.NativeUint8List_methods.setRange$4(t1, start, end, iterable._typed_buffer$_buffer, skipCount);
      else
        B.NativeUint8List_methods.setRange$4(t1, start, end, iterable, skipCount);
    },
    setRange$3(_, start, end, iterable) {
      return this.setRange$4(0, start, end, iterable, 0);
    }
  };
  A._IntBuffer.prototype = {};
  A.Uint8Buffer.prototype = {};
  (function aliases() {
    var _ = A._StreamSinkImpl.prototype;
    _.super$_StreamSinkImpl$add = _.add$1;
    _.super$_StreamSinkImpl$addStream = _.addStream$1;
    _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A.JsLinkedHashMap.prototype;
    _.super$JsLinkedHashMap$internalContainsKey = _.internalContainsKey$1;
    _.super$JsLinkedHashMap$internalGet = _.internalGet$1;
    _.super$JsLinkedHashMap$internalSet = _.internalSet$2;
    _.super$JsLinkedHashMap$internalRemove = _.internalRemove$1;
    _ = A._BufferingStreamSubscription.prototype;
    _.super$_BufferingStreamSubscription$_add = _._add$1;
    _.super$_BufferingStreamSubscription$_addError = _._addError$2;
    _.super$_BufferingStreamSubscription$_close = _._close$0;
    _ = A._HashMap.prototype;
    _.super$_HashMap$_containsKey = _._containsKey$1;
    _.super$_HashMap$_get = _._get$1;
    _.super$_HashMap$_set = _._set$2;
    _.super$_HashMap$_remove = _._remove$1;
    _ = A.ListBase.prototype;
    _.super$ListBase$setRange = _.setRange$4;
    _ = A.MapView.prototype;
    _.super$MapView$addAll = _.addAll$1;
    _ = A.Converter.prototype;
    _.super$Converter$bind = _.bind$1;
    _ = A._StringSinkConversionSink.prototype;
    _.super$_StringSinkConversionSink$close = _.close$0;
    _ = A.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _.super$Iterable$skipWhile = _.skipWhile$1;
    _ = A.BaseRequest.prototype;
    _.super$BaseRequest$finalize = _.finalize$0;
    _ = A.BuildOwner.prototype;
    _.super$BuildOwner$performInitialBuild = _.performInitialBuild$1;
    _ = A.BuildableElement.prototype;
    _.super$BuildableElement$didMount = _.didMount$0;
    _.super$BuildableElement$performRebuild = _.performRebuild$0;
    _ = A.ComponentsBinding.prototype;
    _.super$ComponentsBinding$attachRootComponent = _.attachRootComponent$1;
    _ = A.Element.prototype;
    _.super$Element$mount = _.mount$2;
    _.super$Element$didMount = _.didMount$0;
    _.super$Element$update = _.update$1;
    _.super$Element$didUpdate = _.didUpdate$1;
    _.super$Element$forgetChild = _.forgetChild$1;
    _.super$Element$activate = _.activate$0;
    _.super$Element$deactivate = _.deactivate$0;
    _.super$Element$unmount = _.unmount$0;
    _.super$Element$_updateInheritance = _._updateInheritance$0;
    _.super$Element$didChangeDependencies = _.didChangeDependencies$0;
    _.super$Element$_didUpdateSlot = _._didUpdateSlot$0;
    _ = A.ProxyElement.prototype;
    _.super$ProxyElement$didMount = _.didMount$0;
    _ = A.LeafElement.prototype;
    _.super$LeafElement$didMount = _.didMount$0;
    _ = A.State.prototype;
    _.super$State$initState = _.initState$0;
    _ = A.SourceSpanMixin.prototype;
    _.super$SourceSpanMixin$compareTo = _.compareTo$1;
    _.super$SourceSpanMixin$$eq = _.$eq;
  })();
  (function installTearOffs() {
    var _instance_1_u = hunkHelpers._instance_1u,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance_0_u = hunkHelpers._instance_0u,
      _static_2 = hunkHelpers._static_2,
      _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _static = hunkHelpers.installStaticTearOff;
    var _;
    _instance_1_u(_ = A._StreamSinkImpl.prototype, "get$_completeDoneValue", "_completeDoneValue$1", 8);
    _instance_2_u(_, "get$_completeDoneError", "_completeDoneError$2", 7);
    _instance(A._HttpServer.prototype, "get$close", 1, 0, null, ["call$1$force", "call$0"], ["close$1$force", "close$0"], 137, 0, 0);
    _instance_1_i(A._DetachedSocket.prototype, "get$add", "add$1", 4);
    _instance_0_i(_ = A._HttpDetachedStreamSubscription.prototype, "get$cancel", "cancel$0", 6);
    _instance(_, "get$pause", 1, 0, null, ["call$1", "call$0"], ["pause$1", "pause$0"], 31, 0, 0);
    _instance_0_i(_, "get$resume", "resume$0", 0);
    _instance_1_u(_ = A._HttpParser.prototype, "get$__http$_onData", "__http$_onData$1", 117);
    _instance_0_u(_, "get$__http$_onDone", "__http$_onDone$0", 0);
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 29);
    _instance_0_i(_ = A.CastStreamSubscription.prototype, "get$cancel", "cancel$0", 6);
    _instance_1_u(_, "get$_onData", "_onData$1", 4);
    _instance(_, "get$pause", 1, 0, null, ["call$1", "call$0"], ["pause$1", "pause$0"], 31, 0, 0);
    _instance_0_i(_, "get$resume", "resume$0", 0);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 27);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 27);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 27);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(A, "async___nullDataHandler$closure", "_nullDataHandler", 8);
    _static_2(A, "async___nullErrorHandler$closure", "_nullErrorHandler", 7);
    _static_0(A, "async___nullDoneHandler$closure", "_nullDoneHandler", 0);
    _static(A, "async___rootHandleUncaughtError$closure", 5, null, ["call$5"], ["_rootHandleUncaughtError"], 150, 0);
    _static(A, "async___rootRun$closure", 4, null, ["call$1$4", "call$4"], ["_rootRun", function($self, $parent, zone, f) {
      f.toString;
      return A._rootRun($self, $parent, zone, f, type$.dynamic);
    }], 151, 0);
    _static(A, "async___rootRunUnary$closure", 5, null, ["call$2$5", "call$5"], ["_rootRunUnary", function($self, $parent, zone, f, arg) {
      var t1 = type$.dynamic;
      f.toString;
      return A._rootRunUnary($self, $parent, zone, f, arg, t1, t1);
    }], 152, 0);
    _static(A, "async___rootRunBinary$closure", 6, null, ["call$3$6"], ["_rootRunBinary"], 153, 0);
    _static(A, "async___rootRegisterCallback$closure", 4, null, ["call$1$4", "call$4"], ["_rootRegisterCallback", function($self, $parent, zone, f) {
      f.toString;
      return A._rootRegisterCallback($self, $parent, zone, f, type$.dynamic);
    }], 154, 0);
    _static(A, "async___rootRegisterUnaryCallback$closure", 4, null, ["call$2$4", "call$4"], ["_rootRegisterUnaryCallback", function($self, $parent, zone, f) {
      var t1 = type$.dynamic;
      f.toString;
      return A._rootRegisterUnaryCallback($self, $parent, zone, f, t1, t1);
    }], 155, 0);
    _static(A, "async___rootRegisterBinaryCallback$closure", 4, null, ["call$3$4", "call$4"], ["_rootRegisterBinaryCallback", function($self, $parent, zone, f) {
      var t1 = type$.dynamic;
      f.toString;
      return A._rootRegisterBinaryCallback($self, $parent, zone, f, t1, t1, t1);
    }], 156, 0);
    _static(A, "async___rootErrorCallback$closure", 5, null, ["call$5"], ["_rootErrorCallback"], 157, 0);
    _static(A, "async___rootScheduleMicrotask$closure", 4, null, ["call$4"], ["_rootScheduleMicrotask"], 158, 0);
    _static(A, "async___rootCreateTimer$closure", 5, null, ["call$5"], ["_rootCreateTimer"], 159, 0);
    _static(A, "async___rootCreatePeriodicTimer$closure", 5, null, ["call$5"], ["_rootCreatePeriodicTimer"], 160, 0);
    _static(A, "async___rootPrint$closure", 4, null, ["call$4"], ["_rootPrint"], 161, 0);
    _static_1(A, "async___printToZone$closure", "_printToZone", 33);
    _static(A, "async___rootFork$closure", 5, null, ["call$5"], ["_rootFork"], 162, 0);
    _instance(A._Completer.prototype, "get$completeError", 0, 1, null, ["call$2", "call$1"], ["completeError$2", "completeError$1"], 20, 0, 0);
    _instance(A._SyncCompleter.prototype, "get$complete", 1, 0, null, ["call$1", "call$0"], ["complete$1", "complete$0"], 57, 0, 0);
    _instance_2_u(A._Future.prototype, "get$_completeError", "_completeError$2", 7);
    _instance_1_i(_ = A._StreamController.prototype, "get$add", "add$1", 4);
    _instance(_, "get$addError", 0, 1, null, ["call$2", "call$1"], ["addError$2", "addError$1"], 20, 0, 0);
    _instance_0_i(_, "get$close", "close$0", 6);
    _instance_1_i(_, "get$_add", "_add$1", 4);
    _instance_2_u(_, "get$_addError", "_addError$2", 7);
    _instance_0_u(_, "get$_close", "_close$0", 0);
    _instance_0_u(_ = A._ControllerSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_1_i(_ = A._StreamSinkWrapper.prototype, "get$add", "add$1", 4);
    _instance(_, "get$addError", 0, 1, null, ["call$2", "call$1"], ["addError$2", "addError$1"], 20, 0, 0);
    _instance_0_i(_, "get$close", "close$0", 6);
    _instance(_ = A._BufferingStreamSubscription.prototype, "get$pause", 1, 0, null, ["call$1", "call$0"], ["pause$1", "pause$0"], 34, 0, 0);
    _instance_0_i(_, "get$resume", "resume$0", 0);
    _instance_0_i(_, "get$cancel", "cancel$0", 6);
    _instance_0_u(_, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance(_ = A._DoneStreamSubscription.prototype, "get$pause", 1, 0, null, ["call$1", "call$0"], ["pause$1", "pause$0"], 34, 0, 0);
    _instance_0_i(_, "get$resume", "resume$0", 0);
    _instance_0_i(_, "get$cancel", "cancel$0", 6);
    _instance_0_u(_, "get$_onMicrotask", "_onMicrotask$0", 0);
    _instance_0_u(_ = A._ForwardingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_1_u(_, "get$_async$_handleData", "_async$_handleData$1", 4);
    _instance_2_u(_, "get$_async$_handleError", "_async$_handleError$2", 35);
    _instance_0_u(_, "get$_handleDone", "_handleDone$0", 0);
    _instance_0_u(_ = A._SinkTransformerStreamSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_1_u(_, "get$_async$_handleData", "_async$_handleData$1", 4);
    _instance_2_u(_, "get$_async$_handleError", "_async$_handleError$2", 7);
    _instance_0_u(_, "get$_handleDone", "_handleDone$0", 0);
    _static_2(A, "collection___defaultEquals$closure", "_defaultEquals", 24);
    _static_1(A, "collection___defaultHashCode$closure", "_defaultHashCode", 16);
    _static_2(A, "collection_ListBase__compareAny$closure", "ListBase__compareAny", 29);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 32);
    _instance_0_i(A._JsonDecoderSink.prototype, "get$close", "close$0", 0);
    _instance_1_i(_ = A._ByteCallbackSink.prototype, "get$add", "add$1", 4);
    _instance_0_i(_, "get$close", "close$0", 0);
    _instance(A._JsonUtf8EncoderSink.prototype, "get$_convert$_addChunk", 0, 3, null, ["call$3"], ["_convert$_addChunk$3"], 61, 0, 0);
    _instance_1_i(A.StringConversionSink.prototype, "get$add", "add$1", 4);
    _static_1(A, "core__identityHashCode$closure", "identityHashCode", 16);
    _static_2(A, "core__identical$closure", "identical", 24);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 23);
    _static_0(A, "core__Uri__createList$closure", "_Uri__createList", 163);
    _static_2(A, "core___toUnmodifiableStringList$closure", "_toUnmodifiableStringList", 164);
    _instance_1_i(A._FilterSink.prototype, "get$add", "add$1", 4);
    _instance_0_i(A._File.prototype, "get$length", "length$0", 70);
    _instance_2_u(_ = A.DeepCollectionEquality.prototype, "get$equals", "equals$2", 24);
    _instance_1_i(_, "get$hash", "hash$1", 16);
    _instance_1_u(_, "get$isValidKey", "isValidKey$1", 21);
    _static_1(A, "jaspr_options___prefix0AppButton$closure", "_prefix0AppButton", 165);
    _static_1(A, "jaspr_options___prefix1ContactCard$closure", "_prefix1ContactCard", 166);
    _static_1(A, "jaspr_options___prefix4ProjectCard$closure", "_prefix4ProjectCard", 167);
    _static_1(A, "jaspr_options___prefix5ServiceCard$closure", "_prefix5ServiceCard", 168);
    _static_1(A, "jaspr_options___prefix7AboutMeSection$closure", "_prefix7AboutMeSection", 169);
    _static_1(A, "case_insensitive_map_CaseInsensitiveMap__canonicalizer$closure", "CaseInsensitiveMap__canonicalizer", 23);
    _static_2(A, "framework_Element__sort$closure", "Element__sort", 170);
    _static_1(A, "framework_Element__activateRecursively$closure", "Element__activateRecursively", 10);
    _static_1(A, "framework__InactiveElements__deactivateRecursively$closure", "_InactiveElements__deactivateRecursively", 10);
    _instance_0_u(A.BuildOwner.prototype, "get$performBuild", "performBuild$0", 0);
    _instance_0_u(A._InactiveElements.prototype, "get$_unmountAll", "_unmountAll$0", 0);
    _static_1(A, "frame_Frame___parseVM_tearOff$closure", "Frame___parseVM_tearOff", 14);
    _static_1(A, "frame_Frame___parseV8_tearOff$closure", "Frame___parseV8_tearOff", 14);
    _static_1(A, "frame_Frame___parseFirefox_tearOff$closure", "Frame___parseFirefox_tearOff", 14);
    _static_1(A, "frame_Frame___parseFriendly_tearOff$closure", "Frame___parseFriendly_tearOff", 14);
    _static_1(A, "trace_Trace___parseVM_tearOff$closure", "Trace___parseVM_tearOff", 47);
    _static_1(A, "trace_Trace___parseFriendly_tearOff$closure", "Trace___parseFriendly_tearOff", 47);
    _static(A, "math__max$closure", 2, null, ["call$1$2", "call$2"], ["max", function(a, b) {
      a.toString;
      b.toString;
      return A.max(a, b, type$.num);
    }], 115, 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(null, [A.Object, A.HandshakeException]);
    _inheritMany(A.Object, [A.JS_CONST, A.HttpException, A._HttpHeaders, A.Closure, A._HeaderValue, A._Cookie, A._ServiceObject, A._CopyingBytesBuilder, A.Stream, A._StreamSinkImpl, A._HttpOutgoing, A.LinkedListEntry, A._HttpDetachedStreamSubscription, A._HttpSessionManager, J.Interceptor, J.ArrayIterator, A.CastStreamSubscription, A._BytesBuilder, A.Iterable, A.CastIterator, A.Error, A.ListBase, A.SentinelValue, A.ListIterator, A.MappedIterator, A.WhereIterator, A.ExpandIterator, A.TakeIterator, A.SkipIterator, A.SkipWhileIterator, A.EmptyIterator, A.WhereTypeIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A.Symbol, A._Record, A.MapView, A.ConstantMap, A._KeysOrValuesOrElementsIterator, A.SetBase, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A.MapBase, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.LinkedHashMapValueIterator, A.LinkedHashMapEntryIterator, A.JSSyntaxRegExp, A._MatchImplementation, A._AllMatchesIterator, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A._UnmodifiableNativeByteBufferView, A.Rti, A._FunctionParameters, A._Type, A._TimerImpl, A._AsyncAwaitCompleter, A._AsyncStarStreamController, A._IterationMarker, A._SyncStarIterator, A.AsyncError, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A._StreamController, A._SyncStreamControllerDispatch, A._AsyncStreamControllerDispatch, A._BufferingStreamSubscription, A._StreamSinkWrapper, A._AddStreamState, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._DoneStreamSubscription, A._StreamIterator, A._EventSinkWrapper, A._ZoneFunction, A._ZoneSpecification, A._ZoneDelegate, A._Zone, A._HashMapKeyIterator, A._HashSetIterator, A._LinkedHashSetCell, A._LinkedHashSetIterator, A._LinkedListIterator, A._UnmodifiableMapMixin, A.StringConversionSink, A.Codec, A.Converter, A.ByteConversionSink, A._Base64Encoder, A.ChunkedConversionSink, A._ConverterStreamEventSink, A.HtmlEscapeMode, A._JsonStringifier, A._JsonPrettyPrintMixin, A._ClosableStringSink, A._StringConversionSinkAsStringSinkAdapter, A._Utf8Encoder, A._Utf8Decoder, A.DateTime, A.Duration, A._Enum, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.MapEntry, A.Null, A._StringStackTrace, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.Expando, A.CssStyleDeclarationBase, A._Html5NodeValidator, A.ImmutableListMixin, A.NodeValidatorBuilder, A.FixedSizeListIterator, A._ValidatingTreeSanitizer, A.OSError, A._BufferAndStart, A.FileSystemEntity, A.FileSystemException, A.SocketOption, A.NullRejectionException, A.CanonicalizedMap, A.DefaultEquality, A.IterableEquality, A.ListEquality, A._UnorderedEquality, A._MapEntry, A.MapEquality, A.DeepCollectionEquality, A.Component, A.State, A._About_Object__$About, A._$About, A._$AboutImpl, A._Basic_Object__$Basic, A._$Basic, A._$BasicImpl, A._Contact_Object__$Contact, A._$Contact, A._$ContactImpl, A._Data_Object__$Data, A._$Data, A._$DataImpl, A._Project_Object__$Project, A._$Project, A._$ProjectImpl, A._ServiceData_Object__$ServiceData, A._$ServiceData, A._$ServiceDataImpl, A._Social_Object__$Social, A._$Social, A._$SocialImpl, A._Work_Object__$Work, A._$Work, A._$WorkImpl, A.BaseClient, A.BaseRequest, A.BaseResponse, A.ClientException, A.MediaType, A.RenderAdapter, A.Element, A.AllowAll, A._AppBinding_Object_SchedulerBinding, A.JasprOptions, A.ClientTarget, A.SchedulerBinding, A.CssUtility, A._NestedStyleRule_Object_StylesMixin, A.ImageStyle, A.BackgroundSize, A._AllBorder, A.BorderSide, A._CircularBorderRadius, A._BoxShadow, A.Cursor0, A._HexColor, A._NamedColor, A.EdgeInsets, A._QuadEdgeInsets, A._AllEdgeInsets, A._SymmetricEdgeInsets, A._Position, A.FontFamily, A._ListFontFamily, A.TextDecoration, A._Transition, A._ZeroUnit, A._Unit, A.BlockStyleRule, A.MediaStyleRule, A._MediaRuleQuery, A.ImportStyleRule, A.FontFaceStyleRule, A.Selector, A._Styles_Object_StylesMixin, A.StylesMixin, A.BuildOwner, A.ComponentsBinding, A._InactiveElements, A.Key, A.RenderObject, A.RenderObjectElement, A.DocumentStructureMixin, A.TaskChain, A.ChildNode, A._ChildList_Object_Iterable, A.ChildListIterator, A.DomValidator, A.ServerApp, A.Context, A.Style0, A.ParsedPath, A.PathException, A.Body, A.Cascade, A.HijackException, A.Message, A._OnHijack, A._BytesBuffer, A.SourceFile, A.SourceLocationMixin, A.SourceSpanMixin, A.Highlighter, A._Highlight, A._Line, A.SourceLocation, A.SourceSpanException, A.Chain, A.Frame, A.LazyChain, A.Trace, A.UnparsedFrame, A.StreamChannelMixin, A.StringScanner]);
    _inheritMany(A.Closure, [A.Closure2Args, A._HttpHeaders__parseCookies_parseCookieString, A.Closure0Args, A._HttpHeaders__parseCookies_parseCookieString_expect, A._ContentType_emptyIfNull, A._HttpIncoming_listen_closure, A._HttpIncoming_listen_closure0, A._HttpRequest_closure, A._HttpRequest_closure0, A._StreamSinkImpl_addStream_closure, A._StreamSinkImpl__controller_closure, A._HttpResponse_detachSocket_closure, A._HttpResponse__writeHeader_closure, A._HttpOutgoing_writeHeaders_closure, A._HttpOutgoing_writeHeaders_closure0, A._HttpOutgoing_addStream_closure, A._HttpOutgoing_addStream_closure0, A._HttpOutgoing_addStream_onData, A._HttpOutgoing_addStream_closure1, A._HttpOutgoing_close_finalize_closure, A._HttpConnection_closure, A._HttpConnection__closure, A._HttpConnection__closure0, A._HttpConnection__closure1, A._HttpConnection_closure1, A._HttpConnection_detachSocket_closure, A._HttpServer_bind_closure, A._HttpServer_idleTimeout_closure, A._HttpServer_listen_closure, A.Instantiation, A.TearOffClosure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A._asyncStarHelper_closure0, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_Stream$fromIterable_closure, A.Stream_fold_closure0, A.Stream_fold__closure0, A.Stream_forEach_closure0, A.Stream_forEach__closure0, A.Stream_length_closure, A.Stream_toList_closure, A._CustomZone_bindUnaryCallback_closure, A._CustomZone_bindUnaryCallbackGuarded_closure, A._RootZone_bindUnaryCallback_closure, A._RootZone_bindUnaryCallbackGuarded_closure, A.runZonedGuarded_closure, A._CustomHashMap_closure, A._LinkedCustomHashMap_closure, A.MapBase_entries_closure, A.Converter_bind_closure, A.Encoding_decodeStream_closure0, A._Uri__makePath_closure, A._Uri__splitQueryStringAll_parsePair, A.NodeValidatorBuilder_allowsElement_closure, A.NodeValidatorBuilder_allowsAttribute_closure, A._File_length_closure, A.jsify__convert, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.CanonicalizedMap_addEntries_closure, A.CanonicalizedMap_entries_closure, A.CanonicalizedMap_keys_closure, A._$$AboutImplFromJson_closure, A._$$AboutImplFromJson_closure0, A._$$AboutImplToJson_closure, A._$$BasicImplFromJson_closure, A._$$DataImplFromJson_closure, A._$$DataImplFromJson_closure0, A._$$DataImplFromJson_closure1, A._$$DataImplFromJson_closure2, A._$$DataImplToJson_closure, A._$$DataImplToJson_closure0, A._$$DataImplToJson_closure1, A._$$DataImplToJson_closure2, A.BaseRequest_closure0, A.BrowserClient_send_closure, A._readBody_closure, A._readBody_closure0, A.ByteStream_toBytes_closure, A.MediaType_toString__closure, A.expectQuotedString_closure, A.AttachAdapter_apply_keyFor, A._ListFontFamily_value_closure, A.BlockStyleRule_toCss_closure, A.MediaStyleRule_toCss_closure, A.Element_updateChildren_replaceWithNullIfForgotten, A.Element__updateDepth_closure, A.Element_detachRenderObject_closure, A.Element__updateAncestorSiblingRecursively_closure, A._InactiveElements__unmount_closure, A.ClientComponentRegistryElement_willRebuildElement_closure, A.DocumentStructureMixin_createDocumentStructure_closure, A.DocumentStructureMixin_createDocumentStructure_closure0, A.DocumentStructureMixin_createDocumentStructure_closure1, A.DocumentAdapter_apply_closure, A.DocumentAdapter_apply_closure0, A.HeadScopeAdapter_apply_closure, A.HeadScopeAdapter_apply_closure0, A.TaskChain_then__closure, A.ChildList_find_closure, A.ChildList_wrapElement_closure, A.ChildList_wrapElement_closure0, A.ChildList_compareElements_closure, A.ChildList_compareElements_closure0, A.MarkupRenderObject_renderToHtml_closure, A.render_closure, A._createSetup_closure, A.staticFileHandler_closure, A.createHandler_closure, A.createHandler__closure, A._proxyFileLoader_closure, A._sseProxyHandler_createSseConnection, A._sseProxyHandler_createSseConnection_closure, A._sseProxyHandler_createSseConnection__closure0, A._sseProxyHandler_closure, A.Context_joinAll_closure, A.Context_split_closure, A._validateArgList_closure, A.WindowsStyle_absolutePathToUri_closure, A.serveRequests__closure, A._fromHttpRequest_onHijack, A._fromHttpRequest_onHijack_closure, A._writeResponse_closure0, A._logTopLevelError_closure, A.Body__isPlainAscii_closure, A.Cascade_handler_closure, A.Cascade_handler__closure0, A._computeShouldCascade_closure, A.Headers$__closure, A.Headers$__closure0, A._expandToHeadersAll_closure, A.expandToHeadersAll_closure, A.createGzipMiddleware_closure, A.createGzipMiddleware__closure, A.createGzipMiddleware___closure0, A.isAlreadyCompressedContentType_closure, A.proxyHandler_closure, A.Highlighter$__closure, A.Highlighter$___closure, A.Highlighter$__closure0, A.Highlighter__collateLines_closure, A.Highlighter__collateLines_closure1, A.Highlighter__collateLines__closure, A.Highlighter_highlight_closure, A.Chain_Chain$parse_closure, A.Chain_terse_closure, A.Chain_foldFrames_closure, A.Chain_foldFrames_closure0, A.Chain_toTrace_closure, A.Chain_toString_closure0, A.Chain_toString__closure0, A.Chain_toString_closure, A.Chain_toString__closure, A.Trace__parseVM_closure, A.Trace$parseV8_closure, A.Trace$parseJSCore_closure, A.Trace$parseFirefox_closure, A.Trace$parseFriendly_closure, A.Trace_foldFrames_closure, A.Trace_foldFrames_closure0, A.Trace_toString_closure0, A.Trace_toString_closure]);
    _inheritMany(A.Closure2Args, [A._HttpHeaders_closure, A._HttpHeaders_forEach_closure, A._HttpHeaders__build_closure, A._HttpHeaders_toString_closure, A._HeaderValue_toString_closure, A._ContentType_closure, A._StreamSinkImpl__controller_closure0, A._HttpOutgoing_addStream_closure2, A._HttpOutgoing_close_finalize_closure0, A._HttpServer_listen_closure0, A._CastListBase_sort_closure, A.ConstantMap_map_closure, A.JsLinkedHashMap_addAll_closure, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure0, A.Stream_handleError_closure, A._AddStreamState_makeErrorHandler_closure, A._BufferingStreamSubscription_asFuture_closure0, A._cancelAndErrorClosure_closure, A._HashMap_addAll_closure, A.HashMap_HashMap$from_closure, A.LinkedHashMap_LinkedHashMap$from_closure, A.MapBase_addAll_closure, A.MapBase_mapToString_closure, A._JsonMap_addAll_closure, A.Encoding_decodeStream_closure, A._JsonStringifier_writeMap_closure, A._JsonPrettyPrintMixin_writeMap_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A.MidiInputMap_keys_closure, A.MidiOutputMap_keys_closure, A.RtcStatsReport_keys_closure, A.Storage_addAll_closure, A.Storage_keys_closure, A._AttributeMap_addAll_closure, A._ValidatingTreeSanitizer_sanitizeTree_walk, A.AudioParamMap_keys_closure, A.CanonicalizedMap_addAll_closure, A.CanonicalizedMap_forEach_closure, A.CanonicalizedMap_map_closure, A.BaseRequest_closure, A._Sink__decode_assertCurrentChar, A.MediaType_toString_closure, A._extension_0__prefixed_closure, A._CombinedStyles_styles_closure, A.MarkupRenderObject_renderToHtml_closure0, A.ServerApp__createServer_closure, A.serveRequests_closure0, A.handleRequest_closure, A._fromHttpRequest_closure, A._writeResponse_closure, A.Headers_singleValues_closure, A.gzipEncodeResponse_closure, A.Highlighter__collateLines_closure0, A.Frame_Frame$parseV8_closure_parseJsLocation]);
    _inheritMany(A.Closure0Args, [A._HttpHeaders__parseCookies_parseCookieString_done, A._HttpHeaders__parseCookies_parseCookieString_skipWS, A._HttpHeaders__parseCookies_parseCookieString_parseName, A._HttpHeaders__parseCookies_parseCookieString_parseValue, A._StreamSinkImpl_addStream_targetAddStream, A._StreamSinkImpl_addStream_targetAddStream_closure, A._HttpOutgoing_close_finalize, A._HttpConnection_closure0, A._HttpDetachedStreamSubscription__maybeScheduleData_closure, A._HttpParser$__closure, A._HttpParser$__closure0, A._HttpParser$__closure1, A._HttpParser$__closure2, A._HttpParser__createIncoming_closure, A._HttpParser__createIncoming_closure0, A._HttpParser__createIncoming_closure1, A._HttpParser__createIncoming_closure2, A.nullFuture_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A._TimerImpl$periodic_closure, A._asyncStarHelper_closure, A._AsyncStarStreamController__resumeBody, A._AsyncStarStreamController__resumeBody_closure, A._AsyncStarStreamController_closure0, A._AsyncStarStreamController_closure1, A._AsyncStarStreamController_closure, A._AsyncStarStreamController__closure, A.Future_Future$microtask_closure, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainCoreFuture_closure, A._Future__asyncCompleteWithValue_closure, A._Future__asyncCompleteErrorObject_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_Stream$fromIterable_closure_next, A.Stream_Stream$fromIterable__closure, A.Stream_fold_closure, A.Stream_fold__closure, A.Stream_forEach_closure, A.Stream_forEach__closure, A.Stream_length_closure0, A.Stream_toList_closure0, A._StreamController__subscribe_closure, A._StreamController__recordCancel_complete, A._AddStreamState_cancel_closure, A._BufferingStreamSubscription_asFuture_closure, A._BufferingStreamSubscription_asFuture__closure, A._BufferingStreamSubscription__sendError_sendError, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._DoneStreamSubscription_asFuture_closure, A._MultiStream_listen_closure, A._cancelAndError_closure, A._CustomZone_bindCallback_closure, A._CustomZone_bindCallbackGuarded_closure, A._rootHandleError_closure, A._RootZone_bindCallback_closure, A._RootZone_bindCallbackGuarded_closure, A._Utf8Decoder__decoder_closure, A._Utf8Decoder__decoderNonfatal_closure, A.defaultJasprOptions_closure, A.MediaType_MediaType$parse_closure, A.SchedulerBinding_scheduleBuild_closure, A.ComponentsBinding_attachRootComponent_closure, A.Element_rebuild_closure, A.AsyncBuildOwner_performRebuildOn_closure, A.AsyncBuildOwner_performRebuildOn_closure0, A.AsyncBuildOwner_performRebuildOn_closure1, A.AsyncBuildOwner_performRebuildOn_closure2, A.AsyncBuildOwner_performRebuildOn_closure3, A.TaskChain_then_closure, A.TaskChain_then__closure0, A._sseProxyHandler_createSseConnection__closure, A._sseProxyHandler_createSseConnection__closure1, A.serveRequests_closure, A.Cascade_handler__closure, A._OnHijack_run_closure, A.createGzipMiddleware___closure, A.Highlighter_closure, A.Highlighter__writeFileStart_closure, A.Highlighter__writeMultilineHighlights_closure, A.Highlighter__writeMultilineHighlights_closure0, A.Highlighter__writeMultilineHighlights_closure1, A.Highlighter__writeMultilineHighlights_closure2, A.Highlighter__writeMultilineHighlights__closure, A.Highlighter__writeMultilineHighlights__closure0, A.Highlighter__writeHighlightedText_closure, A.Highlighter__writeIndicator_closure, A.Highlighter__writeIndicator_closure0, A.Highlighter__writeIndicator_closure1, A.Highlighter__writeSidebar_closure, A._Highlight_closure, A.Chain_Chain$forTrace_closure, A.Frame_Frame$parseVM_closure, A.Frame_Frame$parseV8_closure, A.Frame_Frame$_parseFirefoxEval_closure, A.Frame_Frame$parseFirefox_closure, A.Frame_Frame$parseFriendly_closure, A.LazyChain_foldFrames_closure]);
    _inherit(A._ContentType, A._HeaderValue);
    _inheritMany(A.Stream, [A._HttpIncoming, A._HttpInboundMessage, A.__HttpServer_Stream__ServiceObject, A._DetachedSocket, A._HttpDetachedIncoming, A._HttpParser, A.CastStream, A.StreamView, A._StreamImpl, A._EmptyStream, A._MultiStream, A._ForwardingStream, A._BoundSinkStream, A._ReceivePortImpl]);
    _inherit(A._HttpRequest, A._HttpInboundMessage);
    _inherit(A._IOSinkImpl, A._StreamSinkImpl);
    _inherit(A._HttpOutboundMessage, A._IOSinkImpl);
    _inherit(A._HttpResponse, A._HttpOutboundMessage);
    _inherit(A.__HttpConnection_LinkedListEntry__ServiceObject, A.LinkedListEntry);
    _inherit(A._HttpConnection, A.__HttpConnection_LinkedListEntry__ServiceObject);
    _inherit(A._HttpServer, A.__HttpServer_Stream__ServiceObject);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JavaScriptBigInt, J.JavaScriptSymbol, J.JSNumber, J.JSString]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, J.JSArray, A.NativeByteBuffer, A.NativeTypedData, A.EventTarget, A.AccessibleNodeList, A.Blob, A.CssTransformComponent, A.CssRule, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.CssStyleValue, A.DataTransferItemList, A.DomException, A.DomImplementation, A._DomRectList_JavaScriptObject_ListMixin, A.DomRectReadOnly, A._DomStringList_JavaScriptObject_ListMixin, A.DomTokenList, A.Event, A._FileList_JavaScriptObject_ListMixin, A.Gamepad, A.History, A._HtmlCollection_JavaScriptObject_ListMixin, A.Location, A.MediaList, A._MidiInputMap_JavaScriptObject_MapMixin, A._MidiOutputMap_JavaScriptObject_MapMixin, A.MimeType, A._MimeTypeArray_JavaScriptObject_ListMixin, A._NodeList_JavaScriptObject_ListMixin, A.Plugin, A._PluginArray_JavaScriptObject_ListMixin, A._RtcStatsReport_JavaScriptObject_MapMixin, A.SpeechGrammar, A._SpeechGrammarList_JavaScriptObject_ListMixin, A.SpeechRecognitionResult, A._Storage_JavaScriptObject_MapMixin, A.StyleSheet, A._TextTrackCueList_JavaScriptObject_ListMixin, A.TimeRanges, A.Touch, A._TouchList_JavaScriptObject_ListMixin, A.TrackDefaultList, A.Url, A.__CssRuleList_JavaScriptObject_ListMixin, A.__GamepadList_JavaScriptObject_ListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin, A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin, A.__StyleSheetList_JavaScriptObject_ListMixin, A.Length, A._LengthList_JavaScriptObject_ListMixin, A.Number, A._NumberList_JavaScriptObject_ListMixin, A.PointList, A._StringList_JavaScriptObject_ListMixin, A.Transform, A._TransformList_JavaScriptObject_ListMixin, A.AudioBuffer, A._AudioParamMap_JavaScriptObject_MapMixin]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.Iterable, [A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A.ExpandIterable, A.TakeIterable, A.SkipIterable, A.SkipWhileIterable, A.WhereTypeIterable, A._KeysOrValues, A._AllMatchesIterable, A._StringAllMatchesIterable, A._SyncStarIterable, A.LinkedList]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inherit(A.CastList, A._CastListBase);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A.RuntimeError, A._Error, A.JsonUnsupportedObjectError, A.AssertionError, A.ArgumentError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError]);
    _inheritMany(A.ListBase, [A.UnmodifiableListBase, A.TypedDataBuffer]);
    _inheritMany(A.UnmodifiableListBase, [A.CodeUnits, A.UnmodifiableListView]);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeysIterable, A.LinkedHashMapValuesIterable, A.LinkedHashMapEntriesIterable, A._HashMapKeyIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A.ReversedListIterable, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inherit(A.EfficientLengthTakeIterable, A.TakeIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inheritMany(A._Record, [A._Record2, A._Record3]);
    _inheritMany(A._Record2, [A._Record_2, A._Record_2_attributes_children]);
    _inherit(A._Record_3, A._Record3);
    _inheritMany(A.MapView, [A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A._EmptyShelfUnmodifiableMap]);
    _inherit(A.UnmodifiableMapView, A._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inheritMany(A.UnmodifiableMapView, [A.ConstantMapView, A.Headers, A.ShelfUnmodifiableMap]);
    _inherit(A.ConstantStringMap, A.ConstantMap);
    _inheritMany(A.SetBase, [A.ConstantSet, A._SetBase]);
    _inherit(A.ConstantStringSet, A.ConstantSet);
    _inherit(A.Instantiation1, A.Instantiation);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inheritMany(A.MapBase, [A.JsLinkedHashMap, A._HashMap, A._JsonMap, A._AttributeMap]);
    _inheritMany(A.JsLinkedHashMap, [A.JsIdentityLinkedHashMap, A._LinkedCustomHashMap]);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfDouble, [A.NativeFloat32List, A.NativeFloat64List]);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inheritMany(A._Completer, [A._AsyncCompleter, A._SyncCompleter]);
    _inheritMany(A._StreamController, [A._AsyncStreamController, A._SyncStreamController]);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inheritMany(A._BufferingStreamSubscription, [A._ControllerSubscription, A._ForwardingStreamSubscription, A._SinkTransformerStreamSubscription]);
    _inherit(A._StreamControllerAddStreamState, A._AddStreamState);
    _inheritMany(A._DelayedEvent, [A._DelayedData, A._DelayedError]);
    _inherit(A._MultiStreamController, A._AsyncStreamController);
    _inherit(A._HandleErrorStream, A._ForwardingStream);
    _inheritMany(A._Zone, [A._CustomZone, A._RootZone]);
    _inheritMany(A._HashMap, [A._IdentityHashMap, A._CustomHashMap]);
    _inheritMany(A._SetBase, [A._HashSet, A._LinkedHashSet]);
    _inheritMany(A.StringConversionSink, [A._StringSinkConversionSink, A._UnicodeSubsetEncoderSink, A._HtmlEscapeSink, A._StringAdapterSink]);
    _inherit(A._JsonDecoderSink, A._StringSinkConversionSink);
    _inheritMany(A.Codec, [A.Encoding, A.Base64Codec, A._FusedCodec, A.JsonCodec]);
    _inheritMany(A.Encoding, [A.AsciiCodec, A.Latin1Codec, A.Utf8Codec]);
    _inheritMany(A.Converter, [A._UnicodeSubsetEncoder, A._UnicodeSubsetDecoder, A.Base64Encoder, A.HtmlEscape, A.JsonEncoder, A.JsonDecoder, A.Utf8Encoder, A.Utf8Decoder, A.ZLibEncoder, A.ChunkedCodingDecoder]);
    _inheritMany(A._UnicodeSubsetEncoder, [A.AsciiEncoder, A.Latin1Encoder]);
    _inheritMany(A._UnicodeSubsetDecoder, [A.AsciiDecoder, A.Latin1Decoder]);
    _inheritMany(A.ByteConversionSink, [A._ErrorHandlingAsciiDecoderSink, A._SimpleAsciiDecoderSink, A._Base64EncoderSink, A._ByteAdapterSink, A._ByteCallbackSink, A._Latin1DecoderSink, A._Utf8StringSinkAdapter, A._Utf8ConversionSink, A._BufferSink, A._FilterSink, A._Sink]);
    _inherit(A._BufferCachingBase64Encoder, A._Base64Encoder);
    _inheritMany(A._Base64EncoderSink, [A._AsciiBase64EncoderSink, A._Utf8Base64EncoderSink]);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inheritMany(A.ChunkedConversionSink, [A._JsonEncoderSink, A._JsonUtf8EncoderSink]);
    _inheritMany(A._JsonStringifier, [A._JsonStringStringifier, A._JsonUtf8Stringifier]);
    _inherit(A.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin, A._JsonUtf8Stringifier);
    _inherit(A._JsonUtf8StringifierPretty, A.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin);
    _inherit(A._Latin1AllowInvalidDecoderSink, A._Latin1DecoderSink);
    _inherit(A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink, A._Utf8Encoder);
    _inherit(A._Utf8EncoderSink, A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A.EventTarget, [A.Node, A.FileWriter, A.SourceBuffer, A._SourceBufferList_EventTarget_ListMixin, A.TextTrack, A.TextTrackCue, A._TextTrackList_EventTarget_ListMixin, A.VideoTrackList, A.AudioTrackList, A.BaseAudioContext]);
    _inheritMany(A.Node, [A.Element0, A.CharacterData, A.Document, A._Attr]);
    _inherit(A.HtmlElement, A.Element0);
    _inheritMany(A.HtmlElement, [A.AnchorElement, A.AreaElement, A.BaseElement, A.BodyElement, A.FormElement, A.SelectElement, A.TemplateElement]);
    _inherit(A.CssPerspective, A.CssTransformComponent);
    _inherit(A.CssStyleDeclaration, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase);
    _inheritMany(A.CssStyleValue, [A.CssTransformValue, A.CssUnparsedValue]);
    _inherit(A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin, A._DomRectList_JavaScriptObject_ListMixin);
    _inherit(A.DomRectList, A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin, A._DomStringList_JavaScriptObject_ListMixin);
    _inherit(A.DomStringList, A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.File, A.Blob);
    _inherit(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A._FileList_JavaScriptObject_ListMixin);
    _inherit(A.FileList, A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A._HtmlCollection_JavaScriptObject_ListMixin);
    _inherit(A.HtmlCollection, A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.HtmlDocument, A.Document);
    _inherit(A.MidiInputMap, A._MidiInputMap_JavaScriptObject_MapMixin);
    _inherit(A.MidiOutputMap, A._MidiOutputMap_JavaScriptObject_MapMixin);
    _inherit(A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin, A._MimeTypeArray_JavaScriptObject_ListMixin);
    _inherit(A.MimeTypeArray, A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NodeList_JavaScriptObject_ListMixin);
    _inherit(A.NodeList, A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin, A._PluginArray_JavaScriptObject_ListMixin);
    _inherit(A.PluginArray, A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.RtcStatsReport, A._RtcStatsReport_JavaScriptObject_MapMixin);
    _inherit(A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, A._SourceBufferList_EventTarget_ListMixin);
    _inherit(A.SourceBufferList, A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin, A._SpeechGrammarList_JavaScriptObject_ListMixin);
    _inherit(A.SpeechGrammarList, A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.Storage, A._Storage_JavaScriptObject_MapMixin);
    _inherit(A.Text0, A.CharacterData);
    _inherit(A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TextTrackCueList_JavaScriptObject_ListMixin);
    _inherit(A.TextTrackCueList, A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, A._TextTrackList_EventTarget_ListMixin);
    _inherit(A.TextTrackList, A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TouchList_JavaScriptObject_ListMixin);
    _inherit(A.TouchList, A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__CssRuleList_JavaScriptObject_ListMixin);
    _inherit(A._CssRuleList, A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._DomRect, A.DomRectReadOnly);
    _inherit(A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__GamepadList_JavaScriptObject_ListMixin);
    _inherit(A._GamepadList, A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin);
    _inherit(A._NamedNodeMap, A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin);
    _inherit(A._SpeechRecognitionResultList, A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__StyleSheetList_JavaScriptObject_ListMixin);
    _inherit(A._StyleSheetList, A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._ElementAttributeMap, A._AttributeMap);
    _inherit(A._ZLibEncoderSink, A._FilterSink);
    _inheritMany(A.FileSystemEntity, [A._Directory, A._File]);
    _inheritMany(A.FileSystemException, [A.PathAccessException, A.PathExistsException, A.PathNotFoundException]);
    _inherit(A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin, A._LengthList_JavaScriptObject_ListMixin);
    _inherit(A.LengthList, A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NumberList_JavaScriptObject_ListMixin);
    _inherit(A.NumberList, A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin, A._StringList_JavaScriptObject_ListMixin);
    _inherit(A.StringList, A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TransformList_JavaScriptObject_ListMixin);
    _inherit(A.TransformList, A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.AudioParamMap, A._AudioParamMap_JavaScriptObject_MapMixin);
    _inherit(A.OfflineAudioContext, A.BaseAudioContext);
    _inherit(A.SetEquality, A._UnorderedEquality);
    _inheritMany(A.Component, [A.StatefulComponent, A.StatelessComponent, A.AsyncStatelessComponent, A.RawNode, A.ProxyComponent, A.Text]);
    _inherit(A.App, A.StatefulComponent);
    _inherit(A.AppState, A.State);
    _inheritMany(A.StatelessComponent, [A.AppButton, A.ContactCard, A.Footer, A.NavBar, A.ProjectCard, A.ServiceCard, A.AboutMeSection, A.BasicInfoSection, A.ContactSection, A.ProjectsSections, A.ServicesSection, A.BaseDocument, A.HeadDocument, A.AttachDocument, A.RawText, A.Style]);
    _inherit(A.About, A._About_Object__$About);
    _inherit(A.Basic, A._Basic_Object__$Basic);
    _inherit(A.Contact, A._Contact_Object__$Contact);
    _inherit(A.Data, A._Data_Object__$Data);
    _inherit(A.Project, A._Project_Object__$Project);
    _inherit(A.ServiceData, A._ServiceData_Object__$ServiceData);
    _inherit(A.Social, A._Social_Object__$Social);
    _inherit(A.Work, A._Work_Object__$Work);
    _inherit(A.Home, A.AsyncStatelessComponent);
    _inherit(A.EqualUnmodifiableListView, A.UnmodifiableListView);
    _inherit(A.BrowserClient, A.BaseClient);
    _inherit(A.ByteStream, A.StreamView);
    _inherit(A.StreamedRequest, A.BaseRequest);
    _inherit(A.StreamedResponse, A.BaseResponse);
    _inherit(A.StreamedResponseV2, A.StreamedResponse);
    _inherit(A.CaseInsensitiveMap, A.CanonicalizedMap);
    _inheritMany(A._Enum, [A._State, A.Target, A.SchedulerPhase, A.BorderStyle, A.AlignSelf, A.FlexDirection, A.FlexWrap, A.JustifyContent, A.AlignItems, A.TextAlign, A.FontWeight, A._ElementLifecycle]);
    _inheritMany(A.RenderAdapter, [A._AttachAdapter_RenderAdapter_DocumentStructureMixin, A.ElementBoundaryAdapter, A.HeadScopeAdapter, A._DocumentAdapter_RenderAdapter_DocumentStructureMixin]);
    _inherit(A.AttachAdapter, A._AttachAdapter_RenderAdapter_DocumentStructureMixin);
    _inheritMany(A.ElementBoundaryAdapter, [A._AttachChildrenAdapter, A.ClientComponentAdapter]);
    _inheritMany(A.Element, [A.BuildableElement, A.ProxyElement, A.LeafElement]);
    _inheritMany(A.BuildableElement, [A.BuildableRenderObjectElement, A.StatefulElement, A.StatelessElement, A.AsyncBuildableElement]);
    _inherit(A.RawNodeElement, A.BuildableRenderObjectElement);
    _inherit(A.AppBinding, A._AppBinding_Object_SchedulerBinding);
    _inherit(A.NestedStyleRule, A._NestedStyleRule_Object_StylesMixin);
    _inherit(A._Positioned, A._Position);
    _inheritMany(A._Unit, [A._PercentUnit, A._PixelsUnit, A._RemUnit, A._VwUnit, A._VhUnit]);
    _inherit(A.Styles, A._Styles_Object_StylesMixin);
    _inheritMany(A.Styles, [A._BackgroundStyles, A._BoxStyles, A._FlexBoxStyles, A._FlexItemStyles, A._TextStyles, A._EmptyStyles, A._CombinedStyles]);
    _inheritMany(A.ProxyComponent, [A._Root, A.DomComponent, A.ObserverComponent]);
    _inheritMany(A.ProxyElement, [A.ProxyRenderObjectElement, A.ObserverElement]);
    _inheritMany(A.ProxyRenderObjectElement, [A._RootElement, A.DomElement]);
    _inherit(A.LeafRenderObjectElement, A.LeafElement);
    _inherit(A.TextElement, A.LeafRenderObjectElement);
    _inheritMany(A.Key, [A.LocalKey, A.GlobalKey]);
    _inherit(A.ValueKey, A.LocalKey);
    _inherit(A.ClientComponentRegistry, A.ObserverComponent);
    _inherit(A.ClientComponentRegistryElement, A.ObserverElement);
    _inheritMany(A.HeadScopeAdapter, [A.ClientScriptAdapter, A.GlobalStylesAdapter]);
    _inherit(A.DocumentAdapter, A._DocumentAdapter_RenderAdapter_DocumentStructureMixin);
    _inherit(A.AsyncBuildOwner, A.BuildOwner);
    _inheritMany(A.ChildNode, [A.BaseChildNode, A._ChildListRange_ChildNode_Iterable]);
    _inheritMany(A.BaseChildNode, [A.ChildNodeData, A.ChildNodeBoundary]);
    _inherit(A.ChildListRange, A._ChildListRange_ChildNode_Iterable);
    _inherit(A.ChildList, A._ChildList_Object_Iterable);
    _inherit(A.AsyncStatelessElement, A.AsyncBuildableElement);
    _inherit(A.MarkupRenderObject, A.RenderObject);
    _inherit(A._ServerAppBinding_AppBinding_ComponentsBinding, A.AppBinding);
    _inherit(A.ServerAppBinding, A._ServerAppBinding_AppBinding_ComponentsBinding);
    _inherit(A.InternalStyle, A.Style0);
    _inheritMany(A.InternalStyle, [A.PosixStyle, A.UrlStyle, A.WindowsStyle]);
    _inheritMany(A.Message, [A.Request, A.Response]);
    _inherit(A.FileLocation, A.SourceLocationMixin);
    _inheritMany(A.SourceSpanMixin, [A._FileSpan, A.SourceSpanBase]);
    _inherit(A.SourceSpanFormatException, A.SourceSpanException);
    _inherit(A.SourceSpanWithContext, A.SourceSpanBase);
    _inherit(A._StreamChannel, A.StreamChannelMixin);
    _inherit(A.StringScannerException, A.SourceSpanFormatException);
    _inherit(A._IntBuffer, A.TypedDataBuffer);
    _inherit(A.Uint8Buffer, A._IntBuffer);
    _mixin(A.__HttpConnection_LinkedListEntry__ServiceObject, A._ServiceObject);
    _mixin(A.__HttpServer_Stream__ServiceObject, A._ServiceObject);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._AsyncStreamController, A._AsyncStreamControllerDispatch);
    _mixin(A._SyncStreamController, A._SyncStreamControllerDispatch);
    _mixin(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A._UnmodifiableMapMixin);
    _mixin(A.__JsonUtf8StringifierPretty__JsonUtf8Stringifier__JsonPrettyPrintMixin, A._JsonPrettyPrintMixin);
    _mixin(A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink, A.StringConversionSink);
    _mixin(A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.CssStyleDeclarationBase);
    _mixin(A._DomRectList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._DomStringList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._FileList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._MidiInputMap_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._MidiOutputMap_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._MimeTypeArray_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._PluginArray_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._RtcStatsReport_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._SourceBufferList_EventTarget_ListMixin, A.ListBase);
    _mixin(A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._SpeechGrammarList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._Storage_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._TextTrackCueList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TextTrackList_EventTarget_ListMixin, A.ListBase);
    _mixin(A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TouchList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__CssRuleList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__GamepadList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__StyleSheetList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._LengthList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NumberList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._StringList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TransformList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._AudioParamMap_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._About_Object__$About, A._$About);
    _mixin(A._Basic_Object__$Basic, A._$Basic);
    _mixin(A._Contact_Object__$Contact, A._$Contact);
    _mixin(A._Data_Object__$Data, A._$Data);
    _mixin(A._Project_Object__$Project, A._$Project);
    _mixin(A._ServiceData_Object__$ServiceData, A._$ServiceData);
    _mixin(A._Social_Object__$Social, A._$Social);
    _mixin(A._Work_Object__$Work, A._$Work);
    _mixin(A._AttachAdapter_RenderAdapter_DocumentStructureMixin, A.DocumentStructureMixin);
    _mixin(A._AppBinding_Object_SchedulerBinding, A.SchedulerBinding);
    _mixin(A._NestedStyleRule_Object_StylesMixin, A.StylesMixin);
    _mixin(A._Styles_Object_StylesMixin, A.StylesMixin);
    _mixinHard(A.BuildableRenderObjectElement, A.RenderObjectElement);
    _mixinHard(A.ProxyRenderObjectElement, A.RenderObjectElement);
    _mixinHard(A.LeafRenderObjectElement, A.RenderObjectElement);
    _mixin(A._DocumentAdapter_RenderAdapter_DocumentStructureMixin, A.DocumentStructureMixin);
    _mixin(A._ChildList_Object_Iterable, A.Iterable);
    _mixin(A._ChildListRange_ChildNode_Iterable, A.Iterable);
    _mixin(A._ServerAppBinding_AppBinding_ComponentsBinding, A.ComponentsBinding);
  })();
  var init = {
    G: typeof self != "undefined" ? self : globalThis,
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List", Object: "Object", Map: "Map"},
    mangledNames: {},
    types: ["~()", "Null()", "bool(String)", "Null(@)", "~(Object?)", "bool(MarkupRenderObject)", "Future<@>()", "~(Object,StackTrace)", "~(@)", "~(String,List<String>)", "~(Element)", "~(String,@)", "~(String,String)", "Frame()", "Frame(String)", "Null(Object,StackTrace)", "int(Object?)", "Future<Response>(Request)", "~(List<int>)", "bool(Frame)", "~(Object[StackTrace?])", "bool(Object?)", "~(Object?,Object?)", "String(String)", "bool(Object?,Object?)", "bool(Element)", "bool(_Highlight)", "~(~())", "String(Frame)", "int(@,@)", "~(Socket)", "~([Future<@>?])", "@(@)", "~(String)", "~([Future<~>?])", "~(@,StackTrace)", "String()", "Chain()", "Response/(Request)", "TaskChain?()", "int()", "String(MapEntry<String,String>)", "String(Match)", "@()", "String(@)", "bool(NodeValidator)", "String(String?)", "Trace(String)", "Future<@>(@)", "~(String,String?)", "int(Frame)", "Response/(Response)", "~(@,@)", "Response/()", "~(Zone,ZoneDelegate,Zone,Object,StackTrace)", "bool()", "Null(~)", "~([Object?])", "_ConverterStreamEventSink<@,@>(EventSink<@>)", "StringBuffer(StringBuffer,String)", "String(StringBuffer)", "~(Uint8List,int,int)", "~(String,int)", "~(String,int?)", "int(int,int)", "_Future<@>?()", "~(int,int,int)", "0&(@)", "~(int,@)", "~(Node,Node?)", "Future<int>()", "~(Cookie)", "Object?(Object?)", "~(~)", "List<StyleRule>()", "Null(@,StackTrace)", "bool(Cookie)", "Map<String,@>(Work)", "Social(@)", "ServiceData(@)", "Project(@)", "Contact(@)", "Map<String,@>(Social)", "Map<String,@>(ServiceData)", "Map<String,@>(Project)", "Map<String,@>(Contact)", "Null(~())", "int(String)", "Null(String,String[Object?])", "bool(Object)", "~(int,String)", "MediaType()", "@(String)", "String?(MarkupRenderObject)", "String(FontFamily)", "@(@,String)", "String(StyleRule)", "MapEntry<String,String>(String,String)", "Map<String,String>(Map<String,String>,Styles)", "Future<Null>()", "Work(@)", "Future<@>(~)", "bool(@)", "_HttpOutboundMessage<@>?(@)", "Future<~>()", "String(String,String)", "~(ServerAppBinding)", "Response/(Request,Response/(~(ServerAppBinding)))", "Response(Request)", "_HttpOutboundMessage<@>?(@,@)", "Future<Response>(~(ServerAppBinding))", "Future<String?>(String)", "~(StreamChannel<List<int>>)", "~(HttpRequest)", "~(~(StreamChannel<List<int>>))", "0^(0^,0^)<num>", "bool(int)", "~(Uint8List)", "String(Cookie)", "Null(@,@)", "bool(Response)", "MapEntry<String,String>(String,List<String>)", "bool(MapEntry<String,List<String>>)", "MapEntry<String,List<String>>(MapEntry<String,List<String>>)", "~(Timer)", "MapEntry<String,List<String>>(MapEntry<String,Object>)", "Response/(Request)(Response/(Request))", "_BytesBuffer(_BytesBuffer,List<int>)", "String?()", "int(_Line)", "_HttpOutboundMessage<@>(@)", "Object(_Line)", "Object(_Highlight)", "int(_Highlight,_Highlight)", "List<_Line>(MapEntry<Object,List<_Highlight>>)", "_HttpServer(ServerSocket)", "SourceSpanWithContext()", "Future<@>({force:bool})", "Trace(Trace)", "bool(Trace)", "List<Frame>(Trace)", "int(Trace)", "_DetachedSocket(@)", "String(Trace)", "Null(Socket)", "_HttpOutboundMessage<@>(@,@)", "Frame(String,String)", "Frame(Frame)", "MapEntry<String,List<String>?>(MapEntry<String,Object?>)", "~(_HttpIncoming)", "~(Zone?,ZoneDelegate?,Zone,Object,StackTrace)", "0^(Zone?,ZoneDelegate?,Zone,0^())<Object?>", "0^(Zone?,ZoneDelegate?,Zone,0^(1^),1^)<Object?,Object?>", "0^(Zone?,ZoneDelegate?,Zone,0^(1^,2^),1^,2^)<Object?,Object?,Object?>", "0^()(Zone,ZoneDelegate,Zone,0^())<Object?>", "0^(1^)(Zone,ZoneDelegate,Zone,0^(1^))<Object?,Object?>", "0^(1^,2^)(Zone,ZoneDelegate,Zone,0^(1^,2^))<Object?,Object?,Object?>", "AsyncError?(Zone,ZoneDelegate,Zone,Object,StackTrace?)", "~(Zone?,ZoneDelegate?,Zone,~())", "Timer(Zone,ZoneDelegate,Zone,Duration,~())", "Timer(Zone,ZoneDelegate,Zone,Duration,~(Timer))", "~(Zone,ZoneDelegate,Zone,String)", "Zone(Zone?,ZoneDelegate?,Zone,ZoneSpecification?,Map<Object?,Object?>?)", "List<String>()", "List<String>(String,List<String>)", "Map<String,@>(AppButton)", "Map<String,@>(ContactCard)", "Map<String,@>(ProjectCard)", "Map<String,@>(ServiceCard)", "Map<String,@>(AboutMeSection)", "int(Element,Element)", "Null(bool)", "Element?(Element?)", "bool(String,String)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti"),
    rttc: {
      "2;": (t1, t2) => o => o instanceof A._Record_2 && t1._is(o._0) && t2._is(o._1),
      "2;attributes,children": (t1, t2) => o => o instanceof A._Record_2_attributes_children && t1._is(o._0) && t2._is(o._1),
      "3;": (t1, t2, t3) => o => o instanceof A._Record_3 && t1._is(o._0) && t2._is(o._1) && t3._is(o._2)
    }
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","KeyframeEffect":"JavaScriptObject","KeyframeEffectReadOnly":"JavaScriptObject","AnimationEffectReadOnly":"JavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","AudioContext":"BaseAudioContext","AbsoluteOrientationSensor":"EventTarget","OrientationSensor":"EventTarget","Sensor":"EventTarget","MathMLElement":"Element0","AudioElement":"HtmlElement","MediaElement":"HtmlElement","ShadowRoot":"Node","DocumentFragment":"Node","XmlDocument":"Document","VttCue":"TextTrackCue","Comment":"CharacterData","HtmlFormControlsCollection":"HtmlCollection","CssCharsetRule":"CssRule","CssMatrixComponent":"CssTransformComponent","CssStyleSheet":"StyleSheet","CssurlImageValue":"CssStyleValue","CssImageValue":"CssStyleValue","CssResourceValue":"CssStyleValue","CDataSection":"Text0","HttpServer":{"Stream":["HttpRequest"]},"HttpRequest":{"Stream":["Uint8List"]},"HttpResponse":{"StreamSink":["List<int>"],"EventSink":["List<int>"],"Sink":["List<int>"],"StreamConsumer":["List<int>"],"StringSink":[]},"_HttpIncoming":{"Stream":["Uint8List"],"Stream.T":"Uint8List"},"_HttpOutboundMessage":{"_StreamSinkImpl":["List<int>"],"StreamSink":["List<int>"],"EventSink":["List<int>"],"Sink":["List<int>"],"StreamConsumer":["List<int>"],"StringSink":[]},"_HttpConnection":{"LinkedListEntry":["_HttpConnection"],"LinkedListEntry.E":"_HttpConnection"},"_HttpServer":{"HttpServer":[],"Stream":["HttpRequest"],"Stream.T":"HttpRequest"},"_DetachedSocket":{"Socket":[],"StreamSink":["List<int>"],"EventSink":["List<int>"],"Stream":["Uint8List"],"Sink":["List<int>"],"StreamConsumer":["List<int>"],"StringSink":[],"Stream.T":"Uint8List"},"_HttpSession":{"Map":["@","@"]},"HttpException":{"Exception":[]},"_HttpHeaders":{"HttpHeaders":[]},"_ContentType":{"ContentType":[]},"_Cookie":{"Cookie":[]},"_CopyingBytesBuilder":{"BytesBuilder":[]},"_HttpInboundMessage":{"Stream":["Uint8List"]},"_HttpRequest":{"HttpRequest":[],"Stream":["Uint8List"],"Stream.T":"Uint8List"},"_StreamSinkImpl":{"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"]},"_IOSinkImpl":{"_StreamSinkImpl":["List<int>"],"StreamSink":["List<int>"],"EventSink":["List<int>"],"Sink":["List<int>"],"StreamConsumer":["List<int>"],"StringSink":[]},"_HttpResponse":{"_HttpOutboundMessage":["HttpResponse"],"HttpResponse":[],"_StreamSinkImpl":["List<int>"],"StreamSink":["List<int>"],"EventSink":["List<int>"],"Sink":["List<int>"],"StreamConsumer":["List<int>"],"StringSink":[],"_StreamSinkImpl.T":"List<int>"},"_HttpOutgoing":{"StreamConsumer":["List<int>"]},"_HttpDetachedStreamSubscription":{"StreamSubscription":["Uint8List"]},"_HttpDetachedIncoming":{"Stream":["Uint8List"],"Stream.T":"Uint8List"},"_HttpParser":{"Stream":["_HttpIncoming"],"Stream.T":"_HttpIncoming"},"JSBool":{"bool":[],"TrustedGetRuntimeType":[]},"JSNull":{"Null":[],"TrustedGetRuntimeType":[]},"JavaScriptObject":{"JSObject":[]},"LegacyJavaScriptObject":{"JSObject":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"],"JSIndexable":["1"],"Iterable.E":"1"},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"],"JSIndexable":["1"],"Iterable.E":"1"},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"double":[],"num":[],"Comparable":["num"]},"JSInt":{"double":[],"int":[],"num":[],"Comparable":["num"],"TrustedGetRuntimeType":[]},"JSNumNotInt":{"double":[],"num":[],"Comparable":["num"],"TrustedGetRuntimeType":[]},"JSString":{"String":[],"Comparable":["String"],"Pattern":[],"JSIndexable":["@"],"TrustedGetRuntimeType":[]},"CastStream":{"Stream":["2"],"Stream.T":"2"},"CastStreamSubscription":{"StreamSubscription":["2"]},"_BytesBuilder":{"BytesBuilder":[]},"_CastIterableBase":{"Iterable":["2"]},"CastIterator":{"Iterator":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListBase.E":"2","Iterable.E":"2"},"LateError":{"Error":[]},"CodeUnits":{"ListBase":["int"],"UnmodifiableListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int","Iterable.E":"int","UnmodifiableListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereIterator":{"Iterator":["1"]},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"ExpandIterator":{"Iterator":["2"]},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"TakeIterator":{"Iterator":["1"]},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterator":{"Iterator":["1"]},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterator":{"Iterator":["1"]},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"EmptyIterator":{"Iterator":["1"]},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterator":{"Iterator":["1"]},"UnmodifiableListBase":{"ListBase":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"_Record_2":{"_Record2":[],"_Record":[]},"_Record_2_attributes_children":{"_Record2":[],"_Record":[]},"_Record_3":{"_Record3":[],"_Record":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"],"MapView.K":"1","MapView.V":"2","_UnmodifiableMapMixin.K":"1","_UnmodifiableMapMixin.V":"2"},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_KeysOrValues":{"Iterable":["1"],"Iterable.E":"1"},"_KeysOrValuesOrElementsIterator":{"Iterator":["1"]},"ConstantSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ConstantStringSet":{"ConstantSet":["1"],"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"Instantiation":{"Closure":[],"Function":[]},"Instantiation1":{"Closure":[],"Function":[]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Closure":[],"Function":[]},"Closure2Args":{"Closure":[],"Function":[]},"TearOffClosure":{"Closure":[],"Function":[]},"StaticClosure":{"Closure":[],"Function":[]},"BoundClosure":{"Closure":[],"Function":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapBase":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"LinkedHashMapKeysIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"LinkedHashMapValuesIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapValueIterator":{"Iterator":["1"]},"LinkedHashMapEntriesIterable":{"EfficientLengthIterable":["MapEntry<1,2>"],"Iterable":["MapEntry<1,2>"],"Iterable.E":"MapEntry<1,2>"},"LinkedHashMapEntryIterator":{"Iterator":["MapEntry<1,2>"]},"JsIdentityLinkedHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_Record2":{"_Record":[]},"_Record3":{"_Record":[]},"JSSyntaxRegExp":{"RegExp":[],"Pattern":[]},"_MatchImplementation":{"RegExpMatch":[],"Match":[]},"_AllMatchesIterable":{"Iterable":["RegExpMatch"],"Iterable.E":"RegExpMatch"},"_AllMatchesIterator":{"Iterator":["RegExpMatch"]},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"_StringAllMatchesIterator":{"Iterator":["Match"]},"NativeByteBuffer":{"JSObject":[],"ByteBuffer":[],"TrustedGetRuntimeType":[]},"NativeTypedData":{"JSObject":[]},"_UnmodifiableNativeByteBufferView":{"ByteBuffer":[]},"NativeByteData":{"ByteData":[],"JSObject":[],"TrustedGetRuntimeType":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"JSObject":[],"JSIndexable":["1"]},"NativeTypedArrayOfDouble":{"ListBase":["double"],"NativeTypedArray":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"EfficientLengthIterable":["double"],"JSObject":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"]},"NativeTypedArrayOfInt":{"ListBase":["int"],"NativeTypedArray":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeFloat32List":{"NativeTypedArrayOfDouble":[],"Float32List":[],"ListBase":["double"],"TypedDataList":["double"],"NativeTypedArray":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"EfficientLengthIterable":["double"],"JSObject":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double","Iterable.E":"double","FixedLengthListMixin.E":"double"},"NativeFloat64List":{"NativeTypedArrayOfDouble":[],"Float64List":[],"ListBase":["double"],"TypedDataList":["double"],"NativeTypedArray":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"EfficientLengthIterable":["double"],"JSObject":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double","Iterable.E":"double","FixedLengthListMixin.E":"double"},"NativeInt16List":{"NativeTypedArrayOfInt":[],"Int16List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int","FixedLengthListMixin.E":"int"},"NativeInt32List":{"NativeTypedArrayOfInt":[],"Int32List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int","FixedLengthListMixin.E":"int"},"NativeInt8List":{"NativeTypedArrayOfInt":[],"Int8List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int","FixedLengthListMixin.E":"int"},"NativeUint16List":{"NativeTypedArrayOfInt":[],"Uint16List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int","FixedLengthListMixin.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"Uint32List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8ClampedList":{"NativeTypedArrayOfInt":[],"Uint8ClampedList":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int","FixedLengthListMixin.E":"int"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"Uint8List":[],"ListBase":["int"],"TypedDataList":["int"],"NativeTypedArray":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int","FixedLengthListMixin.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"AsyncError":{"Error":[]},"_Future":{"Future":["1"]},"EventSink":{"Sink":["1"]},"MultiStreamController":{"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"]},"_TimerImpl":{"Timer":[]},"_AsyncAwaitCompleter":{"Completer":["1"]},"_SyncStarIterator":{"Iterator":["1"]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"_Completer":{"Completer":["1"]},"_AsyncCompleter":{"_Completer":["1"],"Completer":["1"]},"_SyncCompleter":{"_Completer":["1"],"Completer":["1"]},"StreamView":{"Stream":["1"]},"_StreamController":{"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_AsyncStreamController":{"_AsyncStreamControllerDispatch":["1"],"_StreamController":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_SyncStreamController":{"_SyncStreamControllerDispatch":["1"],"_StreamController":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"],"_BufferingStreamSubscription.T":"1"},"_StreamSinkWrapper":{"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"]},"_StreamControllerAddStreamState":{"_AddStreamState":["1"]},"_BufferingStreamSubscription":{"StreamSubscription":["1"],"_EventSink":["1"],"_EventDispatch":["1"],"_BufferingStreamSubscription.T":"1"},"_StreamImpl":{"Stream":["1"]},"_DelayedData":{"_DelayedEvent":["1"]},"_DelayedError":{"_DelayedEvent":["@"]},"_DelayedDone":{"_DelayedEvent":["@"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"_EmptyStream":{"Stream":["1"],"Stream.T":"1"},"_MultiStream":{"Stream":["1"],"Stream.T":"1"},"_MultiStreamController":{"_AsyncStreamController":["1"],"_AsyncStreamControllerDispatch":["1"],"_StreamController":["1"],"MultiStreamController":["1"],"StreamController":["1"],"StreamSink":["1"],"EventSink":["1"],"Sink":["1"],"StreamConsumer":["1"],"_StreamControllerLifecycle":["1"],"_EventSink":["1"],"_EventDispatch":["1"]},"_ForwardingStream":{"Stream":["2"]},"_ForwardingStreamSubscription":{"_BufferingStreamSubscription":["2"],"StreamSubscription":["2"],"_EventSink":["2"],"_EventDispatch":["2"],"_BufferingStreamSubscription.T":"2"},"_HandleErrorStream":{"_ForwardingStream":["1","1"],"Stream":["1"],"Stream.T":"1","_ForwardingStream.T":"1","_ForwardingStream.S":"1"},"_EventSinkWrapper":{"EventSink":["1"],"Sink":["1"]},"_SinkTransformerStreamSubscription":{"_BufferingStreamSubscription":["2"],"StreamSubscription":["2"],"_EventSink":["2"],"_EventDispatch":["2"],"_BufferingStreamSubscription.T":"2"},"_BoundSinkStream":{"Stream":["2"],"Stream.T":"2"},"_ZoneSpecification":{"ZoneSpecification":[]},"_ZoneDelegate":{"ZoneDelegate":[]},"_Zone":{"Zone":[]},"_CustomZone":{"_Zone":[],"Zone":[]},"_RootZone":{"_Zone":[],"Zone":[]},"_HashMap":{"MapBase":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_IdentityHashMap":{"_HashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_CustomHashMap":{"_HashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_HashMapKeyIterator":{"Iterator":["1"]},"_LinkedCustomHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapBase.K":"1","MapBase.V":"2"},"_HashSet":{"_SetBase":["1"],"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_HashSetIterator":{"Iterator":["1"]},"_LinkedHashSet":{"_SetBase":["1"],"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_LinkedHashSetIterator":{"Iterator":["1"]},"UnmodifiableListView":{"ListBase":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListBase.E":"1","Iterable.E":"1","UnmodifiableListMixin.E":"1"},"LinkedList":{"Iterable":["1"],"Iterable.E":"1"},"_LinkedListIterator":{"Iterator":["1"]},"ListBase":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"Map":["1","2"]},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"],"MapView.K":"1","MapView.V":"2","_UnmodifiableMapMixin.K":"1","_UnmodifiableMapMixin.V":"2"},"SetBase":{"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_ConverterStreamEventSink":{"EventSink":["1"],"Sink":["1"]},"Encoding":{"Codec":["String","List<int>"]},"_JsonMap":{"MapBase":["String","@"],"Map":["String","@"],"MapBase.K":"String","MapBase.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"Iterable.E":"String","ListIterable.E":"String"},"_JsonDecoderSink":{"_StringSinkConversionSink":["StringBuffer"],"StringConversionSink":[],"Sink":["String"],"_StringSinkConversionSink.0":"StringBuffer"},"AsciiCodec":{"Encoding":[],"Codec":["String","List<int>"]},"_UnicodeSubsetEncoder":{"Converter":["String","List<int>"]},"AsciiEncoder":{"Converter":["String","List<int>"],"Converter.S":"String","Converter.T":"List<int>"},"_UnicodeSubsetEncoderSink":{"StringConversionSink":[],"Sink":["String"]},"_UnicodeSubsetDecoder":{"Converter":["List<int>","String"]},"AsciiDecoder":{"Converter":["List<int>","String"],"Converter.S":"List<int>","Converter.T":"String"},"_ErrorHandlingAsciiDecoderSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"_SimpleAsciiDecoderSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"Base64Codec":{"Codec":["List<int>","String"]},"Base64Encoder":{"Converter":["List<int>","String"],"Converter.S":"List<int>","Converter.T":"String"},"_BufferCachingBase64Encoder":{"_Base64Encoder":[]},"_Base64EncoderSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"_AsciiBase64EncoderSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"_Utf8Base64EncoderSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"ByteConversionSink":{"Sink":["List<int>"]},"_ByteAdapterSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"_ByteCallbackSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"ChunkedConversionSink":{"Sink":["1"]},"_FusedCodec":{"Codec":["1","3"]},"HtmlEscape":{"Converter":["String","String"],"Converter.S":"String","Converter.T":"String"},"_HtmlEscapeSink":{"StringConversionSink":[],"Sink":["String"]},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object?","String"]},"JsonEncoder":{"Converter":["Object?","String"],"Converter.S":"Object?","Converter.T":"String"},"_JsonEncoderSink":{"Sink":["Object?"]},"_JsonUtf8EncoderSink":{"Sink":["Object?"]},"JsonDecoder":{"Converter":["String","Object?"],"Converter.S":"String","Converter.T":"Object?"},"Latin1Codec":{"Encoding":[],"Codec":["String","List<int>"]},"Latin1Encoder":{"Converter":["String","List<int>"],"Converter.S":"String","Converter.T":"List<int>"},"Latin1Decoder":{"Converter":["List<int>","String"],"Converter.S":"List<int>","Converter.T":"String"},"_Latin1DecoderSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"_Latin1AllowInvalidDecoderSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"StringConversionSink":{"Sink":["String"]},"_ClosableStringSink":{"StringSink":[]},"_StringConversionSinkAsStringSinkAdapter":{"StringSink":[]},"_StringSinkConversionSink":{"StringConversionSink":[],"Sink":["String"]},"_StringAdapterSink":{"StringConversionSink":[],"Sink":["String"]},"_Utf8StringSinkAdapter":{"ByteConversionSink":[],"Sink":["List<int>"]},"_Utf8ConversionSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"Utf8Codec":{"Encoding":[],"Codec":["String","List<int>"]},"Utf8Encoder":{"Converter":["String","List<int>"],"Converter.S":"String","Converter.T":"List<int>"},"_Utf8EncoderSink":{"StringConversionSink":[],"Sink":["String"]},"Utf8Decoder":{"Converter":["List<int>","String"],"Converter.S":"List<int>","Converter.T":"String"},"DateTime":{"Comparable":["DateTime"]},"double":{"num":[],"Comparable":["num"]},"Duration":{"Comparable":["Duration"]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"RegExpMatch":{"Match":[]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"String":{"Comparable":["String"],"Pattern":[]},"StringBuffer":{"StringSink":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_StringStackTrace":{"StackTrace":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"CssRule":{"JSObject":[]},"Event":{"JSObject":[]},"File":{"JSObject":[]},"Gamepad":{"JSObject":[]},"MimeType":{"JSObject":[]},"Node":{"JSObject":[]},"Plugin":{"JSObject":[]},"SourceBuffer":{"JSObject":[]},"SpeechGrammar":{"JSObject":[]},"SpeechRecognitionResult":{"JSObject":[]},"StyleSheet":{"JSObject":[]},"TextTrack":{"JSObject":[]},"TextTrackCue":{"JSObject":[]},"Touch":{"JSObject":[]},"HtmlElement":{"Element0":[],"Node":[],"JSObject":[]},"AccessibleNodeList":{"JSObject":[]},"AnchorElement":{"Element0":[],"Node":[],"JSObject":[]},"AreaElement":{"Element0":[],"Node":[],"JSObject":[]},"BaseElement":{"Element0":[],"Node":[],"JSObject":[]},"Blob":{"JSObject":[]},"BodyElement":{"Element0":[],"Node":[],"JSObject":[]},"CharacterData":{"Node":[],"JSObject":[]},"CssPerspective":{"JSObject":[]},"CssStyleDeclaration":{"JSObject":[]},"CssStyleValue":{"JSObject":[]},"CssTransformComponent":{"JSObject":[]},"CssTransformValue":{"JSObject":[]},"CssUnparsedValue":{"JSObject":[]},"DataTransferItemList":{"JSObject":[]},"Document":{"Node":[],"JSObject":[]},"DomException":{"JSObject":[]},"DomImplementation":{"JSObject":[]},"DomRectList":{"ListBase":["Rectangle<num>"],"ImmutableListMixin":["Rectangle<num>"],"List":["Rectangle<num>"],"JavaScriptIndexingBehavior":["Rectangle<num>"],"EfficientLengthIterable":["Rectangle<num>"],"JSObject":[],"Iterable":["Rectangle<num>"],"JSIndexable":["Rectangle<num>"],"ImmutableListMixin.E":"Rectangle<num>","ListBase.E":"Rectangle<num>","Iterable.E":"Rectangle<num>"},"DomRectReadOnly":{"Rectangle":["num"],"JSObject":[]},"DomStringList":{"ListBase":["String"],"ImmutableListMixin":["String"],"List":["String"],"JavaScriptIndexingBehavior":["String"],"EfficientLengthIterable":["String"],"JSObject":[],"Iterable":["String"],"JSIndexable":["String"],"ImmutableListMixin.E":"String","ListBase.E":"String","Iterable.E":"String"},"DomTokenList":{"JSObject":[]},"Element0":{"Node":[],"JSObject":[]},"EventTarget":{"JSObject":[]},"FileList":{"ListBase":["File"],"ImmutableListMixin":["File"],"List":["File"],"JavaScriptIndexingBehavior":["File"],"EfficientLengthIterable":["File"],"JSObject":[],"Iterable":["File"],"JSIndexable":["File"],"ImmutableListMixin.E":"File","ListBase.E":"File","Iterable.E":"File"},"FileWriter":{"JSObject":[]},"FormElement":{"Element0":[],"Node":[],"JSObject":[]},"History":{"JSObject":[]},"HtmlCollection":{"ListBase":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"JSObject":[],"Iterable":["Node"],"JSIndexable":["Node"],"ImmutableListMixin.E":"Node","ListBase.E":"Node","Iterable.E":"Node"},"HtmlDocument":{"Node":[],"JSObject":[]},"Location":{"JSObject":[]},"MediaList":{"JSObject":[]},"MidiInputMap":{"MapBase":["String","@"],"JSObject":[],"Map":["String","@"],"MapBase.K":"String","MapBase.V":"@"},"MidiOutputMap":{"MapBase":["String","@"],"JSObject":[],"Map":["String","@"],"MapBase.K":"String","MapBase.V":"@"},"MimeTypeArray":{"ListBase":["MimeType"],"ImmutableListMixin":["MimeType"],"List":["MimeType"],"JavaScriptIndexingBehavior":["MimeType"],"EfficientLengthIterable":["MimeType"],"JSObject":[],"Iterable":["MimeType"],"JSIndexable":["MimeType"],"ImmutableListMixin.E":"MimeType","ListBase.E":"MimeType","Iterable.E":"MimeType"},"NodeList":{"ListBase":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"JSObject":[],"Iterable":["Node"],"JSIndexable":["Node"],"ImmutableListMixin.E":"Node","ListBase.E":"Node","Iterable.E":"Node"},"PluginArray":{"ListBase":["Plugin"],"ImmutableListMixin":["Plugin"],"List":["Plugin"],"JavaScriptIndexingBehavior":["Plugin"],"EfficientLengthIterable":["Plugin"],"JSObject":[],"Iterable":["Plugin"],"JSIndexable":["Plugin"],"ImmutableListMixin.E":"Plugin","ListBase.E":"Plugin","Iterable.E":"Plugin"},"RtcStatsReport":{"MapBase":["String","@"],"JSObject":[],"Map":["String","@"],"MapBase.K":"String","MapBase.V":"@"},"SelectElement":{"Element0":[],"Node":[],"JSObject":[]},"SourceBufferList":{"ListBase":["SourceBuffer"],"ImmutableListMixin":["SourceBuffer"],"List":["SourceBuffer"],"JavaScriptIndexingBehavior":["SourceBuffer"],"EfficientLengthIterable":["SourceBuffer"],"JSObject":[],"Iterable":["SourceBuffer"],"JSIndexable":["SourceBuffer"],"ImmutableListMixin.E":"SourceBuffer","ListBase.E":"SourceBuffer","Iterable.E":"SourceBuffer"},"SpeechGrammarList":{"ListBase":["SpeechGrammar"],"ImmutableListMixin":["SpeechGrammar"],"List":["SpeechGrammar"],"JavaScriptIndexingBehavior":["SpeechGrammar"],"EfficientLengthIterable":["SpeechGrammar"],"JSObject":[],"Iterable":["SpeechGrammar"],"JSIndexable":["SpeechGrammar"],"ImmutableListMixin.E":"SpeechGrammar","ListBase.E":"SpeechGrammar","Iterable.E":"SpeechGrammar"},"Storage":{"MapBase":["String","String"],"JSObject":[],"Map":["String","String"],"MapBase.K":"String","MapBase.V":"String"},"TemplateElement":{"Element0":[],"Node":[],"JSObject":[]},"Text0":{"Node":[],"JSObject":[]},"TextTrackCueList":{"ListBase":["TextTrackCue"],"ImmutableListMixin":["TextTrackCue"],"List":["TextTrackCue"],"JavaScriptIndexingBehavior":["TextTrackCue"],"EfficientLengthIterable":["TextTrackCue"],"JSObject":[],"Iterable":["TextTrackCue"],"JSIndexable":["TextTrackCue"],"ImmutableListMixin.E":"TextTrackCue","ListBase.E":"TextTrackCue","Iterable.E":"TextTrackCue"},"TextTrackList":{"ListBase":["TextTrack"],"ImmutableListMixin":["TextTrack"],"List":["TextTrack"],"JavaScriptIndexingBehavior":["TextTrack"],"EfficientLengthIterable":["TextTrack"],"JSObject":[],"Iterable":["TextTrack"],"JSIndexable":["TextTrack"],"ImmutableListMixin.E":"TextTrack","ListBase.E":"TextTrack","Iterable.E":"TextTrack"},"TimeRanges":{"JSObject":[]},"TouchList":{"ListBase":["Touch"],"ImmutableListMixin":["Touch"],"List":["Touch"],"JavaScriptIndexingBehavior":["Touch"],"EfficientLengthIterable":["Touch"],"JSObject":[],"Iterable":["Touch"],"JSIndexable":["Touch"],"ImmutableListMixin.E":"Touch","ListBase.E":"Touch","Iterable.E":"Touch"},"TrackDefaultList":{"JSObject":[]},"Url":{"JSObject":[]},"VideoTrackList":{"JSObject":[]},"_Attr":{"Node":[],"JSObject":[]},"_CssRuleList":{"ListBase":["CssRule"],"ImmutableListMixin":["CssRule"],"List":["CssRule"],"JavaScriptIndexingBehavior":["CssRule"],"EfficientLengthIterable":["CssRule"],"JSObject":[],"Iterable":["CssRule"],"JSIndexable":["CssRule"],"ImmutableListMixin.E":"CssRule","ListBase.E":"CssRule","Iterable.E":"CssRule"},"_DomRect":{"Rectangle":["num"],"JSObject":[]},"_GamepadList":{"ListBase":["Gamepad?"],"ImmutableListMixin":["Gamepad?"],"List":["Gamepad?"],"JavaScriptIndexingBehavior":["Gamepad?"],"EfficientLengthIterable":["Gamepad?"],"JSObject":[],"Iterable":["Gamepad?"],"JSIndexable":["Gamepad?"],"ImmutableListMixin.E":"Gamepad?","ListBase.E":"Gamepad?","Iterable.E":"Gamepad?"},"_NamedNodeMap":{"ListBase":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"JSObject":[],"Iterable":["Node"],"JSIndexable":["Node"],"ImmutableListMixin.E":"Node","ListBase.E":"Node","Iterable.E":"Node"},"_SpeechRecognitionResultList":{"ListBase":["SpeechRecognitionResult"],"ImmutableListMixin":["SpeechRecognitionResult"],"List":["SpeechRecognitionResult"],"JavaScriptIndexingBehavior":["SpeechRecognitionResult"],"EfficientLengthIterable":["SpeechRecognitionResult"],"JSObject":[],"Iterable":["SpeechRecognitionResult"],"JSIndexable":["SpeechRecognitionResult"],"ImmutableListMixin.E":"SpeechRecognitionResult","ListBase.E":"SpeechRecognitionResult","Iterable.E":"SpeechRecognitionResult"},"_StyleSheetList":{"ListBase":["StyleSheet"],"ImmutableListMixin":["StyleSheet"],"List":["StyleSheet"],"JavaScriptIndexingBehavior":["StyleSheet"],"EfficientLengthIterable":["StyleSheet"],"JSObject":[],"Iterable":["StyleSheet"],"JSIndexable":["StyleSheet"],"ImmutableListMixin.E":"StyleSheet","ListBase.E":"StyleSheet","Iterable.E":"StyleSheet"},"_AttributeMap":{"MapBase":["String","String"],"Map":["String","String"]},"_ElementAttributeMap":{"MapBase":["String","String"],"Map":["String","String"],"MapBase.K":"String","MapBase.V":"String"},"_Html5NodeValidator":{"NodeValidator":[]},"NodeValidatorBuilder":{"NodeValidator":[]},"FixedSizeListIterator":{"Iterator":["1"]},"_ValidatingTreeSanitizer":{"NodeTreeSanitizer":[]},"ServerSocket":{"ServerSocketBase":["Socket"],"Stream":["Socket"]},"Socket":{"StreamSink":["List<int>"],"EventSink":["List<int>"],"Stream":["Uint8List"],"Sink":["List<int>"],"StreamConsumer":["List<int>"],"StringSink":[]},"OSError":{"Exception":[]},"ZLibEncoder":{"Converter":["List<int>","List<int>"],"Converter.S":"List<int>","Converter.T":"List<int>"},"_BufferSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"_ZLibEncoderSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"_FilterSink":{"ByteConversionSink":[],"Sink":["List<int>"]},"FileSystemException":{"Exception":[]},"PathAccessException":{"Exception":[]},"PathExistsException":{"Exception":[]},"PathNotFoundException":{"Exception":[]},"_ReceivePortImpl":{"Stream":["@"],"Stream.T":"@"},"NullRejectionException":{"Exception":[]},"Length":{"JSObject":[]},"Number":{"JSObject":[]},"Transform":{"JSObject":[]},"LengthList":{"ListBase":["Length"],"ImmutableListMixin":["Length"],"List":["Length"],"EfficientLengthIterable":["Length"],"JSObject":[],"Iterable":["Length"],"ImmutableListMixin.E":"Length","ListBase.E":"Length","Iterable.E":"Length"},"NumberList":{"ListBase":["Number"],"ImmutableListMixin":["Number"],"List":["Number"],"EfficientLengthIterable":["Number"],"JSObject":[],"Iterable":["Number"],"ImmutableListMixin.E":"Number","ListBase.E":"Number","Iterable.E":"Number"},"PointList":{"JSObject":[]},"StringList":{"ListBase":["String"],"ImmutableListMixin":["String"],"List":["String"],"EfficientLengthIterable":["String"],"JSObject":[],"Iterable":["String"],"ImmutableListMixin.E":"String","ListBase.E":"String","Iterable.E":"String"},"TransformList":{"ListBase":["Transform"],"ImmutableListMixin":["Transform"],"List":["Transform"],"EfficientLengthIterable":["Transform"],"JSObject":[],"Iterable":["Transform"],"ImmutableListMixin.E":"Transform","ListBase.E":"Transform","Iterable.E":"Transform"},"AudioBuffer":{"JSObject":[]},"AudioParamMap":{"MapBase":["String","@"],"JSObject":[],"Map":["String","@"],"MapBase.K":"String","MapBase.V":"@"},"AudioTrackList":{"JSObject":[]},"BaseAudioContext":{"JSObject":[]},"OfflineAudioContext":{"JSObject":[]},"CanonicalizedMap":{"Map":["2","3"]},"DefaultEquality":{"Equality":["1"]},"IterableEquality":{"Equality":["Iterable<1>"]},"ListEquality":{"Equality":["List<1>"]},"_UnorderedEquality":{"Equality":["2"]},"SetEquality":{"_UnorderedEquality":["1","Set<1>"],"Equality":["Set<1>"],"_UnorderedEquality.E":"1","_UnorderedEquality.T":"Set<1>"},"MapEquality":{"Equality":["Map<1,2>"]},"DeepCollectionEquality":{"Equality":["@"]},"App":{"StatefulComponent":[],"Component":[]},"AppState":{"State":["App"],"State.T":"App"},"AppButton":{"StatelessComponent":[],"Component":[]},"ContactCard":{"StatelessComponent":[],"Component":[]},"Footer":{"StatelessComponent":[],"Component":[]},"NavBar":{"StatelessComponent":[],"Component":[]},"ProjectCard":{"StatelessComponent":[],"Component":[]},"ServiceCard":{"StatelessComponent":[],"Component":[]},"_$AboutImpl":{"About":[]},"_$BasicImpl":{"Basic":[]},"_$ContactImpl":{"Contact":[]},"_$DataImpl":{"Data":[]},"_$ProjectImpl":{"Project":[]},"_$ServiceDataImpl":{"ServiceData":[]},"_$SocialImpl":{"Social":[]},"_$WorkImpl":{"Work":[]},"Home":{"AsyncStatelessComponent":[],"Component":[]},"AboutMeSection":{"StatelessComponent":[],"Component":[]},"BasicInfoSection":{"StatelessComponent":[],"Component":[]},"ContactSection":{"StatelessComponent":[],"Component":[]},"ProjectsSections":{"StatelessComponent":[],"Component":[]},"ServicesSection":{"StatelessComponent":[],"Component":[]},"EqualUnmodifiableListView":{"UnmodifiableListView":["1"],"ListBase":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListBase.E":"1","Iterable.E":"1","UnmodifiableListMixin.E":"1"},"BaseClient":{"Client0":[]},"BrowserClient":{"Client0":[]},"ByteStream":{"StreamView":["List<int>"],"Stream":["List<int>"],"Stream.T":"List<int>","StreamView.T":"List<int>"},"ClientException":{"Exception":[]},"StreamedRequest":{"BaseRequest":[]},"StreamedResponseV2":{"StreamedResponse":[]},"CaseInsensitiveMap":{"CanonicalizedMap":["String","String","1"],"Map":["String","1"],"CanonicalizedMap.K":"String","CanonicalizedMap.V":"1","CanonicalizedMap.C":"String"},"ChunkedCodingDecoder":{"Converter":["List<int>","List<int>"],"Converter.S":"List<int>","Converter.T":"List<int>"},"_Sink":{"ByteConversionSink":[],"Sink":["List<int>"]},"BaseDocument":{"StatelessComponent":[],"Component":[]},"HeadDocument":{"StatelessComponent":[],"Component":[]},"AttachDocument":{"StatelessComponent":[],"Component":[]},"AttachAdapter":{"RenderAdapter":[]},"_AttachChildrenAdapter":{"RenderAdapter":[]},"RawText":{"StatelessComponent":[],"Component":[]},"RawNode":{"Component":[]},"RawNodeElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"AllowAll":{"NodeValidator":[]},"Style":{"StatelessComponent":[],"Component":[]},"NestedStyleRule":{"StylesMixin":["NestedStyleRule"],"StyleRule":[]},"_AllBorder":{"Border":[]},"_CircularBorderRadius":{"BorderRadius":[]},"_BoxShadow":{"BoxShadow":[]},"_HexColor":{"Color":[]},"_NamedColor":{"Color":[]},"_QuadEdgeInsets":{"EdgeInsets":[]},"_AllEdgeInsets":{"EdgeInsets":[]},"_SymmetricEdgeInsets":{"EdgeInsets":[]},"_Position":{"Position":[]},"_Positioned":{"Position":[]},"_ListFontFamily":{"FontFamily":[]},"_Transition":{"Transition":[]},"_ZeroUnit":{"Unit":[]},"_Unit":{"Unit":[]},"_PercentUnit":{"Unit":[]},"_PixelsUnit":{"Unit":[]},"_RemUnit":{"Unit":[]},"_VwUnit":{"Unit":[]},"_VhUnit":{"Unit":[]},"BlockStyleRule":{"StyleRule":[]},"MediaStyleRule":{"StyleRule":[]},"_MediaRuleQuery":{"MediaQuery":[]},"ImportStyleRule":{"StyleRule":[]},"FontFaceStyleRule":{"StyleRule":[]},"Styles":{"StylesMixin":["Styles"]},"_BackgroundStyles":{"Styles":[],"StylesMixin":["Styles"]},"_BoxStyles":{"Styles":[],"StylesMixin":["Styles"]},"_FlexBoxStyles":{"Styles":[],"StylesMixin":["Styles"]},"_FlexItemStyles":{"Styles":[],"StylesMixin":["Styles"]},"_TextStyles":{"Styles":[],"StylesMixin":["Styles"]},"_EmptyStyles":{"Styles":[],"StylesMixin":["Styles"]},"_CombinedStyles":{"Styles":[],"StylesMixin":["Styles"]},"_WrappingDomComponent":{"DomComponent":[],"ProxyComponent":[],"Component":[]},"Element":{"BuildContext":[]},"InheritedElement":{"Element":[],"BuildContext":[]},"GlobalKey":{"Key":[]},"ObserverElement":{"Element":[],"BuildContext":[]},"StatefulComponent":{"Component":[]},"BuildableElement":{"Element":[],"BuildContext":[]},"_Root":{"ProxyComponent":[],"Component":[]},"_RootElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"DomComponent":{"ProxyComponent":[],"Component":[]},"DomElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"Text":{"Component":[]},"TextElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"LocalKey":{"Key":[]},"ValueKey":{"Key":[]},"ObserverComponent":{"ProxyComponent":[],"Component":[]},"ProxyComponent":{"Component":[]},"ProxyElement":{"Element":[],"BuildContext":[]},"LeafElement":{"Element":[],"BuildContext":[]},"BuildableRenderObjectElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"ProxyRenderObjectElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"LeafRenderObjectElement":{"RenderObjectElement":[],"Element":[],"BuildContext":[]},"StatefulElement":{"Element":[],"BuildContext":[]},"StatelessComponent":{"Component":[]},"StatelessElement":{"Element":[],"BuildContext":[]},"ClientComponentAdapter":{"RenderAdapter":[]},"ClientComponentRegistry":{"ObserverComponent":[],"ProxyComponent":[],"Component":[]},"ClientComponentRegistryElement":{"ObserverElement":[],"Element":[],"BuildContext":[]},"ClientScriptAdapter":{"RenderAdapter":[]},"DocumentAdapter":{"RenderAdapter":[]},"ElementBoundaryAdapter":{"RenderAdapter":[]},"GlobalStylesAdapter":{"RenderAdapter":[]},"HeadScopeAdapter":{"RenderAdapter":[]},"AsyncBuildOwner":{"BuildOwner":[]},"ChildListRange":{"ChildNode":[],"Iterable":["MarkupRenderObject"],"Iterable.E":"MarkupRenderObject"},"ChildNodeData":{"ChildNode":[]},"ChildNodeBoundary":{"ChildNode":[]},"BaseChildNode":{"ChildNode":[]},"ChildList":{"Iterable":["MarkupRenderObject"],"Iterable.E":"MarkupRenderObject"},"ChildListIterator":{"Iterator":["MarkupRenderObject"]},"AsyncBuildableElement":{"Element":[],"BuildContext":[]},"AsyncStatelessComponent":{"Component":[]},"AsyncStatelessElement":{"Element":[],"BuildContext":[]},"MarkupRenderObject":{"RenderObject":[]},"ServerAppBinding":{"AppBinding":[]},"PathException":{"Exception":[]},"PosixStyle":{"InternalStyle":[]},"UrlStyle":{"InternalStyle":[]},"WindowsStyle":{"InternalStyle":[]},"Headers":{"UnmodifiableMapView":["String","List<String>"],"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["String","List<String>"],"MapView":["String","List<String>"],"_UnmodifiableMapMixin":["String","List<String>"],"Map":["String","List<String>"],"MapView.K":"String","MapView.V":"List<String>","_UnmodifiableMapMixin.K":"String","_UnmodifiableMapMixin.V":"List<String>"},"HijackException":{"Exception":[]},"ShelfUnmodifiableMap":{"UnmodifiableMapView":["String","Object"],"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["String","Object"],"MapView":["String","Object"],"_UnmodifiableMapMixin":["String","Object"],"Map":["String","Object"],"MapView.K":"String","MapView.V":"Object","_UnmodifiableMapMixin.K":"String","_UnmodifiableMapMixin.V":"Object"},"_EmptyShelfUnmodifiableMap":{"ShelfUnmodifiableMap":[],"MapView":["String","Object"],"Map":["String","Object"],"MapView.K":"String","MapView.V":"Object","_UnmodifiableMapMixin.K":"String","_UnmodifiableMapMixin.V":"Object"},"FileLocation":{"SourceLocation":[],"Comparable":["SourceLocation"]},"_FileSpan":{"SourceSpanWithContext":[],"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceLocation":{"Comparable":["SourceLocation"]},"SourceLocationMixin":{"SourceLocation":[],"Comparable":["SourceLocation"]},"SourceSpan":{"Comparable":["SourceSpan"]},"SourceSpanBase":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanException":{"Exception":[]},"SourceSpanFormatException":{"FormatException":[],"Exception":[]},"SourceSpanMixin":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanWithContext":{"SourceSpan":[],"Comparable":["SourceSpan"]},"Chain":{"StackTrace":[]},"LazyChain":{"Chain":[],"StackTrace":[]},"Trace":{"StackTrace":[]},"UnparsedFrame":{"Frame":[]},"_StreamChannel":{"StreamChannel":["1"]},"StreamChannelMixin":{"StreamChannel":["1"]},"StringScannerException":{"FormatException":[],"Exception":[]},"TypedDataBuffer":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_IntBuffer":{"TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8Buffer":{"TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int","Iterable.E":"int","TypedDataBuffer.E":"int"},"Int8List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8ClampedList":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int16List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint16List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int32List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint32List":{"TypedDataList":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Float32List":{"TypedDataList":["double"],"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"Float64List":{"TypedDataList":["double"],"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"_HttpOutboundMessage":1,"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"NativeTypedArray":1,"_DelayedEvent":1,"ChunkedConversionSink":1,"StreamChannelMixin":1}'));
  var string$ = {
    x00_____: "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\u03f6\x00\u0404\u03f4 \u03f4\u03f6\u01f6\u01f6\u03f6\u03fc\u01f4\u03ff\u03ff\u0584\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u05d4\u01f4\x00\u01f4\x00\u0504\u05c4\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u0400\x00\u0400\u0200\u03f7\u0200\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u03ff\u0200\u0200\u0200\u03f7\x00",
    x20must_: " must not be greater than the number of characters in the file, ",
    x3d_____: "===== asynchronous gap ===========================\n",
    ABCDEF: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    Cannotff: "Cannot extract a file path from a URI with a fragment component",
    Cannotfq: "Cannot extract a file path from a URI with a query component",
    Cannotn: "Cannot extract a non-Windows file path from a file URI with an authority",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    It_see: "It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#adding-getters-and-methods-to-our-models",
    handle: "handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace."
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      $env_1_1_dynamic: findType("@<@>"),
      AboutMeSection: findType("AboutMeSection"),
      AppButton: findType("AppButton"),
      AsyncError: findType("AsyncError"),
      AsyncStatelessComponent: findType("AsyncStatelessComponent"),
      BaseElement: findType("BaseElement"),
      BodyElement: findType("BodyElement"),
      ByteBuffer: findType("ByteBuffer"),
      ByteData: findType("ByteData"),
      Cascade: findType("Cascade"),
      CaseInsensitiveMap_List_String: findType("CaseInsensitiveMap<List<String>>"),
      Chain: findType("Chain"),
      Client_Function: findType("Client0()"),
      CodeUnits: findType("CodeUnits"),
      Comparable_dynamic: findType("Comparable<@>"),
      Component: findType("Component"),
      ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
      Contact: findType("Contact"),
      ContactCard: findType("ContactCard"),
      Cookie: findType("Cookie"),
      CssRule: findType("CssRule"),
      Data: findType("Data"),
      DateTime: findType("DateTime"),
      DomComponent: findType("DomComponent"),
      DomRenderObject: findType("DomRenderObject"),
      Duration: findType("Duration"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element0"),
      Element_2: findType("Element"),
      EqualUnmodifiableListView_Contact: findType("EqualUnmodifiableListView<Contact>"),
      EqualUnmodifiableListView_Project: findType("EqualUnmodifiableListView<Project>"),
      EqualUnmodifiableListView_ServiceData: findType("EqualUnmodifiableListView<ServiceData>"),
      EqualUnmodifiableListView_Social: findType("EqualUnmodifiableListView<Social>"),
      EqualUnmodifiableListView_String: findType("EqualUnmodifiableListView<String>"),
      EqualUnmodifiableListView_Work: findType("EqualUnmodifiableListView<Work>"),
      Error: findType("Error"),
      Exception: findType("Exception"),
      File: findType("File"),
      Float32List: findType("Float32List"),
      Float64List: findType("Float64List"),
      FontFamily: findType("FontFamily"),
      FormatException: findType("FormatException"),
      Frame: findType("Frame"),
      Frame_Function_Frame: findType("Frame(Frame)"),
      Frame_Function_String: findType("Frame(String)"),
      Function: findType("Function"),
      FutureOr_Response_Function_Request: findType("Response/(Request)"),
      FutureOr_Response_Function_void_Function_ServerAppBinding: findType("Response/(~(ServerAppBinding))"),
      Future_Response: findType("Future<Response>"),
      Future_nullable_String_Function_String: findType("Future<String?>(String)"),
      GlobalKey_State_StatefulComponent: findType("GlobalKey<State<StatefulComponent>>"),
      HttpException: findType("HttpException"),
      HttpRequest: findType("HttpRequest"),
      HttpServer: findType("HttpServer"),
      InheritedElement: findType("InheritedElement"),
      Int16List: findType("Int16List"),
      Int32List: findType("Int32List"),
      Int8List: findType("Int8List"),
      IterableEquality_dynamic: findType("IterableEquality<@>"),
      Iterable_Component: findType("Iterable<Component>"),
      Iterable_String: findType("Iterable<String>"),
      Iterable_double: findType("Iterable<double>"),
      Iterable_dynamic: findType("Iterable<@>"),
      Iterable_int: findType("Iterable<int>"),
      JSArray_ClientTarget_Component: findType("JSArray<ClientTarget<Component>>"),
      JSArray_Component: findType("JSArray<Component>"),
      JSArray_Cookie: findType("JSArray<Cookie>"),
      JSArray_Element: findType("JSArray<Element>"),
      JSArray_Frame: findType("JSArray<Frame>"),
      JSArray_List_int: findType("JSArray<List<int>>"),
      JSArray_MarkupRenderObject: findType("JSArray<MarkupRenderObject>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_ObserverElement: findType("JSArray<ObserverElement>"),
      JSArray_Record_2_ChildListRange_and_int: findType("JSArray<+(ChildListRange,int)>"),
      JSArray_RenderAdapter: findType("JSArray<RenderAdapter>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_StyleRule: findType("JSArray<StyleRule>"),
      JSArray_Styles: findType("JSArray<Styles>"),
      JSArray_Trace: findType("JSArray<Trace>"),
      JSArray_Uint8List: findType("JSArray<Uint8List>"),
      JSArray__Highlight: findType("JSArray<_Highlight>"),
      JSArray__Line: findType("JSArray<_Line>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSNull: findType("JSNull"),
      JSObject: findType("JSObject"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      Key: findType("Key"),
      Length: findType("Length"),
      LinkedList__HttpConnection: findType("LinkedList<_HttpConnection>"),
      ListEquality_dynamic: findType("ListEquality<@>"),
      List_Component: findType("List<Component>"),
      List_Element: findType("List<Element>"),
      List_String: findType("List<String>"),
      List_StyleRule: findType("List<StyleRule>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      List_nullable__Highlight: findType("List<_Highlight?>"),
      MapEntry_String_Object: findType("MapEntry<String,Object>"),
      MapEntry_String_String: findType("MapEntry<String,String>"),
      MapEntry_of_Object_and_List__Highlight: findType("MapEntry<Object,List<_Highlight>>"),
      MapEntry_of_String_and_List_String: findType("MapEntry<String,List<String>>"),
      MapEntry_of_String_and_nullable_List_String: findType("MapEntry<String,List<String>?>"),
      MapEntry_of_String_and_nullable_Object: findType("MapEntry<String,Object?>"),
      MapEquality_dynamic_dynamic: findType("MapEquality<@,@>"),
      Map_String_Object: findType("Map<String,Object>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_String_and_List_String: findType("Map<String,List<String>>"),
      MappedIterable_String_Frame: findType("MappedIterable<String,Frame>"),
      MappedListIterable_FontFamily_String: findType("MappedListIterable<FontFamily,String>"),
      MappedListIterable_Frame_Frame: findType("MappedListIterable<Frame,Frame>"),
      MappedListIterable_String_Trace: findType("MappedListIterable<String,Trace>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      MarkupRenderObject: findType("MarkupRenderObject"),
      MediaType: findType("MediaType"),
      MimeType: findType("MimeType"),
      NativeTypedArrayOfDouble: findType("NativeTypedArrayOfDouble"),
      NativeTypedArrayOfInt: findType("NativeTypedArrayOfInt"),
      NativeUint8List: findType("NativeUint8List"),
      Node: findType("Node"),
      NodeValidator: findType("NodeValidator"),
      Null: findType("Null"),
      Number: findType("Number"),
      Object: findType("Object"),
      ObserverComponent: findType("ObserverComponent"),
      ObserverElement: findType("ObserverElement"),
      Plugin: findType("Plugin"),
      Project: findType("Project"),
      ProjectCard: findType("ProjectCard"),
      ProxyComponent: findType("ProxyComponent"),
      RawNode: findType("RawNode"),
      Record: findType("Record"),
      Record_0: findType("+()"),
      Record_2_Client_and_HttpServer: findType("+(Client0,HttpServer)"),
      Record_2_int_and_int: findType("+(int,int)"),
      Rectangle_dynamic: findType("Rectangle<@>"),
      Rectangle_num: findType("Rectangle<num>"),
      RegExpMatch: findType("RegExpMatch"),
      RenderAdapter: findType("RenderAdapter"),
      RenderObjectElement: findType("RenderObjectElement"),
      Request: findType("Request"),
      Response: findType("Response"),
      ServerAppBinding: findType("ServerAppBinding"),
      ServiceCard: findType("ServiceCard"),
      ServiceData: findType("ServiceData"),
      SetEquality_dynamic: findType("SetEquality<@>"),
      Set_dynamic: findType("Set<@>"),
      ShelfUnmodifiableMap: findType("ShelfUnmodifiableMap"),
      Sink_List_int: findType("Sink<List<int>>"),
      Sink_String: findType("Sink<String>"),
      Social: findType("Social"),
      Socket: findType("Socket"),
      SourceBuffer: findType("SourceBuffer"),
      SourceLocation: findType("SourceLocation"),
      SourceSpan: findType("SourceSpan"),
      SourceSpanWithContext: findType("SourceSpanWithContext"),
      SpeechGrammar: findType("SpeechGrammar"),
      SpeechRecognitionResult: findType("SpeechRecognitionResult"),
      StackTrace: findType("StackTrace"),
      StatefulComponent: findType("StatefulComponent"),
      StatelessComponent: findType("StatelessComponent"),
      StreamChannel_List_int: findType("StreamChannel<List<int>>"),
      Stream_List_int: findType("Stream<List<int>>"),
      Stream_Uint8List: findType("Stream<Uint8List>"),
      Stream_dynamic: findType("Stream<@>"),
      StreamedResponse: findType("StreamedResponse"),
      String: findType("String"),
      StringBuffer: findType("StringBuffer"),
      StringConversionSink: findType("StringConversionSink"),
      String_Function_FontFamily: findType("String(FontFamily)"),
      String_Function_Match: findType("String(Match)"),
      StyleRule: findType("StyleRule"),
      StyleSheet: findType("StyleSheet"),
      Styles: findType("Styles"),
      TemplateElement: findType("TemplateElement"),
      Text: findType("Text0"),
      TextTrack: findType("TextTrack"),
      TextTrackCue: findType("TextTrackCue"),
      Text_2: findType("Text"),
      Timer: findType("Timer"),
      Touch: findType("Touch"),
      Trace: findType("Trace"),
      Trace_Function_String: findType("Trace(String)"),
      Transform: findType("Transform"),
      TrustedGetRuntimeType: findType("TrustedGetRuntimeType"),
      Type: findType("Type"),
      TypeError: findType("TypeError"),
      Uint16List: findType("Uint16List"),
      Uint32List: findType("Uint32List"),
      Uint8Buffer: findType("Uint8Buffer"),
      Uint8ClampedList: findType("Uint8ClampedList"),
      Uint8List: findType("Uint8List"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      UnmodifiableMapView_String_String: findType("UnmodifiableMapView<String,String>"),
      Uri: findType("Uri"),
      ValueKey_String: findType("ValueKey<String>"),
      WhereIterable_String: findType("WhereIterable<String>"),
      WhereTypeIterable_String: findType("WhereTypeIterable<String>"),
      Work: findType("Work"),
      Zone: findType("Zone"),
      _AsyncCompleter_Socket: findType("_AsyncCompleter<Socket>"),
      _AsyncCompleter_Uint8List: findType("_AsyncCompleter<Uint8List>"),
      _AsyncCompleter_bool: findType("_AsyncCompleter<bool>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _Attr: findType("_Attr"),
      _BytesBuffer: findType("_BytesBuffer"),
      _ConverterStreamEventSink_dynamic_dynamic: findType("_ConverterStreamEventSink<@,@>"),
      _Future_Socket: findType("_Future<Socket>"),
      _Future_String: findType("_Future<String>"),
      _Future_Uint8List: findType("_Future<Uint8List>"),
      _Future_bool: findType("_Future<bool>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_void: findType("_Future<~>"),
      _Highlight: findType("_Highlight"),
      _HttpIncoming: findType("_HttpIncoming"),
      _HttpSession: findType("_HttpSession"),
      _IdentityHashMap_of_nullable_Object_and_nullable_Object: findType("_IdentityHashMap<Object?,Object?>"),
      _Line: findType("_Line"),
      _MapEntry: findType("_MapEntry"),
      _StreamChannel_List_int: findType("_StreamChannel<List<int>>"),
      _StreamControllerAddStreamState_nullable_Object: findType("_StreamControllerAddStreamState<Object?>"),
      _SyncCompleter_String: findType("_SyncCompleter<String>"),
      _SyncCompleter_dynamic: findType("_SyncCompleter<@>"),
      _SyncStarIterable_Component: findType("_SyncStarIterable<Component>"),
      _ZoneFunction_of_void_Function_Zone_ZoneDelegate_Zone_Object_StackTrace: findType("_ZoneFunction<~(Zone,ZoneDelegate,Zone,Object,StackTrace)>"),
      bool: findType("bool"),
      bool_Function_Element: findType("bool(Element)"),
      bool_Function_Frame: findType("bool(Frame)"),
      bool_Function_MarkupRenderObject: findType("bool(MarkupRenderObject)"),
      bool_Function_Object: findType("bool(Object)"),
      bool_Function_String: findType("bool(String)"),
      bool_Function__Highlight: findType("bool(_Highlight)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      dynamic_Function_String: findType("@(String)"),
      int: findType("int"),
      nullable_ChildNode: findType("ChildNode?"),
      nullable_Element: findType("Element?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_Future_dynamic: findType("Future<@>?"),
      nullable_Future_void: findType("Future<~>?"),
      nullable_Gamepad: findType("Gamepad?"),
      nullable_IOOverrides: findType("IOOverrides?"),
      nullable_JSObject: findType("JSObject?"),
      nullable_List_String: findType("List<String>?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_List_int: findType("List<int>?"),
      nullable_Map_String_String: findType("Map<String,String>?"),
      nullable_Map_of_String_and_nullable_Object: findType("Map<String,Object?>?"),
      nullable_Map_of_String_and_void_Function_Event: findType("Map<String,~(Event)>?"),
      nullable_Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>?"),
      nullable_Object: findType("Object?"),
      nullable_Object_Function: findType("Object?()"),
      nullable_Set_Element: findType("Set<Element>?"),
      nullable_StackTrace: findType("StackTrace?"),
      nullable_StackZoneSpecification: findType("StackZoneSpecification?"),
      nullable_String: findType("String?"),
      nullable_String_Function_Match: findType("String(Match)?"),
      nullable_Zone: findType("Zone?"),
      nullable_ZoneDelegate: findType("ZoneDelegate?"),
      nullable_ZoneSpecification: findType("ZoneSpecification?"),
      nullable__DelayedEvent_dynamic: findType("_DelayedEvent<@>?"),
      nullable__FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>?"),
      nullable__Highlight: findType("_Highlight?"),
      nullable__LinkedHashSetCell: findType("_LinkedHashSetCell?"),
      nullable_bool: findType("bool?"),
      nullable_bool_Function_Object: findType("bool(Object)?"),
      nullable_bool_Function_dynamic: findType("bool(@)?"),
      nullable_double: findType("double?"),
      nullable_int: findType("int?"),
      nullable_num: findType("num?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_HttpRequest: findType("~(HttpRequest)?"),
      nullable_void_Function_Uint8List: findType("~(Uint8List)?"),
      nullable_void_Function__HttpIncoming: findType("~(_HttpIncoming)?"),
      nullable_void_Function_dynamic: findType("~(@)?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_$opt_dynamic: findType("~([@])"),
      void_Function_2_String_and_List_String: findType("~(String,List<String>)"),
      void_Function_Element: findType("~(Element)"),
      void_Function_List_int: findType("~(List<int>)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_ServerAppBinding: findType("~(ServerAppBinding)"),
      void_Function_StreamChannel_List_int: findType("~(StreamChannel<List<int>>)"),
      void_Function_String_String: findType("~(String,String)"),
      void_Function_String_dynamic: findType("~(String,@)"),
      void_Function_Timer: findType("~(Timer)"),
      void_Function_int_dynamic: findType("~(int,@)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.BodyElement_methods = A.BodyElement.prototype;
    B.DomImplementation_methods = A.DomImplementation.prototype;
    B.HtmlDocument_methods = A.HtmlDocument.prototype;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.NativeUint32List_methods = A.NativeUint32List.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.AlignItems_center_center = new A.AlignItems("center", "center");
    B.AlignItems_end_end = new A.AlignItems("end", "end");
    B.AlignItems_start_start = new A.AlignItems("start", "start");
    B.AlignSelf_end_end = new A.AlignSelf("end", "end");
    B.AlignSelf_start_start = new A.AlignSelf("start", "start");
    B.AsciiDecoder_false_127 = new A.AsciiDecoder(false, 127);
    B.AsciiEncoder_127 = new A.AsciiEncoder(127);
    B.BorderStyle_solid = new A.BorderStyle("solid");
    B.C__EmptyStream = new A._EmptyStream(A.findType("_EmptyStream<List<int>>"));
    B.ByteStream__EmptyStream = new A.ByteStream(B.C__EmptyStream);
    B.CONSTANT = new A.Instantiation1(A.math__max$closure(), A.findType("Instantiation1<int>"));
    B.C_AsciiCodec = new A.AsciiCodec();
    B.C_BackgroundSize = new A.BackgroundSize();
    B.C_Base64Encoder = new A.Base64Encoder();
    B.C_Base64Codec = new A.Base64Codec();
    B.C_ChunkedCodingDecoder = new A.ChunkedCodingDecoder();
    B.C_CssUtility = new A.CssUtility();
    B.C_Cursor = new A.Cursor0();
    B.C_DefaultEquality = new A.DefaultEquality(A.findType("DefaultEquality<0&>"));
    B.C_DeepCollectionEquality = new A.DeepCollectionEquality();
    B.Object_L21 = {"": 0};
    B.Map_4iZYi = new A.ConstantStringMap(B.Object_L21, ["unset"], type$.ConstantStringMap_String_String);
    B.C_EdgeInsets = new A.EdgeInsets();
    B.C_EmptyIterator = new A.EmptyIterator(A.findType("EmptyIterator<0&>"));
    B.C_GlobalKey = new A.GlobalKey(type$.GlobalKey_State_StatefulComponent);
    B.C_HijackException = new A.HijackException();
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof HTMLElement == "function";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var userAgent = navigator.userAgent;
    if (typeof userAgent != "string") return hooks;
    if (userAgent.indexOf("DumpRenderTree") >= 0) return hooks;
    if (userAgent.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST5 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_Latin1Codec = new A.Latin1Codec();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C_SentinelValue = new A.SentinelValue();
    B.C_SocketOption = new A.SocketOption();
    B.C_TextDecoration = new A.TextDecoration();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.C__DelayedDone = new A._DelayedDone();
    B.FontFamily_gte = new A.FontFamily("'Montserrat'");
    B.FontFamily_EzJ = new A.FontFamily("sans-serif");
    B.List_GVJ = A._setArrayType(makeConstList([B.FontFamily_gte, B.FontFamily_EzJ]), A.findType("JSArray<FontFamily>"));
    B.C__ListFontFamily = new A._ListFontFamily();
    B.C__RootZone = new A._RootZone();
    B.Duration_0 = new A.Duration(0);
    B.Duration_120000000 = new A.Duration(120000000);
    B.FlexDirection_column_column = new A.FlexDirection("column", "column");
    B.FlexDirection_row_row = new A.FlexDirection("row", "row");
    B.FlexWrap_wrap = new A.FlexWrap("wrap");
    B.FontWeight_bold_bold = new A.FontWeight("bold", "bold");
    B.FontWeight_bolder_bolder = new A.FontWeight("bolder", "bolder");
    B.FontWeight_imH = new A.FontWeight("100", "w100");
    B.HtmlEscapeMode_8jw = new A.HtmlEscapeMode("attribute", true, true, false, false);
    B.HtmlEscapeMode_xp6 = new A.HtmlEscapeMode("unknown", true, true, true, true);
    B.HtmlEscape_gMB = new A.HtmlEscape(B.HtmlEscapeMode_xp6);
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null = new A.JsonEncoder(null);
    B.JustifyContent_Db7 = new A.JustifyContent("space-between", "spaceBetween");
    B.JustifyContent_center_center = new A.JustifyContent("center", "center");
    B.JustifyContent_end_end = new A.JustifyContent("end", "end");
    B.JustifyContent_start_start = new A.JustifyContent("start", "start");
    B.Latin1Decoder_false_255 = new A.Latin1Decoder(false, 255);
    B.Latin1Encoder_255 = new A.Latin1Encoder(255);
    B.List_239_191_189 = A._setArrayType(makeConstList([239, 191, 189]), type$.JSArray_int);
    B.List_2Rn = A._setArrayType(makeConstList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]), type$.JSArray_dynamic);
    B.List_5IB = A._setArrayType(makeConstList([48, 13, 10, 13, 10]), type$.JSArray_int);
    B.List_65533 = A._setArrayType(makeConstList([65533]), type$.JSArray_int);
    B.List_72_84_84_80 = A._setArrayType(makeConstList([72, 84, 84, 80]), type$.JSArray_int);
    B.List_Dw9 = A._setArrayType(makeConstList([72, 84, 84, 80, 47, 49, 46, 48]), type$.JSArray_int);
    B.List_H5v = A._setArrayType(makeConstList([false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, true, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]), A.findType("JSArray<bool>"));
    B.List_Sw6 = A._setArrayType(makeConstList([1, 2, 3, 4, 0]), type$.JSArray_int);
    B.List_VDu = A._setArrayType(makeConstList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]), type$.JSArray_dynamic);
    B.List_XJC = A._setArrayType(makeConstList([48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70]), type$.JSArray_int);
    B.List_bhA = A._setArrayType(makeConstList(["(", ")", "<", ">", "@", ",", ";", ":", "\\", '"', "/", "[", "]", "?", "=", "{", "}"]), type$.JSArray_String);
    B.List_empty0 = A._setArrayType(makeConstList([]), type$.JSArray_String);
    B.List_empty = A._setArrayType(makeConstList([]), type$.JSArray_StyleRule);
    B.List_empty1 = A._setArrayType(makeConstList([]), type$.JSArray_int);
    B.List_kXu = A._setArrayType(makeConstList([72, 84, 84, 80, 47, 49, 46]), type$.JSArray_int);
    B.List_mxl = A._setArrayType(makeConstList([72, 84, 84, 80, 47, 49, 46, 49]), type$.JSArray_int);
    B.List_nhL = A._setArrayType(makeConstList([13, 10, 48, 13, 10, 13, 10]), type$.JSArray_int);
    B.List_tEi = A._setArrayType(makeConstList(["HEAD", "AREA", "BASE", "BASEFONT", "BR", "COL", "COLGROUP", "EMBED", "FRAME", "FRAMESET", "HR", "IMAGE", "IMG", "INPUT", "ISINDEX", "LINK", "META", "PARAM", "SOURCE", "STYLE", "TITLE", "WBR"]), type$.JSArray_String);
    B.Object_empty = {};
    B.Map_empty = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<String,List<String>>"));
    B.Map_empty1 = new A.ConstantStringMap(B.Object_empty, [], type$.ConstantStringMap_String_String);
    B.Map_empty0 = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<String,String?>"));
    B.SchedulerPhase_0 = new A.SchedulerPhase("idle");
    B.SchedulerPhase_1 = new A.SchedulerPhase("midFrameCallback");
    B.SchedulerPhase_2 = new A.SchedulerPhase("postFrameCallbacks");
    B.Object_V1h = {area: 0, base: 1, br: 2, col: 3, embed: 4, hr: 5, img: 6, input: 7, link: 8, meta: 9, param: 10, path: 11, source: 12, track: 13, wbr: 14};
    B.Set_yw2Hs = new A.ConstantStringSet(B.Object_V1h, 15, A.findType("ConstantStringSet<String>"));
    B.Symbol__clientToken = new A.Symbol("_clientToken");
    B.Target_blank = new A.Target("blank");
    B.TextAlign_center = new A.TextAlign("center");
    B.Type_AboutMeSection_Dhy = A.typeLiteral("AboutMeSection");
    B.Type_AppButton_6p6 = A.typeLiteral("AppButton");
    B.Type_App_lTH = A.typeLiteral("App");
    B.Type_ByteBuffer_rqD = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_9dB = A.typeLiteral("ByteData");
    B.Type_ContactCard_kTV = A.typeLiteral("ContactCard");
    B.Type_Float32List_9Kz = A.typeLiteral("Float32List");
    B.Type_Float64List_9Kz = A.typeLiteral("Float64List");
    B.Type_Footer_h8E = A.typeLiteral("Footer");
    B.Type_Int16List_s5h = A.typeLiteral("Int16List");
    B.Type_Int32List_O8Z = A.typeLiteral("Int32List");
    B.Type_Int8List_rFV = A.typeLiteral("Int8List");
    B.Type_JSObject_ttY = A.typeLiteral("JSObject");
    B.Type_NavBar_Owu = A.typeLiteral("NavBar");
    B.Type_Object_A4p = A.typeLiteral("Object");
    B.Type_ProjectCard_EaE = A.typeLiteral("ProjectCard");
    B.Type_ServiceCard_cxh = A.typeLiteral("ServiceCard");
    B.Type_String_AXU = A.typeLiteral("String");
    B.Type_Uint16List_kmP = A.typeLiteral("Uint16List");
    B.Type_Uint32List_kmP = A.typeLiteral("Uint32List");
    B.Type_Uint8ClampedList_04U = A.typeLiteral("Uint8ClampedList");
    B.Type_Uint8List_8Eb = A.typeLiteral("Uint8List");
    B.Type__WrappingDomComponent_kh6 = A.typeLiteral("_WrappingDomComponent");
    B.Utf8Decoder_false = new A.Utf8Decoder(false);
    B.Utf8Decoder_true = new A.Utf8Decoder(true);
    B.C__ZeroUnit = new A._ZeroUnit();
    B._AllEdgeInsets__ZeroUnit = new A._AllEdgeInsets(B.C__ZeroUnit);
    B._ElementLifecycle_0 = new A._ElementLifecycle("initial");
    B._ElementLifecycle_1 = new A._ElementLifecycle("active");
    B._ElementLifecycle_2 = new A._ElementLifecycle("inactive");
    B._ElementLifecycle_3 = new A._ElementLifecycle("defunct");
    B.Map_empty2 = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<String,Object>"));
    B._EmptyShelfUnmodifiableMap_Map_empty = new A._EmptyShelfUnmodifiableMap(B.Map_empty2);
    B._HexColor_9DR = new A._HexColor("#C0392B");
    B._HexColor_UYp = new A._HexColor("#212121");
    B._NamedColor_black = new A._NamedColor("black");
    B._NamedColor_lightGrey = new A._NamedColor("lightGrey");
    B._NamedColor_transparent = new A._NamedColor("transparent");
    B._NamedColor_white = new A._NamedColor("white");
    B._State_body_body = new A._State("body", "body");
    B._State_boundary_boundary = new A._State("boundary", "boundary");
    B._State_end_end = new A._State("end", "end");
    B._State_epa = new A._State("body before LF", "bodyBeforeLF");
    B._State_g4R = new A._State("end before LF", "endBeforeLF");
    B._State_gme = new A._State("size before LF", "sizeBeforeLF");
    B._State_size_size = new A._State("size", "size");
    B._State_w3s = new A._State("end before CR", "endBeforeCR");
    B._State_zTP = new A._State("body before CR", "bodyBeforeCR");
    B._StringStackTrace_OdL = new A._StringStackTrace("");
    B._ZoneFunction_KjJ = new A._ZoneFunction(B.C__RootZone, A.async___rootHandleUncaughtError$closure(), type$._ZoneFunction_of_void_Function_Zone_ZoneDelegate_Zone_Object_StackTrace);
    B._ZoneFunction_PAY = new A._ZoneFunction(B.C__RootZone, A.async___rootCreatePeriodicTimer$closure(), A.findType("_ZoneFunction<Timer(Zone,ZoneDelegate,Zone,Duration,~(Timer))>"));
    B._ZoneFunction_Xkh = new A._ZoneFunction(B.C__RootZone, A.async___rootRegisterUnaryCallback$closure(), A.findType("_ZoneFunction<0^(1^)(Zone,ZoneDelegate,Zone,0^(1^))<Object?,Object?>>"));
    B._ZoneFunction__RootZone__rootCreateTimer = new A._ZoneFunction(B.C__RootZone, A.async___rootCreateTimer$closure(), A.findType("_ZoneFunction<Timer(Zone,ZoneDelegate,Zone,Duration,~())>"));
    B._ZoneFunction__RootZone__rootErrorCallback = new A._ZoneFunction(B.C__RootZone, A.async___rootErrorCallback$closure(), A.findType("_ZoneFunction<AsyncError?(Zone,ZoneDelegate,Zone,Object,StackTrace?)>"));
    B._ZoneFunction__RootZone__rootFork = new A._ZoneFunction(B.C__RootZone, A.async___rootFork$closure(), A.findType("_ZoneFunction<Zone(Zone,ZoneDelegate,Zone,ZoneSpecification?,Map<Object?,Object?>?)>"));
    B._ZoneFunction__RootZone__rootPrint = new A._ZoneFunction(B.C__RootZone, A.async___rootPrint$closure(), A.findType("_ZoneFunction<~(Zone,ZoneDelegate,Zone,String)>"));
    B._ZoneFunction__RootZone__rootRegisterCallback = new A._ZoneFunction(B.C__RootZone, A.async___rootRegisterCallback$closure(), A.findType("_ZoneFunction<0^()(Zone,ZoneDelegate,Zone,0^())<Object?>>"));
    B._ZoneFunction__RootZone__rootRun = new A._ZoneFunction(B.C__RootZone, A.async___rootRun$closure(), A.findType("_ZoneFunction<0^(Zone,ZoneDelegate,Zone,0^())<Object?>>"));
    B._ZoneFunction__RootZone__rootRunBinary = new A._ZoneFunction(B.C__RootZone, A.async___rootRunBinary$closure(), A.findType("_ZoneFunction<0^(Zone,ZoneDelegate,Zone,0^(1^,2^),1^,2^)<Object?,Object?,Object?>>"));
    B._ZoneFunction__RootZone__rootRunUnary = new A._ZoneFunction(B.C__RootZone, A.async___rootRunUnary$closure(), A.findType("_ZoneFunction<0^(Zone,ZoneDelegate,Zone,0^(1^),1^)<Object?,Object?>>"));
    B._ZoneFunction__RootZone__rootScheduleMicrotask = new A._ZoneFunction(B.C__RootZone, A.async___rootScheduleMicrotask$closure(), A.findType("_ZoneFunction<~(Zone,ZoneDelegate,Zone,~())>"));
    B._ZoneFunction_e9o = new A._ZoneFunction(B.C__RootZone, A.async___rootRegisterBinaryCallback$closure(), A.findType("_ZoneFunction<0^(1^,2^)(Zone,ZoneDelegate,Zone,0^(1^,2^))<Object?,Object?,Object?>>"));
  })();
  (function staticFields() {
    $._nextServiceId = 1;
    $._HttpServer__servers = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, A.findType("_HttpServer"));
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.toStringVisiting = A._setArrayType([], type$.JSArray_Object);
    $.printToZone = null;
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._Record__computedFieldKeys = A._setArrayType([], A.findType("JSArray<List<Object>?>"));
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._RootZone__rootDelegate = null;
    $.Uri__cachedBaseString = "";
    $.Uri__cachedBaseUri = null;
    $.Element__parseDocument = null;
    $.Element__parseRange = null;
    $.Element__defaultSanitizer = null;
    $._Html5NodeValidator__attributeValidators = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Function);
    $._Platform__environmentCache = null;
    $.AttachAdapter__registered = false;
    $.Jaspr__options = null;
    $.Jaspr__useIsolates = true;
    $.ComponentsBinding__globalKeyRegistry = A.LinkedHashMap_LinkedHashMap$_empty(type$.GlobalKey_State_StatefulComponent, type$.Element_2);
    $.Element__nextHashCode = 1;
    $.ServerApp__runLock = null;
    $.ServerApp__server = null;
    $.ServerApp__client = null;
    $._currentUriBase = null;
    $._current = null;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "ContentType_text", "$get$ContentType_text", () => A._ContentType$("text", "plain", "utf-8", B.Map_empty0));
    _lazyFinal($, "_digitsValidator", "$get$_digitsValidator", () => A.RegExp_RegExp("^\\d+$", false));
    _lazyFinal($, "_CopyingBytesBuilder__emptyList", "$get$_CopyingBytesBuilder__emptyList", () => A.NativeUint8List_NativeUint8List(0));
    _lazyFinal($, "_HttpConnection__connections", "$get$_HttpConnection__connections", () => A.HashMap_HashMap(null, null, null, type$.int, A.findType("_HttpConnection")));
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "_CopyingBytesBuilder__emptyList0", "$get$_CopyingBytesBuilder__emptyList0", () => A.NativeUint8List_NativeUint8List(0));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1$1(new A.nullFuture_closure(), A.findType("Future<~>")));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => $.$get$nullFuture());
    _lazyFinal($, "_RootZone__rootMap", "$get$_RootZone__rootMap", () => {
      var t1 = type$.dynamic;
      return A.HashMap_HashMap(null, null, null, t1, t1);
    });
    _lazyFinal($, "_Utf8Decoder__reusableBuffer", "$get$_Utf8Decoder__reusableBuffer", () => A.NativeUint8List_NativeUint8List(4096));
    _lazyFinal($, "_Utf8Decoder__decoder", "$get$_Utf8Decoder__decoder", () => new A._Utf8Decoder__decoder_closure().call$0());
    _lazyFinal($, "_Utf8Decoder__decoderNonfatal", "$get$_Utf8Decoder__decoderNonfatal", () => new A._Utf8Decoder__decoderNonfatal_closure().call$0());
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazyFinal($, "Encoding__nameToEncoding", "$get$Encoding__nameToEncoding", () => A.LinkedHashMap_LinkedHashMap$_literal(["iso_8859-1:1987", B.C_Latin1Codec, "iso-ir-100", B.C_Latin1Codec, "iso_8859-1", B.C_Latin1Codec, "iso-8859-1", B.C_Latin1Codec, "latin1", B.C_Latin1Codec, "l1", B.C_Latin1Codec, "ibm819", B.C_Latin1Codec, "cp819", B.C_Latin1Codec, "csisolatin1", B.C_Latin1Codec, "iso-ir-6", B.C_AsciiCodec, "ansi_x3.4-1968", B.C_AsciiCodec, "ansi_x3.4-1986", B.C_AsciiCodec, "iso_646.irv:1991", B.C_AsciiCodec, "iso646-us", B.C_AsciiCodec, "us-ascii", B.C_AsciiCodec, "us", B.C_AsciiCodec, "ibm367", B.C_AsciiCodec, "cp367", B.C_AsciiCodec, "csascii", B.C_AsciiCodec, "ascii", B.C_AsciiCodec, "csutf8", B.C_Utf8Codec, "utf-8", B.C_Utf8Codec], type$.String, A.findType("Encoding")));
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => A.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", false));
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_A4p));
    _lazyFinal($, "_Html5NodeValidator__allowedElements", "$get$_Html5NodeValidator__allowedElements", () => A.LinkedHashSet_LinkedHashSet$from(["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"], type$.String));
    _lazyFinal($, "_ioOverridesToken", "$get$_ioOverridesToken", () => new A.Object());
    _lazyFinal($, "Platform_operatingSystem", "$get$Platform_operatingSystem", () => A._Platform_operatingSystem());
    _lazyFinal($, "Platform_isWindows", "$get$Platform_isWindows", () => {
      $.$get$Platform_operatingSystem();
      return false;
    });
    _lazyFinal($, "_stderr", "$get$_stderr", () => A._StdIOUtils__getStdioOutputStream(2));
    _lazyFinal($, "AppState_styles", "$get$AppState_styles", () => A._setArrayType([B.C_CssUtility.call$2(".main", A._setArrayType([B.C_CssUtility.call$1("p").text$1$color(0, B._NamedColor_white), B.C_CssUtility.call$1("a").text$1$color(0, B._NamedColor_white), B.C_CssUtility.call$1("h1").text$1$color(0, B._NamedColor_white), B.C_CssUtility.call$1("h2").text$1$color(0, B._NamedColor_white), B.C_CssUtility.call$1("span").text$1$color(0, B._NamedColor_white)], type$.JSArray_StyleRule))], A.findType("JSArray<NestedStyleRule>")));
    _lazyFinal($, "AppButton_styles", "$get$AppButton_styles", () => {
      var t1 = B.C_CssUtility.call$1(".app-button"),
        t2 = A.UnitExt_get_px(100),
        t3 = A._AllEdgeInsets$(A.UnitExt_get_px(10)),
        t4 = A._CircularBorderRadius$(A.UnitExt_get_px(6));
      return A._setArrayType([t1.box$4$border$padding$radius$width(new A._AllBorder(new A.BorderSide(B._HexColor_9DR, A.UnitExt_get_px(1))), t3, t4, t2).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_center_center).text$1$decoration(0, B.C_TextDecoration).background$1$color(0, B._NamedColor_transparent), B.C_CssUtility.call$1(".app-button:hover").background$1$color(0, B._HexColor_9DR).box$2$cursor$transition(B.C_Cursor, A._Transition$("background-color", 500)), B.C_CssUtility.call$1(".label").text$1$fontSize(0, A.UnitExt_get_px(12))], type$.JSArray_StyleRule);
    });
    _lazyFinal($, "ContactCard_styles", "$get$ContactCard_styles", () => {
      var t1 = B.C_CssUtility.call$1(".contact-card").text$1$decoration(0, B.C_TextDecoration).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_column_column, B.JustifyContent_center_center),
        t2 = A.UnitExt_get_px(300),
        t3 = A.UnitExt_get_px(150),
        t4 = A._AllEdgeInsets$(A.UnitExt_get_px(15)),
        t5 = A._CircularBorderRadius$(A.UnitExt_get_px(12)),
        t6 = A.UnitExt_get_px(25);
      t2 = t1.box$5$height$margin$padding$radius$width(t3, A._QuadEdgeInsets$only(null, A.UnitExt_get_px(15), A.UnitExt_get_px(15), t6), t4, t5, t2).background$1$color(0, B._HexColor_UYp);
      t5 = B.C_CssUtility.call$1(".contact-card:hover");
      t4 = A.UnitExt_get_px(0);
      t6 = A.UnitExt_get_px(0);
      return A._setArrayType([t2, t5.box$2$shadow$transition(A._BoxShadow$(A.UnitExt_get_px(8), B._HexColor_9DR, t4, t6, A.UnitExt_get_px(2)), A._Transition$("box-shadow", 500)), B.C_CssUtility.call$1(".c-icon").text$2$color$fontSize(0, B._HexColor_9DR, A.UnitExt_get_px(50)), B.C_CssUtility.call$1(".c-title").text$2$color$fontSize(0, B._HexColor_9DR, A.UnitExt_get_px(15)).box$1$margin(A._SymmetricEdgeInsets$(null, A.UnitExt_get_px(15))), B.C_CssUtility.call$1(".c-description").text$1$fontSize(0, A.UnitExt_get_px(12))], type$.JSArray_StyleRule);
    });
    _lazyFinal($, "Footer_styles", "$get$Footer_styles", () => {
      var _null = null;
      return A._setArrayType([B.C_CssUtility.call$1(".foot").flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_center_center).box$1$padding(A._SymmetricEdgeInsets$(_null, A.UnitExt_get_vh(2))).text$1$fontSize(0, A.UnitExt_get_px(12)), B.C_CssUtility.call$1(".tech-name").text$2$decoration$fontSize(0, B.C_TextDecoration, A.UnitExt_get_px(12)).box$1$margin(A._QuadEdgeInsets$only(_null, A.UnitExt_get_px(5), _null, _null))], type$.JSArray_StyleRule);
    });
    _lazyFinal($, "NavBar_styles", "$get$NavBar_styles", () => A._setArrayType([B.C_CssUtility.call$1(".navbar").box$1$padding(A._AllEdgeInsets$(A.UnitExt_get_px(25))).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_Db7).background$1$color(0, B._NamedColor_black), B.C_CssUtility.call$1(".navbar-label").box$1$padding(A._QuadEdgeInsets$only(null, null, A.UnitExt_get_px(35), null)).text$2$decoration$fontSize(0, B.C_TextDecoration, A.UnitExt_get_px(12)).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_Db7), B.C_CssUtility.call$1(".navbar-label:hover").text$1$color(0, B._HexColor_9DR).box$1$transition(A._Transition$("color", 500)), B.C_CssUtility.call$1(".labels").flexbox$2$direction$justifyContent(B.FlexDirection_row_row, B.JustifyContent_end_end), B.C_CssUtility.call$1(".brand").text$2$fontFamily$fontSize(0, A.FontFamily$("Agustina"), A.UnitExt_get_px(24))], type$.JSArray_StyleRule));
    _lazyFinal($, "ProjectCard_styles", "$get$ProjectCard_styles", () => {
      var _null = null,
        _s13_ = ".banner-image",
        t1 = B.C_CssUtility.call$1(".banner-card").flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_column_column, B.JustifyContent_center_center),
        t2 = A.UnitExt_get_px(200),
        t3 = A.UnitExt_get_px(350),
        t4 = A._CircularBorderRadius$(A.UnitExt_get_px(12)),
        t5 = A.UnitExt_get_px(25);
      t3 = t1.box$4$height$margin$radius$width(t2, A._QuadEdgeInsets$only(_null, A.UnitExt_get_px(15), A.UnitExt_get_px(15), t5), t4, t3).background$1$color(0, B._HexColor_UYp).text$1$decoration(0, B.C_TextDecoration);
      t4 = B.C_CssUtility.call$1(".banner-card:hover");
      t5 = A.UnitExt_get_px(0);
      t2 = A.UnitExt_get_px(0);
      t2 = t4.box$3$cursor$shadow$transition(B.C_Cursor, A._BoxShadow$(A.UnitExt_get_px(8), B._HexColor_9DR, t5, t2, A.UnitExt_get_px(2)), A._Transition$("box-shadow", 500));
      t5 = B.C_CssUtility.call$1(_s13_).box$2$height$width(A.UnitExt_get_px(200), A.UnitExt_get_px(350));
      t4 = B.C_CssUtility.call$1(".service-description").text$2$align$fontSize(0, B.TextAlign_center, A.UnitExt_get_px(12));
      t1 = A._SymmetricEdgeInsets$(A.UnitExt_get_px(10), _null);
      return A._setArrayType([t3, t2, t5, t4.box$2$margin$padding(A._QuadEdgeInsets$only(_null, _null, _null, A.UnitExt_get_px(10)), t1), B.C_CssUtility.call$1(_s13_).box$3$opacity$position$radius(1, new A._Positioned("absolute"), A._CircularBorderRadius$(A.UnitExt_get_px(12))), B.C_CssUtility.call$1(".banner-image:hover").box$2$opacity$transition(0, A._Transition$("opacity", 500))], type$.JSArray_StyleRule);
    });
    _lazyFinal($, "ServiceCard_styles", "$get$ServiceCard_styles", () => {
      var _null = null,
        t1 = B.C_CssUtility.call$1(".service-card").flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_column_column, B.JustifyContent_center_center),
        t2 = A._AllEdgeInsets$(A.UnitExt_get_px(15)),
        t3 = A.UnitExt_get_px(200),
        t4 = A.UnitExt_get_px(250),
        t5 = A._CircularBorderRadius$(A.UnitExt_get_px(12)),
        t6 = A.UnitExt_get_px(25);
      t4 = t1.box$5$height$margin$padding$radius$width(t3, A._QuadEdgeInsets$only(_null, A.UnitExt_get_px(15), A.UnitExt_get_px(15), t6), t2, t5, t4).background$1$color(0, B._HexColor_UYp);
      t5 = B.C_CssUtility.call$1(".service-title").text$1$fontSize(0, A.UnitExt_get_px(14)).box$1$margin(A._QuadEdgeInsets$only(_null, _null, _null, A.UnitExt_get_px(10)));
      t2 = B.C_CssUtility.call$1(".service-card:hover");
      t6 = A.UnitExt_get_px(0);
      t3 = A.UnitExt_get_px(0);
      return A._setArrayType([t4, t5, t2.box$2$shadow$transition(A._BoxShadow$(A.UnitExt_get_px(8), B._HexColor_9DR, t6, t3, A.UnitExt_get_px(2)), A._Transition$("box-shadow", 500))], type$.JSArray_StyleRule);
    });
    _lazyFinal($, "defaultJasprOptions", "$get$defaultJasprOptions", () => A.JasprOptions$(A.LinkedHashMap_LinkedHashMap$_literal([B.Type_App_lTH, A.ClientTarget$("app", null, A.findType("App")), B.Type_AppButton_6p6, A.ClientTarget$("components/app_button", A.jaspr_options___prefix0AppButton$closure(), type$.AppButton), B.Type_ContactCard_kTV, A.ClientTarget$("components/contact", A.jaspr_options___prefix1ContactCard$closure(), type$.ContactCard), B.Type_Footer_h8E, A.ClientTarget$("components/footer", null, A.findType("Footer")), B.Type_NavBar_Owu, A.ClientTarget$("components/nav_bar", null, A.findType("NavBar")), B.Type_ProjectCard_EaE, A.ClientTarget$("components/project_card", A.jaspr_options___prefix4ProjectCard$closure(), type$.ProjectCard), B.Type_ServiceCard_cxh, A.ClientTarget$("components/service_card", A.jaspr_options___prefix5ServiceCard$closure(), type$.ServiceCard), B.Type_AboutMeSection_Dhy, A.ClientTarget$("sections/about_me", A.jaspr_options___prefix7AboutMeSection$closure(), type$.AboutMeSection)], type$.Type, A.findType("ClientTarget<Component>")), new A.defaultJasprOptions_closure()));
    _lazyFinal($, "_privateConstructorUsedError", "$get$_privateConstructorUsedError0", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError0", "$get$_privateConstructorUsedError1", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError1", "$get$_privateConstructorUsedError2", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError2", "$get$_privateConstructorUsedError", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError3", "$get$_privateConstructorUsedError3", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError4", "$get$_privateConstructorUsedError4", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError5", "$get$_privateConstructorUsedError6", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "_privateConstructorUsedError6", "$get$_privateConstructorUsedError5", () => A.UnsupportedError$(string$.It_see));
    _lazyFinal($, "Home_styles", "$get$Home_styles", () => A._setArrayType([B.C_CssUtility.call$1(".home-body").box$1$width(A.UnitExt_get_vw(100)).background$1$color(0, B._NamedColor_black)], type$.JSArray_StyleRule));
    _lazyFinal($, "AboutMeSection_styles", "$get$AboutMeSection_styles", () => {
      var t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27,
        _s17_ = ".about-me-section",
        _s19_ = ".about-section-body",
        _null = null,
        _s16_ = ".profile-picture",
        _s14_ = ".about-details",
        t1 = B.C_CssUtility.call$1(_s17_).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_column_column, B.JustifyContent_start_start).box$1$width(A.UnitExt_get_percent(100)),
        t2 = B.C_CssUtility.call$1(".play-icon").text$1$color(0, B._HexColor_9DR),
        t3 = B.C_CssUtility.call$1(".title").text$3$fontFamily$fontSize$fontWeight(0, A.FontFamily$("Montserrat"), A.UnitExt_get_px(40), B.FontWeight_imH),
        t4 = B.C_CssUtility.call$1(_s19_).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_center_center).box$2$margin$width(A._QuadEdgeInsets$only(_null, _null, _null, A.UnitExt_get_px(50)), A.UnitExt_get_percent(100)),
        t5 = B.C_CssUtility.call$1(_s16_).background$2$image$size(0, A.ImageStyle$url("images/photos/colored.png"), B.C_BackgroundSize),
        t6 = A.UnitExt_get_px(700),
        t7 = A.UnitExt_get_px(450);
      t7 = t5.box$3$height$margin$width(t6, A._QuadEdgeInsets$only(_null, _null, A.UnitExt_get_px(100), _null), t7);
      t6 = B.C_CssUtility.call$1(_s14_).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_start_start, B.FlexDirection_column_column, B.JustifyContent_center_center).box$1$width(A.UnitExt_get_px(750));
      t5 = B.C_CssUtility.call$1(".intro-label").text$1$fontSize(0, A.UnitExt_get_px(18));
      t8 = B.C_CssUtility.call$1(".intro-heading").box$1$margin(A._SymmetricEdgeInsets$(_null, A.UnitExt_get_px(15))).text$1$fontSize(0, A.UnitExt_get_px(20));
      t9 = B.C_CssUtility.call$1(".intro-details").text$3$color$lineHeight$wordSpacing(0, B._NamedColor_lightGrey, A.UnitExt_get_vh(3), A.UnitExt_get_px(1.5));
      t10 = B.C_CssUtility.call$1(".divider");
      t11 = A.UnitExt_get_px(1);
      t12 = A.UnitExt_get_percent(100);
      t12 = t10.box$3$height$margin$width(t11, A._SymmetricEdgeInsets$(_null, A.UnitExt_get_vh(2)), t12).background$1$color(0, B._NamedColor_lightGrey);
      t11 = B.C_CssUtility.call$1(".tech-label").text$1$fontSize(0, A.UnitExt_get_px(12));
      t10 = B.C_CssUtility.call$1(".tech-stack").flexbox$4$alignItems$direction$justifyContent$wrap(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_start_start, B.FlexWrap_wrap).box$1$margin(A._QuadEdgeInsets$only(_null, _null, _null, A.UnitExt_get_px(15)));
      t13 = B.C_CssUtility.call$1(".tech-item");
      t14 = A.UnitExt_get_px(12);
      t14 = t13.box$1$margin(A._QuadEdgeInsets$only(_null, A.UnitExt_get_px(5), t14, _null)).text$1$fontSize(0, A.UnitExt_get_px(14));
      t13 = B.C_CssUtility.call$1(".personal-label").text$2$fontSize$fontWeight(0, A.UnitExt_get_px(12), B.FontWeight_bold_bold);
      t15 = B.C_CssUtility.call$1(".personal-value").text$1$fontSize(0, A.UnitExt_get_px(12));
      t16 = B.C_CssUtility.call$1(".personal-row").box$1$width(A.UnitExt_get_percent(100)).flexbox$2$direction$justifyContent(B.FlexDirection_row_row, B.JustifyContent_Db7);
      t17 = B.C_CssUtility.call$1(".work-row").box$1$width(A.UnitExt_get_percent(100)).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_Db7);
      t18 = A._MediaRuleQuery$screen(A.UnitExt_get_px(1350));
      t19 = B.C_CssUtility.call$1(_s16_);
      t20 = A.UnitExt_get_percent(100);
      t21 = type$.JSArray_StyleRule;
      t22 = type$.List_StyleRule;
      t20 = A.MediaStyleRule$(t18, t22._as(A._setArrayType([t19.box$2$margin$maxHeight(A._SymmetricEdgeInsets$(A.UnitExt_get_px(50), _null), t20), B.C_CssUtility.call$1(_s14_).box$1$width(A.UnitExt_get_vw(45))], t21)));
      t19 = A._MediaRuleQuery$screen(A.UnitExt_get_px(1100));
      t18 = B.C_CssUtility.call$1(_s16_);
      t23 = A.UnitExt_get_percent(80);
      t24 = A.UnitExt_get_px(400);
      t24 = A.MediaStyleRule$(t19, t22._as(A._setArrayType([t18.box$3$margin$maxHeight$width(A._SymmetricEdgeInsets$(A.UnitExt_get_px(30), _null), t23, t24), B.C_CssUtility.call$1(_s14_).box$1$width(A.UnitExt_get_vw(45))], t21)));
      t23 = A._MediaRuleQuery$screen(A.UnitExt_get_px(900));
      t18 = B.C_CssUtility.call$1(_s17_);
      t19 = A.UnitExt_get_vh(3);
      t19 = t18.box$1$padding(A._QuadEdgeInsets$only(_null, _null, A.UnitExt_get_vw(0), t19));
      t18 = B.C_CssUtility.call$1(_s19_).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_column_column, B.JustifyContent_start_start);
      t25 = B.C_CssUtility.call$1(_s16_).background$2$image$size(0, A.ImageStyle$url("images/photos/mobile.png"), B.C_BackgroundSize);
      t26 = A.UnitExt_get_px(250);
      t26 = t25.box$2$height$width(A.UnitExt_get_px(250), t26);
      t25 = B.C_CssUtility.call$1(_s14_);
      t27 = A.UnitExt_get_percent(80);
      return A._setArrayType([t1, t2, t3, t4, t7, t6, t5, t8, t9, t12, t11, t10, t14, t13, t15, t16, t17, t20, t24, A.MediaStyleRule$(t23, t22._as(A._setArrayType([t19, t18, t26, t25.box$2$margin$width(A._QuadEdgeInsets$only(_null, _null, _null, A.UnitExt_get_px(40)), t27)], t21)))], t21);
    });
    _lazyFinal($, "BasicInfoSection_styles", "$get$BasicInfoSection_styles", () => {
      var _s13_ = ".info-section",
        _null = null,
        _s13_0 = ".welcome-text",
        _s10_ = "Montserrat",
        _s11_ = ".first-name",
        _s11_0 = "PoppinsBold",
        _s10_0 = ".last-name",
        _s11_1 = ".main-image",
        _s10_1 = ".play-icon",
        _s18_ = ".dynamic-subtitles",
        t1 = B.C_CssUtility.call$1(_s13_).flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_Db7).box$1$padding(A._QuadEdgeInsets$only(_null, A.UnitExt_get_vw(10), _null, _null)),
        t2 = B.C_CssUtility.call$1(".welcome").box$1$margin(A._QuadEdgeInsets$only(A.UnitExt_get_vh(2.5), _null, _null, _null)).flexbox$1$alignItems(B.AlignItems_end_end),
        t3 = B.C_CssUtility.call$1(_s13_0),
        t4 = A.UnitExt_get_px(12),
        t5 = type$.JSArray_StyleRule,
        t6 = type$.List_StyleRule;
      return A._setArrayType([t1, t2, t3.box$1$padding(A._QuadEdgeInsets$only(A.UnitExt_get_px(2), _null, t4, _null)).text$2$fontFamily$fontSize(0, A.FontFamily$(_s10_), A.UnitExt_get_px(20)), B.C_CssUtility.call$1(_s11_).box$1$padding(A._QuadEdgeInsets$only(_null, _null, _null, A.UnitExt_get_vh(3))).text$3$fontFamily$fontWeight$lineHeight(0, A.FontFamily$(_s10_), B.FontWeight_imH, A.UnitExt_get_vh(3)), A.FontFaceStyleRule$(_s11_0, _null, "/fonts/poppins/Poppins-Bold.ttf"), B.C_CssUtility.call$1(_s10_0).text$2$fontFamily$fontWeight(0, A.FontFamily$(_s11_0), B.FontWeight_bolder_bolder), B.C_CssUtility.call$1(_s11_1).box$2$height$width(A.UnitExt_get_vh(85), A.UnitExt_get_vh(75)).background$2$image$size(0, A.ImageStyle$url("images/photos/black-white.png"), B.C_BackgroundSize), B.C_CssUtility.call$1(_s10_1).text$1$color(0, B._HexColor_9DR), B.C_CssUtility.call$1(".subtitle").flexbox$2$alignItems$direction(B.AlignItems_center_center, B.FlexDirection_row_row), B.C_CssUtility.call$1(_s18_).box$1$margin(A._QuadEdgeInsets$only(_null, A.UnitExt_get_px(15), _null, _null)).text$1$fontSize(0, A.UnitExt_get_px(18)), B.C_CssUtility.call$1(".socials").box$1$padding(A._QuadEdgeInsets$only(_null, _null, _null, A.UnitExt_get_vh(2))).flexbox$2$alignItems$direction(B.AlignItems_center_center, B.FlexDirection_row_row), B.C_CssUtility.call$1(".social-icon").text$2$color$fontSize(0, B._NamedColor_white, A.UnitExt_get_px(25)).box$1$padding(A._QuadEdgeInsets$only(_null, _null, A.UnitExt_get_px(25), _null)), B.C_CssUtility.call$1(".social-icon:hover").text$1$color(0, B._HexColor_9DR).box$1$transition(A._Transition$("color", 300)), A.MediaStyleRule$(A._MediaRuleQuery$screen(A.UnitExt_get_px(1100)), t6._as(A._setArrayType([B.C_CssUtility.call$1(_s13_0).text$1$fontSize(0, A.UnitExt_get_px(15)), B.C_CssUtility.call$1(_s11_).text$1$fontSize(0, A.UnitExt_get_px(50)), B.C_CssUtility.call$1(_s10_0).text$1$fontSize(0, A.UnitExt_get_px(50)), B.C_CssUtility.call$1(_s18_).text$1$fontSize(0, A.UnitExt_get_px(14)), B.C_CssUtility.call$1(_s11_1).box$2$height$width(A.UnitExt_get_vh(65), A.UnitExt_get_vh(55)), B.C_CssUtility.call$1(_s10_1).box$1$height(A.UnitExt_get_px(15))], t5))), A.MediaStyleRule$(A._MediaRuleQuery$screen(A.UnitExt_get_px(786)), t6._as(A._setArrayType([B.C_CssUtility.call$1(_s13_).flexbox$1$direction(B.FlexDirection_column_column), B.C_CssUtility.call$1(_s11_1).box$2$height$width(A.UnitExt_get_vh(55), A.UnitExt_get_vh(45)).flexItem$1$alignSelf(B.AlignSelf_end_end), B.C_CssUtility.call$1(".info").flexItem$1$alignSelf(B.AlignSelf_start_start)], t5)))], t5);
    });
    _lazyFinal($, "ContactSection_styles", "$get$ContactSection_styles", () => {
      var t1 = B.C_CssUtility.call$1(".contact-section").flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_column_column, B.JustifyContent_start_start),
        t2 = A.UnitExt_get_vh(5);
      return A._setArrayType([t1.box$1$padding(A._SymmetricEdgeInsets$(A.UnitExt_get_vw(10), t2)), B.C_CssUtility.call$1(".contact-body").flexbox$4$alignItems$direction$justifyContent$wrap(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_center_center, B.FlexWrap_wrap).box$2$margin$width(A._QuadEdgeInsets$only(null, null, null, A.UnitExt_get_px(50)), A.UnitExt_get_percent(100))], type$.JSArray_StyleRule);
    });
    _lazyFinal($, "ProjectsSections_styles", "$get$ProjectsSections_styles", () => {
      var t1 = B.C_CssUtility.call$1(".projects-section").flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_column_column, B.JustifyContent_start_start),
        t2 = A.UnitExt_get_vh(5);
      return A._setArrayType([t1.box$1$padding(A._SymmetricEdgeInsets$(A.UnitExt_get_vw(10), t2)), B.C_CssUtility.call$1(".section-body-projects").flexbox$4$alignItems$direction$justifyContent$wrap(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_center_center, B.FlexWrap_wrap).box$2$margin$width(A._QuadEdgeInsets$only(null, null, null, A.UnitExt_get_px(50)), A.UnitExt_get_percent(100))], type$.JSArray_StyleRule);
    });
    _lazyFinal($, "ServicesSection_styles", "$get$ServicesSection_styles", () => {
      var _null = null;
      return A._setArrayType([B.C_CssUtility.call$1(".services-section").flexbox$3$alignItems$direction$justifyContent(B.AlignItems_center_center, B.FlexDirection_column_column, B.JustifyContent_start_start).box$1$padding(A._SymmetricEdgeInsets$(_null, A.UnitExt_get_vh(5))), B.C_CssUtility.call$1(".section-body").flexbox$4$alignItems$direction$justifyContent$wrap(B.AlignItems_center_center, B.FlexDirection_row_row, B.JustifyContent_center_center, B.FlexWrap_wrap).box$2$margin$width(A._QuadEdgeInsets$only(_null, _null, _null, A.UnitExt_get_px(50)), A.UnitExt_get_percent(100))], type$.JSArray_StyleRule);
    });
    _lazyFinal($, "BaseRequest__tokenRE", "$get$BaseRequest__tokenRE", () => A.RegExp_RegExp("^[\\w!#%&'*+\\-.^`|~]+$", false));
    _lazyFinal($, "_escapedChar", "$get$_escapedChar", () => A.RegExp_RegExp('["\\x00-\\x1F\\x7F]', false));
    _lazyFinal($, "token", "$get$token", () => A.RegExp_RegExp('[^()<>@,;:"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+', false));
    _lazyFinal($, "_lws", "$get$_lws", () => A.RegExp_RegExp("(?:\\r\\n)?[ \\t]+", false));
    _lazyFinal($, "_quotedString", "$get$_quotedString", () => A.RegExp_RegExp('"(?:[^"\\x00-\\x1F\\x7F\\\\]|\\\\.)*"', false));
    _lazyFinal($, "_quotedPair", "$get$_quotedPair", () => A.RegExp_RegExp("\\\\(.)", false));
    _lazyFinal($, "nonToken", "$get$nonToken", () => A.RegExp_RegExp('[()<>@,;:"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]', false));
    _lazyFinal($, "whitespace", "$get$whitespace", () => A.RegExp_RegExp("(?:" + $.$get$_lws().pattern + ")*", false));
    _lazy($, "AttachAdapter_instance", "$get$AttachAdapter_instance", () => new A.AttachAdapter(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("+attributes,children(Map<String,String>,List<+(ChildListRange,int)>)"))));
    _lazy($, "_asyncBuildLocks", "$get$_asyncBuildLocks", () => new A.Expando(new WeakMap(), A.findType("Expando<TaskChain>")));
    _lazyFinal($, "DomValidator__attributeRegExp", "$get$DomValidator__attributeRegExp", () => A.RegExp_RegExp("^[a-z](?:[a-zA-Z0-9\\-_:.]*[a-z0-9]+)?$", false));
    _lazyFinal($, "DomValidator__elementRegExp", "$get$DomValidator__elementRegExp", () => $.$get$DomValidator__attributeRegExp());
    _lazyFinal($, "jasprProxyPort", "$get$jasprProxyPort", () => A._Platform_environment().$index(0, "JASPR_PROXY_PORT"));
    _lazyFinal($, "webDir", "$get$webDir", () => B.JSString_methods.get$isNotEmpty("") ? "" : A.join(A._findRootProjectDir(), "web"));
    _lazyFinal($, "_allowedRenderPaths", "$get$_allowedRenderPaths", () => A.RegExp_RegExp("\\.html?$|^[^.]*$", false));
    _lazyFinal($, "windows", "$get$windows", () => A.Context_Context($.$get$Style_windows()));
    _lazyFinal($, "context", "$get$context", () => new A.Context($.$get$Style_platform(), null));
    _lazyFinal($, "Style_posix", "$get$Style_posix", () => new A.PosixStyle(A.RegExp_RegExp("/", false), A.RegExp_RegExp("[^/]$", false), A.RegExp_RegExp("^/", false)));
    _lazyFinal($, "Style_windows", "$get$Style_windows", () => new A.WindowsStyle(A.RegExp_RegExp("[/\\\\]", false), A.RegExp_RegExp("[^/\\\\]$", false), A.RegExp_RegExp("^(\\\\\\\\[^\\\\]+\\\\[^\\\\/]+|[a-zA-Z]:[/\\\\])", false), A.RegExp_RegExp("^[/\\\\](?![/\\\\])", false)));
    _lazyFinal($, "Style_url", "$get$Style_url", () => new A.UrlStyle(A.RegExp_RegExp("/", false), A.RegExp_RegExp("(^[a-zA-Z][-+.a-zA-Z\\d]*://|[^/])$", false), A.RegExp_RegExp("[a-zA-Z][-+.a-zA-Z\\d]*://[^/]*", false), A.RegExp_RegExp("^/", false)));
    _lazyFinal($, "Style_platform", "$get$Style_platform", () => A.Style__getPlatformStyle());
    _lazyFinal($, "_emptyHeaders", "$get$_emptyHeaders", () => new A.Headers(B.Map_empty));
    _lazyFinal($, "_defaultHeaders", "$get$_defaultHeaders", () => A.Headers_Headers$from(A.LinkedHashMap_LinkedHashMap$_literal(["content-length", A._setArrayType(["0"], type$.JSArray_String)], type$.String, type$.List_String)));
    _lazyFinal($, "_defaultGzipEncoder", "$get$_defaultGzipEncoder", () => A.ZLibEncoder$(true, 4));
    _lazyFinal($, "gzipMiddleware", "$get$gzipMiddleware", () => A.createGzipMiddleware());
    _lazyFinal($, "_specKey", "$get$_specKey", () => new A.Object());
    _lazyFinal($, "_vmFrame", "$get$_vmFrame", () => A.RegExp_RegExp("^#\\d+\\s+(\\S.*) \\((.+?)((?::\\d+){0,2})\\)$", false));
    _lazyFinal($, "_v8JsFrame", "$get$_v8JsFrame", () => A.RegExp_RegExp("^\\s*at (?:(\\S.*?)(?: \\[as [^\\]]+\\])? \\((.*)\\)|(.*))$", false));
    _lazyFinal($, "_v8JsUrlLocation", "$get$_v8JsUrlLocation", () => A.RegExp_RegExp("^(.*?):(\\d+)(?::(\\d+))?$|native$", false));
    _lazyFinal($, "_v8WasmFrame", "$get$_v8WasmFrame", () => A.RegExp_RegExp("^\\s*at (?:(?<member>.+) )?(?:\\(?(?:(?<uri>\\S+):wasm-function\\[(?<index>\\d+)\\]\\:0x(?<offset>[0-9a-fA-F]+))\\)?)$", false));
    _lazyFinal($, "_v8EvalLocation", "$get$_v8EvalLocation", () => A.RegExp_RegExp("^eval at (?:\\S.*?) \\((.*)\\)(?:, .*?:\\d+:\\d+)?$", false));
    _lazyFinal($, "_firefoxEvalLocation", "$get$_firefoxEvalLocation", () => A.RegExp_RegExp("(\\S+)@(\\S+) line (\\d+) >.* (Function|eval):\\d+:\\d+", false));
    _lazyFinal($, "_firefoxSafariJSFrame", "$get$_firefoxSafariJSFrame", () => A.RegExp_RegExp("^(?:([^@(/]*)(?:\\(.*\\))?((?:/[^/]*)*)(?:\\(.*\\))?@)?(.*?):(\\d*)(?::(\\d*))?$", false));
    _lazyFinal($, "_firefoxWasmFrame", "$get$_firefoxWasmFrame", () => A.RegExp_RegExp("^(?<member>.*?)@(?:(?<uri>\\S+).*?:wasm-function\\[(?<index>\\d+)\\]:0x(?<offset>[0-9a-fA-F]+))$", false));
    _lazyFinal($, "_safariWasmFrame", "$get$_safariWasmFrame", () => A.RegExp_RegExp("^.*?wasm-function\\[(?<member>.*)\\]@\\[wasm code\\]$", false));
    _lazyFinal($, "_friendlyFrame", "$get$_friendlyFrame", () => A.RegExp_RegExp("^(\\S+)(?: (\\d+)(?::(\\d+))?)?\\s+([^\\d].*)$", false));
    _lazyFinal($, "_asyncBody", "$get$_asyncBody", () => A.RegExp_RegExp("<(<anonymous closure>|[^>]+)_async_body>", false));
    _lazyFinal($, "_initialDot", "$get$_initialDot", () => A.RegExp_RegExp("^\\.", false));
    _lazyFinal($, "Frame__uriRegExp", "$get$Frame__uriRegExp", () => A.RegExp_RegExp("^[a-zA-Z][-+.a-zA-Z\\d]*://", false));
    _lazyFinal($, "Frame__windowsRegExp", "$get$Frame__windowsRegExp", () => A.RegExp_RegExp("^([a-zA-Z]:[\\\\/]|\\\\\\\\)", false));
    _lazyFinal($, "_terseRegExp", "$get$_terseRegExp", () => A.RegExp_RegExp("(-patch)?([/\\\\].*)?$", false));
    _lazyFinal($, "_v8Trace", "$get$_v8Trace", () => A.RegExp_RegExp("\\n    ?at ", false));
    _lazyFinal($, "_v8TraceLine", "$get$_v8TraceLine", () => A.RegExp_RegExp("    ?at ", false));
    _lazyFinal($, "_firefoxEvalTrace", "$get$_firefoxEvalTrace", () => A.RegExp_RegExp("@\\S+ line \\d+ >.* (Function|eval):\\d+:\\d+", false));
    _lazyFinal($, "_firefoxSafariTrace", "$get$_firefoxSafariTrace", () => A.RegExp_RegExp("^(([.0-9A-Za-z_$/<]|\\(.*\\))*@)?[^\\s]*:\\d*$", true));
    _lazyFinal($, "_friendlyTrace", "$get$_friendlyTrace", () => A.RegExp_RegExp("^[^\\s<][^\\s]*( \\d+(:\\d+)?)?[ \\t]+[^\\s]+$", true));
    _lazyFinal($, "vmChainGap", "$get$vmChainGap", () => A.RegExp_RegExp("^<asynchronous suspension>\\n?$", true));
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({WebGL: J.Interceptor, AnimationEffectReadOnly: J.JavaScriptObject, AnimationEffectTiming: J.JavaScriptObject, AnimationEffectTimingReadOnly: J.JavaScriptObject, AnimationTimeline: J.JavaScriptObject, AnimationWorkletGlobalScope: J.JavaScriptObject, AuthenticatorAssertionResponse: J.JavaScriptObject, AuthenticatorAttestationResponse: J.JavaScriptObject, AuthenticatorResponse: J.JavaScriptObject, BackgroundFetchFetch: J.JavaScriptObject, BackgroundFetchManager: J.JavaScriptObject, BackgroundFetchSettledFetch: J.JavaScriptObject, BarProp: J.JavaScriptObject, BarcodeDetector: J.JavaScriptObject, BluetoothRemoteGATTDescriptor: J.JavaScriptObject, Body: J.JavaScriptObject, BudgetState: J.JavaScriptObject, CacheStorage: J.JavaScriptObject, CanvasGradient: J.JavaScriptObject, CanvasPattern: J.JavaScriptObject, CanvasRenderingContext2D: J.JavaScriptObject, Client: J.JavaScriptObject, Clients: J.JavaScriptObject, CookieStore: J.JavaScriptObject, Coordinates: J.JavaScriptObject, Credential: J.JavaScriptObject, CredentialUserData: J.JavaScriptObject, CredentialsContainer: J.JavaScriptObject, Crypto: J.JavaScriptObject, CryptoKey: J.JavaScriptObject, CSS: J.JavaScriptObject, CSSVariableReferenceValue: J.JavaScriptObject, CustomElementRegistry: J.JavaScriptObject, DataTransfer: J.JavaScriptObject, DataTransferItem: J.JavaScriptObject, DeprecatedStorageInfo: J.JavaScriptObject, DeprecatedStorageQuota: J.JavaScriptObject, DeprecationReport: J.JavaScriptObject, DetectedBarcode: J.JavaScriptObject, DetectedFace: J.JavaScriptObject, DetectedText: J.JavaScriptObject, DeviceAcceleration: J.JavaScriptObject, DeviceRotationRate: J.JavaScriptObject, DirectoryEntry: J.JavaScriptObject, webkitFileSystemDirectoryEntry: J.JavaScriptObject, FileSystemDirectoryEntry: J.JavaScriptObject, DirectoryReader: J.JavaScriptObject, WebKitDirectoryReader: J.JavaScriptObject, webkitFileSystemDirectoryReader: J.JavaScriptObject, FileSystemDirectoryReader: J.JavaScriptObject, DocumentOrShadowRoot: J.JavaScriptObject, DocumentTimeline: J.JavaScriptObject, DOMError: J.JavaScriptObject, Iterator: J.JavaScriptObject, DOMMatrix: J.JavaScriptObject, DOMMatrixReadOnly: J.JavaScriptObject, DOMParser: J.JavaScriptObject, DOMPoint: J.JavaScriptObject, DOMPointReadOnly: J.JavaScriptObject, DOMQuad: J.JavaScriptObject, DOMStringMap: J.JavaScriptObject, Entry: J.JavaScriptObject, webkitFileSystemEntry: J.JavaScriptObject, FileSystemEntry: J.JavaScriptObject, External: J.JavaScriptObject, FaceDetector: J.JavaScriptObject, FederatedCredential: J.JavaScriptObject, FileEntry: J.JavaScriptObject, webkitFileSystemFileEntry: J.JavaScriptObject, FileSystemFileEntry: J.JavaScriptObject, DOMFileSystem: J.JavaScriptObject, WebKitFileSystem: J.JavaScriptObject, webkitFileSystem: J.JavaScriptObject, FileSystem: J.JavaScriptObject, FontFace: J.JavaScriptObject, FontFaceSource: J.JavaScriptObject, FormData: J.JavaScriptObject, GamepadButton: J.JavaScriptObject, GamepadPose: J.JavaScriptObject, Geolocation: J.JavaScriptObject, Position: J.JavaScriptObject, GeolocationPosition: J.JavaScriptObject, Headers: J.JavaScriptObject, HTMLHyperlinkElementUtils: J.JavaScriptObject, IdleDeadline: J.JavaScriptObject, ImageBitmap: J.JavaScriptObject, ImageBitmapRenderingContext: J.JavaScriptObject, ImageCapture: J.JavaScriptObject, ImageData: J.JavaScriptObject, InputDeviceCapabilities: J.JavaScriptObject, IntersectionObserver: J.JavaScriptObject, IntersectionObserverEntry: J.JavaScriptObject, InterventionReport: J.JavaScriptObject, KeyframeEffect: J.JavaScriptObject, KeyframeEffectReadOnly: J.JavaScriptObject, MediaCapabilities: J.JavaScriptObject, MediaCapabilitiesInfo: J.JavaScriptObject, MediaDeviceInfo: J.JavaScriptObject, MediaError: J.JavaScriptObject, MediaKeyStatusMap: J.JavaScriptObject, MediaKeySystemAccess: J.JavaScriptObject, MediaKeys: J.JavaScriptObject, MediaKeysPolicy: J.JavaScriptObject, MediaMetadata: J.JavaScriptObject, MediaSession: J.JavaScriptObject, MediaSettingsRange: J.JavaScriptObject, MemoryInfo: J.JavaScriptObject, MessageChannel: J.JavaScriptObject, Metadata: J.JavaScriptObject, MutationObserver: J.JavaScriptObject, WebKitMutationObserver: J.JavaScriptObject, MutationRecord: J.JavaScriptObject, NavigationPreloadManager: J.JavaScriptObject, Navigator: J.JavaScriptObject, NavigatorAutomationInformation: J.JavaScriptObject, NavigatorConcurrentHardware: J.JavaScriptObject, NavigatorCookies: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, NodeFilter: J.JavaScriptObject, NodeIterator: J.JavaScriptObject, NonDocumentTypeChildNode: J.JavaScriptObject, NonElementParentNode: J.JavaScriptObject, NoncedElement: J.JavaScriptObject, OffscreenCanvasRenderingContext2D: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PaintRenderingContext2D: J.JavaScriptObject, PaintSize: J.JavaScriptObject, PaintWorkletGlobalScope: J.JavaScriptObject, PasswordCredential: J.JavaScriptObject, Path2D: J.JavaScriptObject, PaymentAddress: J.JavaScriptObject, PaymentInstruments: J.JavaScriptObject, PaymentManager: J.JavaScriptObject, PaymentResponse: J.JavaScriptObject, PerformanceEntry: J.JavaScriptObject, PerformanceLongTaskTiming: J.JavaScriptObject, PerformanceMark: J.JavaScriptObject, PerformanceMeasure: J.JavaScriptObject, PerformanceNavigation: J.JavaScriptObject, PerformanceNavigationTiming: J.JavaScriptObject, PerformanceObserver: J.JavaScriptObject, PerformanceObserverEntryList: J.JavaScriptObject, PerformancePaintTiming: J.JavaScriptObject, PerformanceResourceTiming: J.JavaScriptObject, PerformanceServerTiming: J.JavaScriptObject, PerformanceTiming: J.JavaScriptObject, Permissions: J.JavaScriptObject, PhotoCapabilities: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, Presentation: J.JavaScriptObject, PresentationReceiver: J.JavaScriptObject, PublicKeyCredential: J.JavaScriptObject, PushManager: J.JavaScriptObject, PushMessageData: J.JavaScriptObject, PushSubscription: J.JavaScriptObject, PushSubscriptionOptions: J.JavaScriptObject, Range: J.JavaScriptObject, RelatedApplication: J.JavaScriptObject, ReportBody: J.JavaScriptObject, ReportingObserver: J.JavaScriptObject, ResizeObserver: J.JavaScriptObject, ResizeObserverEntry: J.JavaScriptObject, RTCCertificate: J.JavaScriptObject, RTCIceCandidate: J.JavaScriptObject, mozRTCIceCandidate: J.JavaScriptObject, RTCLegacyStatsReport: J.JavaScriptObject, RTCRtpContributingSource: J.JavaScriptObject, RTCRtpReceiver: J.JavaScriptObject, RTCRtpSender: J.JavaScriptObject, RTCSessionDescription: J.JavaScriptObject, mozRTCSessionDescription: J.JavaScriptObject, RTCStatsResponse: J.JavaScriptObject, Screen: J.JavaScriptObject, ScrollState: J.JavaScriptObject, ScrollTimeline: J.JavaScriptObject, Selection: J.JavaScriptObject, SharedArrayBuffer: J.JavaScriptObject, SpeechRecognitionAlternative: J.JavaScriptObject, SpeechSynthesisVoice: J.JavaScriptObject, StaticRange: J.JavaScriptObject, StorageManager: J.JavaScriptObject, StyleMedia: J.JavaScriptObject, StylePropertyMap: J.JavaScriptObject, StylePropertyMapReadonly: J.JavaScriptObject, SyncManager: J.JavaScriptObject, TaskAttributionTiming: J.JavaScriptObject, TextDetector: J.JavaScriptObject, TextMetrics: J.JavaScriptObject, TrackDefault: J.JavaScriptObject, TreeWalker: J.JavaScriptObject, TrustedHTML: J.JavaScriptObject, TrustedScriptURL: J.JavaScriptObject, TrustedURL: J.JavaScriptObject, UnderlyingSourceBase: J.JavaScriptObject, URLSearchParams: J.JavaScriptObject, VRCoordinateSystem: J.JavaScriptObject, VRDisplayCapabilities: J.JavaScriptObject, VREyeParameters: J.JavaScriptObject, VRFrameData: J.JavaScriptObject, VRFrameOfReference: J.JavaScriptObject, VRPose: J.JavaScriptObject, VRStageBounds: J.JavaScriptObject, VRStageBoundsPoint: J.JavaScriptObject, VRStageParameters: J.JavaScriptObject, ValidityState: J.JavaScriptObject, VideoPlaybackQuality: J.JavaScriptObject, VideoTrack: J.JavaScriptObject, VTTRegion: J.JavaScriptObject, WindowClient: J.JavaScriptObject, WorkletAnimation: J.JavaScriptObject, WorkletGlobalScope: J.JavaScriptObject, XPathEvaluator: J.JavaScriptObject, XPathExpression: J.JavaScriptObject, XPathNSResolver: J.JavaScriptObject, XPathResult: J.JavaScriptObject, XMLSerializer: J.JavaScriptObject, XSLTProcessor: J.JavaScriptObject, Bluetooth: J.JavaScriptObject, BluetoothCharacteristicProperties: J.JavaScriptObject, BluetoothRemoteGATTServer: J.JavaScriptObject, BluetoothRemoteGATTService: J.JavaScriptObject, BluetoothUUID: J.JavaScriptObject, BudgetService: J.JavaScriptObject, Cache: J.JavaScriptObject, DOMFileSystemSync: J.JavaScriptObject, DirectoryEntrySync: J.JavaScriptObject, DirectoryReaderSync: J.JavaScriptObject, EntrySync: J.JavaScriptObject, FileEntrySync: J.JavaScriptObject, FileReaderSync: J.JavaScriptObject, FileWriterSync: J.JavaScriptObject, HTMLAllCollection: J.JavaScriptObject, Mojo: J.JavaScriptObject, MojoHandle: J.JavaScriptObject, MojoWatcher: J.JavaScriptObject, NFC: J.JavaScriptObject, PagePopupController: J.JavaScriptObject, Report: J.JavaScriptObject, Request: J.JavaScriptObject, Response: J.JavaScriptObject, SubtleCrypto: J.JavaScriptObject, USBAlternateInterface: J.JavaScriptObject, USBConfiguration: J.JavaScriptObject, USBDevice: J.JavaScriptObject, USBEndpoint: J.JavaScriptObject, USBInTransferResult: J.JavaScriptObject, USBInterface: J.JavaScriptObject, USBIsochronousInTransferPacket: J.JavaScriptObject, USBIsochronousInTransferResult: J.JavaScriptObject, USBIsochronousOutTransferPacket: J.JavaScriptObject, USBIsochronousOutTransferResult: J.JavaScriptObject, USBOutTransferResult: J.JavaScriptObject, WorkerLocation: J.JavaScriptObject, WorkerNavigator: J.JavaScriptObject, Worklet: J.JavaScriptObject, IDBCursor: J.JavaScriptObject, IDBCursorWithValue: J.JavaScriptObject, IDBFactory: J.JavaScriptObject, IDBIndex: J.JavaScriptObject, IDBKeyRange: J.JavaScriptObject, IDBObjectStore: J.JavaScriptObject, IDBObservation: J.JavaScriptObject, IDBObserver: J.JavaScriptObject, IDBObserverChanges: J.JavaScriptObject, SVGAngle: J.JavaScriptObject, SVGAnimatedAngle: J.JavaScriptObject, SVGAnimatedBoolean: J.JavaScriptObject, SVGAnimatedEnumeration: J.JavaScriptObject, SVGAnimatedInteger: J.JavaScriptObject, SVGAnimatedLength: J.JavaScriptObject, SVGAnimatedLengthList: J.JavaScriptObject, SVGAnimatedNumber: J.JavaScriptObject, SVGAnimatedNumberList: J.JavaScriptObject, SVGAnimatedPreserveAspectRatio: J.JavaScriptObject, SVGAnimatedRect: J.JavaScriptObject, SVGAnimatedString: J.JavaScriptObject, SVGAnimatedTransformList: J.JavaScriptObject, SVGMatrix: J.JavaScriptObject, SVGPoint: J.JavaScriptObject, SVGPreserveAspectRatio: J.JavaScriptObject, SVGRect: J.JavaScriptObject, SVGUnitTypes: J.JavaScriptObject, AudioListener: J.JavaScriptObject, AudioParam: J.JavaScriptObject, AudioTrack: J.JavaScriptObject, AudioWorkletGlobalScope: J.JavaScriptObject, AudioWorkletProcessor: J.JavaScriptObject, PeriodicWave: J.JavaScriptObject, WebGLActiveInfo: J.JavaScriptObject, ANGLEInstancedArrays: J.JavaScriptObject, ANGLE_instanced_arrays: J.JavaScriptObject, WebGLBuffer: J.JavaScriptObject, WebGLCanvas: J.JavaScriptObject, WebGLColorBufferFloat: J.JavaScriptObject, WebGLCompressedTextureASTC: J.JavaScriptObject, WebGLCompressedTextureATC: J.JavaScriptObject, WEBGL_compressed_texture_atc: J.JavaScriptObject, WebGLCompressedTextureETC1: J.JavaScriptObject, WEBGL_compressed_texture_etc1: J.JavaScriptObject, WebGLCompressedTextureETC: J.JavaScriptObject, WebGLCompressedTexturePVRTC: J.JavaScriptObject, WEBGL_compressed_texture_pvrtc: J.JavaScriptObject, WebGLCompressedTextureS3TC: J.JavaScriptObject, WEBGL_compressed_texture_s3tc: J.JavaScriptObject, WebGLCompressedTextureS3TCsRGB: J.JavaScriptObject, WebGLDebugRendererInfo: J.JavaScriptObject, WEBGL_debug_renderer_info: J.JavaScriptObject, WebGLDebugShaders: J.JavaScriptObject, WEBGL_debug_shaders: J.JavaScriptObject, WebGLDepthTexture: J.JavaScriptObject, WEBGL_depth_texture: J.JavaScriptObject, WebGLDrawBuffers: J.JavaScriptObject, WEBGL_draw_buffers: J.JavaScriptObject, EXTsRGB: J.JavaScriptObject, EXT_sRGB: J.JavaScriptObject, EXTBlendMinMax: J.JavaScriptObject, EXT_blend_minmax: J.JavaScriptObject, EXTColorBufferFloat: J.JavaScriptObject, EXTColorBufferHalfFloat: J.JavaScriptObject, EXTDisjointTimerQuery: J.JavaScriptObject, EXTDisjointTimerQueryWebGL2: J.JavaScriptObject, EXTFragDepth: J.JavaScriptObject, EXT_frag_depth: J.JavaScriptObject, EXTShaderTextureLOD: J.JavaScriptObject, EXT_shader_texture_lod: J.JavaScriptObject, EXTTextureFilterAnisotropic: J.JavaScriptObject, EXT_texture_filter_anisotropic: J.JavaScriptObject, WebGLFramebuffer: J.JavaScriptObject, WebGLGetBufferSubDataAsync: J.JavaScriptObject, WebGLLoseContext: J.JavaScriptObject, WebGLExtensionLoseContext: J.JavaScriptObject, WEBGL_lose_context: J.JavaScriptObject, OESElementIndexUint: J.JavaScriptObject, OES_element_index_uint: J.JavaScriptObject, OESStandardDerivatives: J.JavaScriptObject, OES_standard_derivatives: J.JavaScriptObject, OESTextureFloat: J.JavaScriptObject, OES_texture_float: J.JavaScriptObject, OESTextureFloatLinear: J.JavaScriptObject, OES_texture_float_linear: J.JavaScriptObject, OESTextureHalfFloat: J.JavaScriptObject, OES_texture_half_float: J.JavaScriptObject, OESTextureHalfFloatLinear: J.JavaScriptObject, OES_texture_half_float_linear: J.JavaScriptObject, OESVertexArrayObject: J.JavaScriptObject, OES_vertex_array_object: J.JavaScriptObject, WebGLProgram: J.JavaScriptObject, WebGLQuery: J.JavaScriptObject, WebGLRenderbuffer: J.JavaScriptObject, WebGLRenderingContext: J.JavaScriptObject, WebGL2RenderingContext: J.JavaScriptObject, WebGLSampler: J.JavaScriptObject, WebGLShader: J.JavaScriptObject, WebGLShaderPrecisionFormat: J.JavaScriptObject, WebGLSync: J.JavaScriptObject, WebGLTexture: J.JavaScriptObject, WebGLTimerQueryEXT: J.JavaScriptObject, WebGLTransformFeedback: J.JavaScriptObject, WebGLUniformLocation: J.JavaScriptObject, WebGLVertexArrayObject: J.JavaScriptObject, WebGLVertexArrayObjectOES: J.JavaScriptObject, WebGL2RenderingContextBase: J.JavaScriptObject, ArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeFloat32List, Float64Array: A.NativeFloat64List, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List, HTMLAudioElement: A.HtmlElement, HTMLBRElement: A.HtmlElement, HTMLButtonElement: A.HtmlElement, HTMLCanvasElement: A.HtmlElement, HTMLContentElement: A.HtmlElement, HTMLDListElement: A.HtmlElement, HTMLDataElement: A.HtmlElement, HTMLDataListElement: A.HtmlElement, HTMLDetailsElement: A.HtmlElement, HTMLDialogElement: A.HtmlElement, HTMLDivElement: A.HtmlElement, HTMLEmbedElement: A.HtmlElement, HTMLFieldSetElement: A.HtmlElement, HTMLHRElement: A.HtmlElement, HTMLHeadElement: A.HtmlElement, HTMLHeadingElement: A.HtmlElement, HTMLHtmlElement: A.HtmlElement, HTMLIFrameElement: A.HtmlElement, HTMLImageElement: A.HtmlElement, HTMLInputElement: A.HtmlElement, HTMLLIElement: A.HtmlElement, HTMLLabelElement: A.HtmlElement, HTMLLegendElement: A.HtmlElement, HTMLLinkElement: A.HtmlElement, HTMLMapElement: A.HtmlElement, HTMLMediaElement: A.HtmlElement, HTMLMenuElement: A.HtmlElement, HTMLMetaElement: A.HtmlElement, HTMLMeterElement: A.HtmlElement, HTMLModElement: A.HtmlElement, HTMLOListElement: A.HtmlElement, HTMLObjectElement: A.HtmlElement, HTMLOptGroupElement: A.HtmlElement, HTMLOptionElement: A.HtmlElement, HTMLOutputElement: A.HtmlElement, HTMLParagraphElement: A.HtmlElement, HTMLParamElement: A.HtmlElement, HTMLPictureElement: A.HtmlElement, HTMLPreElement: A.HtmlElement, HTMLProgressElement: A.HtmlElement, HTMLQuoteElement: A.HtmlElement, HTMLScriptElement: A.HtmlElement, HTMLShadowElement: A.HtmlElement, HTMLSlotElement: A.HtmlElement, HTMLSourceElement: A.HtmlElement, HTMLSpanElement: A.HtmlElement, HTMLStyleElement: A.HtmlElement, HTMLTableCaptionElement: A.HtmlElement, HTMLTableCellElement: A.HtmlElement, HTMLTableDataCellElement: A.HtmlElement, HTMLTableHeaderCellElement: A.HtmlElement, HTMLTableColElement: A.HtmlElement, HTMLTableElement: A.HtmlElement, HTMLTableRowElement: A.HtmlElement, HTMLTableSectionElement: A.HtmlElement, HTMLTextAreaElement: A.HtmlElement, HTMLTimeElement: A.HtmlElement, HTMLTitleElement: A.HtmlElement, HTMLTrackElement: A.HtmlElement, HTMLUListElement: A.HtmlElement, HTMLUnknownElement: A.HtmlElement, HTMLVideoElement: A.HtmlElement, HTMLDirectoryElement: A.HtmlElement, HTMLFontElement: A.HtmlElement, HTMLFrameElement: A.HtmlElement, HTMLFrameSetElement: A.HtmlElement, HTMLMarqueeElement: A.HtmlElement, HTMLElement: A.HtmlElement, AccessibleNodeList: A.AccessibleNodeList, HTMLAnchorElement: A.AnchorElement, HTMLAreaElement: A.AreaElement, HTMLBaseElement: A.BaseElement, Blob: A.Blob, HTMLBodyElement: A.BodyElement, Comment: A.CharacterData, ProcessingInstruction: A.CharacterData, CharacterData: A.CharacterData, CSSPerspective: A.CssPerspective, CSSCharsetRule: A.CssRule, CSSConditionRule: A.CssRule, CSSFontFaceRule: A.CssRule, CSSGroupingRule: A.CssRule, CSSImportRule: A.CssRule, CSSKeyframeRule: A.CssRule, MozCSSKeyframeRule: A.CssRule, WebKitCSSKeyframeRule: A.CssRule, CSSKeyframesRule: A.CssRule, MozCSSKeyframesRule: A.CssRule, WebKitCSSKeyframesRule: A.CssRule, CSSMediaRule: A.CssRule, CSSNamespaceRule: A.CssRule, CSSPageRule: A.CssRule, CSSRule: A.CssRule, CSSStyleRule: A.CssRule, CSSSupportsRule: A.CssRule, CSSViewportRule: A.CssRule, CSSStyleDeclaration: A.CssStyleDeclaration, MSStyleCSSProperties: A.CssStyleDeclaration, CSS2Properties: A.CssStyleDeclaration, CSSImageValue: A.CssStyleValue, CSSKeywordValue: A.CssStyleValue, CSSNumericValue: A.CssStyleValue, CSSPositionValue: A.CssStyleValue, CSSResourceValue: A.CssStyleValue, CSSUnitValue: A.CssStyleValue, CSSURLImageValue: A.CssStyleValue, CSSStyleValue: A.CssStyleValue, CSSMatrixComponent: A.CssTransformComponent, CSSRotation: A.CssTransformComponent, CSSScale: A.CssTransformComponent, CSSSkew: A.CssTransformComponent, CSSTranslation: A.CssTransformComponent, CSSTransformComponent: A.CssTransformComponent, CSSTransformValue: A.CssTransformValue, CSSUnparsedValue: A.CssUnparsedValue, DataTransferItemList: A.DataTransferItemList, XMLDocument: A.Document, Document: A.Document, DOMException: A.DomException, DOMImplementation: A.DomImplementation, ClientRectList: A.DomRectList, DOMRectList: A.DomRectList, DOMRectReadOnly: A.DomRectReadOnly, DOMStringList: A.DomStringList, DOMTokenList: A.DomTokenList, MathMLElement: A.Element0, SVGAElement: A.Element0, SVGAnimateElement: A.Element0, SVGAnimateMotionElement: A.Element0, SVGAnimateTransformElement: A.Element0, SVGAnimationElement: A.Element0, SVGCircleElement: A.Element0, SVGClipPathElement: A.Element0, SVGDefsElement: A.Element0, SVGDescElement: A.Element0, SVGDiscardElement: A.Element0, SVGEllipseElement: A.Element0, SVGFEBlendElement: A.Element0, SVGFEColorMatrixElement: A.Element0, SVGFEComponentTransferElement: A.Element0, SVGFECompositeElement: A.Element0, SVGFEConvolveMatrixElement: A.Element0, SVGFEDiffuseLightingElement: A.Element0, SVGFEDisplacementMapElement: A.Element0, SVGFEDistantLightElement: A.Element0, SVGFEFloodElement: A.Element0, SVGFEFuncAElement: A.Element0, SVGFEFuncBElement: A.Element0, SVGFEFuncGElement: A.Element0, SVGFEFuncRElement: A.Element0, SVGFEGaussianBlurElement: A.Element0, SVGFEImageElement: A.Element0, SVGFEMergeElement: A.Element0, SVGFEMergeNodeElement: A.Element0, SVGFEMorphologyElement: A.Element0, SVGFEOffsetElement: A.Element0, SVGFEPointLightElement: A.Element0, SVGFESpecularLightingElement: A.Element0, SVGFESpotLightElement: A.Element0, SVGFETileElement: A.Element0, SVGFETurbulenceElement: A.Element0, SVGFilterElement: A.Element0, SVGForeignObjectElement: A.Element0, SVGGElement: A.Element0, SVGGeometryElement: A.Element0, SVGGraphicsElement: A.Element0, SVGImageElement: A.Element0, SVGLineElement: A.Element0, SVGLinearGradientElement: A.Element0, SVGMarkerElement: A.Element0, SVGMaskElement: A.Element0, SVGMetadataElement: A.Element0, SVGPathElement: A.Element0, SVGPatternElement: A.Element0, SVGPolygonElement: A.Element0, SVGPolylineElement: A.Element0, SVGRadialGradientElement: A.Element0, SVGRectElement: A.Element0, SVGScriptElement: A.Element0, SVGSetElement: A.Element0, SVGStopElement: A.Element0, SVGStyleElement: A.Element0, SVGElement: A.Element0, SVGSVGElement: A.Element0, SVGSwitchElement: A.Element0, SVGSymbolElement: A.Element0, SVGTSpanElement: A.Element0, SVGTextContentElement: A.Element0, SVGTextElement: A.Element0, SVGTextPathElement: A.Element0, SVGTextPositioningElement: A.Element0, SVGTitleElement: A.Element0, SVGUseElement: A.Element0, SVGViewElement: A.Element0, SVGGradientElement: A.Element0, SVGComponentTransferFunctionElement: A.Element0, SVGFEDropShadowElement: A.Element0, SVGMPathElement: A.Element0, Element: A.Element0, AbortPaymentEvent: A.Event, AnimationEvent: A.Event, AnimationPlaybackEvent: A.Event, ApplicationCacheErrorEvent: A.Event, BackgroundFetchClickEvent: A.Event, BackgroundFetchEvent: A.Event, BackgroundFetchFailEvent: A.Event, BackgroundFetchedEvent: A.Event, BeforeInstallPromptEvent: A.Event, BeforeUnloadEvent: A.Event, BlobEvent: A.Event, CanMakePaymentEvent: A.Event, ClipboardEvent: A.Event, CloseEvent: A.Event, CompositionEvent: A.Event, CustomEvent: A.Event, DeviceMotionEvent: A.Event, DeviceOrientationEvent: A.Event, ErrorEvent: A.Event, Event: A.Event, InputEvent: A.Event, SubmitEvent: A.Event, ExtendableEvent: A.Event, ExtendableMessageEvent: A.Event, FetchEvent: A.Event, FocusEvent: A.Event, FontFaceSetLoadEvent: A.Event, ForeignFetchEvent: A.Event, GamepadEvent: A.Event, HashChangeEvent: A.Event, InstallEvent: A.Event, KeyboardEvent: A.Event, MediaEncryptedEvent: A.Event, MediaKeyMessageEvent: A.Event, MediaQueryListEvent: A.Event, MediaStreamEvent: A.Event, MediaStreamTrackEvent: A.Event, MessageEvent: A.Event, MIDIConnectionEvent: A.Event, MIDIMessageEvent: A.Event, MouseEvent: A.Event, DragEvent: A.Event, MutationEvent: A.Event, NotificationEvent: A.Event, PageTransitionEvent: A.Event, PaymentRequestEvent: A.Event, PaymentRequestUpdateEvent: A.Event, PointerEvent: A.Event, PopStateEvent: A.Event, PresentationConnectionAvailableEvent: A.Event, PresentationConnectionCloseEvent: A.Event, ProgressEvent: A.Event, PromiseRejectionEvent: A.Event, PushEvent: A.Event, RTCDataChannelEvent: A.Event, RTCDTMFToneChangeEvent: A.Event, RTCPeerConnectionIceEvent: A.Event, RTCTrackEvent: A.Event, SecurityPolicyViolationEvent: A.Event, SensorErrorEvent: A.Event, SpeechRecognitionError: A.Event, SpeechRecognitionEvent: A.Event, SpeechSynthesisEvent: A.Event, StorageEvent: A.Event, SyncEvent: A.Event, TextEvent: A.Event, TouchEvent: A.Event, TrackEvent: A.Event, TransitionEvent: A.Event, WebKitTransitionEvent: A.Event, UIEvent: A.Event, VRDeviceEvent: A.Event, VRDisplayEvent: A.Event, VRSessionEvent: A.Event, WheelEvent: A.Event, MojoInterfaceRequestEvent: A.Event, ResourceProgressEvent: A.Event, USBConnectionEvent: A.Event, IDBVersionChangeEvent: A.Event, AudioProcessingEvent: A.Event, OfflineAudioCompletionEvent: A.Event, WebGLContextEvent: A.Event, AbsoluteOrientationSensor: A.EventTarget, Accelerometer: A.EventTarget, AccessibleNode: A.EventTarget, AmbientLightSensor: A.EventTarget, Animation: A.EventTarget, ApplicationCache: A.EventTarget, DOMApplicationCache: A.EventTarget, OfflineResourceList: A.EventTarget, BackgroundFetchRegistration: A.EventTarget, BatteryManager: A.EventTarget, BroadcastChannel: A.EventTarget, CanvasCaptureMediaStreamTrack: A.EventTarget, DedicatedWorkerGlobalScope: A.EventTarget, EventSource: A.EventTarget, FileReader: A.EventTarget, FontFaceSet: A.EventTarget, Gyroscope: A.EventTarget, XMLHttpRequest: A.EventTarget, XMLHttpRequestEventTarget: A.EventTarget, XMLHttpRequestUpload: A.EventTarget, LinearAccelerationSensor: A.EventTarget, Magnetometer: A.EventTarget, MediaDevices: A.EventTarget, MediaKeySession: A.EventTarget, MediaQueryList: A.EventTarget, MediaRecorder: A.EventTarget, MediaSource: A.EventTarget, MediaStream: A.EventTarget, MediaStreamTrack: A.EventTarget, MessagePort: A.EventTarget, MIDIAccess: A.EventTarget, MIDIInput: A.EventTarget, MIDIOutput: A.EventTarget, MIDIPort: A.EventTarget, NetworkInformation: A.EventTarget, Notification: A.EventTarget, OffscreenCanvas: A.EventTarget, OrientationSensor: A.EventTarget, PaymentRequest: A.EventTarget, Performance: A.EventTarget, PermissionStatus: A.EventTarget, PresentationAvailability: A.EventTarget, PresentationConnection: A.EventTarget, PresentationConnectionList: A.EventTarget, PresentationRequest: A.EventTarget, RelativeOrientationSensor: A.EventTarget, RemotePlayback: A.EventTarget, RTCDataChannel: A.EventTarget, DataChannel: A.EventTarget, RTCDTMFSender: A.EventTarget, RTCPeerConnection: A.EventTarget, webkitRTCPeerConnection: A.EventTarget, mozRTCPeerConnection: A.EventTarget, ScreenOrientation: A.EventTarget, Sensor: A.EventTarget, ServiceWorker: A.EventTarget, ServiceWorkerContainer: A.EventTarget, ServiceWorkerGlobalScope: A.EventTarget, ServiceWorkerRegistration: A.EventTarget, SharedWorker: A.EventTarget, SharedWorkerGlobalScope: A.EventTarget, SpeechRecognition: A.EventTarget, webkitSpeechRecognition: A.EventTarget, SpeechSynthesis: A.EventTarget, SpeechSynthesisUtterance: A.EventTarget, VR: A.EventTarget, VRDevice: A.EventTarget, VRDisplay: A.EventTarget, VRSession: A.EventTarget, VisualViewport: A.EventTarget, WebSocket: A.EventTarget, Window: A.EventTarget, DOMWindow: A.EventTarget, Worker: A.EventTarget, WorkerGlobalScope: A.EventTarget, WorkerPerformance: A.EventTarget, BluetoothDevice: A.EventTarget, BluetoothRemoteGATTCharacteristic: A.EventTarget, Clipboard: A.EventTarget, MojoInterfaceInterceptor: A.EventTarget, USB: A.EventTarget, IDBDatabase: A.EventTarget, IDBOpenDBRequest: A.EventTarget, IDBVersionChangeRequest: A.EventTarget, IDBRequest: A.EventTarget, IDBTransaction: A.EventTarget, AnalyserNode: A.EventTarget, RealtimeAnalyserNode: A.EventTarget, AudioBufferSourceNode: A.EventTarget, AudioDestinationNode: A.EventTarget, AudioNode: A.EventTarget, AudioScheduledSourceNode: A.EventTarget, AudioWorkletNode: A.EventTarget, BiquadFilterNode: A.EventTarget, ChannelMergerNode: A.EventTarget, AudioChannelMerger: A.EventTarget, ChannelSplitterNode: A.EventTarget, AudioChannelSplitter: A.EventTarget, ConstantSourceNode: A.EventTarget, ConvolverNode: A.EventTarget, DelayNode: A.EventTarget, DynamicsCompressorNode: A.EventTarget, GainNode: A.EventTarget, AudioGainNode: A.EventTarget, IIRFilterNode: A.EventTarget, MediaElementAudioSourceNode: A.EventTarget, MediaStreamAudioDestinationNode: A.EventTarget, MediaStreamAudioSourceNode: A.EventTarget, OscillatorNode: A.EventTarget, Oscillator: A.EventTarget, PannerNode: A.EventTarget, AudioPannerNode: A.EventTarget, webkitAudioPannerNode: A.EventTarget, ScriptProcessorNode: A.EventTarget, JavaScriptAudioNode: A.EventTarget, StereoPannerNode: A.EventTarget, WaveShaperNode: A.EventTarget, EventTarget: A.EventTarget, File: A.File, FileList: A.FileList, FileWriter: A.FileWriter, HTMLFormElement: A.FormElement, Gamepad: A.Gamepad, History: A.History, HTMLCollection: A.HtmlCollection, HTMLFormControlsCollection: A.HtmlCollection, HTMLOptionsCollection: A.HtmlCollection, HTMLDocument: A.HtmlDocument, Location: A.Location, MediaList: A.MediaList, MIDIInputMap: A.MidiInputMap, MIDIOutputMap: A.MidiOutputMap, MimeType: A.MimeType, MimeTypeArray: A.MimeTypeArray, DocumentFragment: A.Node, ShadowRoot: A.Node, DocumentType: A.Node, Node: A.Node, NodeList: A.NodeList, RadioNodeList: A.NodeList, Plugin: A.Plugin, PluginArray: A.PluginArray, RTCStatsReport: A.RtcStatsReport, HTMLSelectElement: A.SelectElement, SourceBuffer: A.SourceBuffer, SourceBufferList: A.SourceBufferList, SpeechGrammar: A.SpeechGrammar, SpeechGrammarList: A.SpeechGrammarList, SpeechRecognitionResult: A.SpeechRecognitionResult, Storage: A.Storage, CSSStyleSheet: A.StyleSheet, StyleSheet: A.StyleSheet, HTMLTemplateElement: A.TemplateElement, CDATASection: A.Text0, Text: A.Text0, TextTrack: A.TextTrack, TextTrackCue: A.TextTrackCue, VTTCue: A.TextTrackCue, TextTrackCueList: A.TextTrackCueList, TextTrackList: A.TextTrackList, TimeRanges: A.TimeRanges, Touch: A.Touch, TouchList: A.TouchList, TrackDefaultList: A.TrackDefaultList, URL: A.Url, VideoTrackList: A.VideoTrackList, Attr: A._Attr, CSSRuleList: A._CssRuleList, ClientRect: A._DomRect, DOMRect: A._DomRect, GamepadList: A._GamepadList, NamedNodeMap: A._NamedNodeMap, MozNamedAttrMap: A._NamedNodeMap, SpeechRecognitionResultList: A._SpeechRecognitionResultList, StyleSheetList: A._StyleSheetList, SVGLength: A.Length, SVGLengthList: A.LengthList, SVGNumber: A.Number, SVGNumberList: A.NumberList, SVGPointList: A.PointList, SVGStringList: A.StringList, SVGTransform: A.Transform, SVGTransformList: A.TransformList, AudioBuffer: A.AudioBuffer, AudioParamMap: A.AudioParamMap, AudioTrackList: A.AudioTrackList, AudioContext: A.BaseAudioContext, webkitAudioContext: A.BaseAudioContext, BaseAudioContext: A.BaseAudioContext, OfflineAudioContext: A.OfflineAudioContext});
    hunkHelpers.setOrUpdateLeafTags({WebGL: true, AnimationEffectReadOnly: true, AnimationEffectTiming: true, AnimationEffectTimingReadOnly: true, AnimationTimeline: true, AnimationWorkletGlobalScope: true, AuthenticatorAssertionResponse: true, AuthenticatorAttestationResponse: true, AuthenticatorResponse: true, BackgroundFetchFetch: true, BackgroundFetchManager: true, BackgroundFetchSettledFetch: true, BarProp: true, BarcodeDetector: true, BluetoothRemoteGATTDescriptor: true, Body: true, BudgetState: true, CacheStorage: true, CanvasGradient: true, CanvasPattern: true, CanvasRenderingContext2D: true, Client: true, Clients: true, CookieStore: true, Coordinates: true, Credential: true, CredentialUserData: true, CredentialsContainer: true, Crypto: true, CryptoKey: true, CSS: true, CSSVariableReferenceValue: true, CustomElementRegistry: true, DataTransfer: true, DataTransferItem: true, DeprecatedStorageInfo: true, DeprecatedStorageQuota: true, DeprecationReport: true, DetectedBarcode: true, DetectedFace: true, DetectedText: true, DeviceAcceleration: true, DeviceRotationRate: true, DirectoryEntry: true, webkitFileSystemDirectoryEntry: true, FileSystemDirectoryEntry: true, DirectoryReader: true, WebKitDirectoryReader: true, webkitFileSystemDirectoryReader: true, FileSystemDirectoryReader: true, DocumentOrShadowRoot: true, DocumentTimeline: true, DOMError: true, Iterator: true, DOMMatrix: true, DOMMatrixReadOnly: true, DOMParser: true, DOMPoint: true, DOMPointReadOnly: true, DOMQuad: true, DOMStringMap: true, Entry: true, webkitFileSystemEntry: true, FileSystemEntry: true, External: true, FaceDetector: true, FederatedCredential: true, FileEntry: true, webkitFileSystemFileEntry: true, FileSystemFileEntry: true, DOMFileSystem: true, WebKitFileSystem: true, webkitFileSystem: true, FileSystem: true, FontFace: true, FontFaceSource: true, FormData: true, GamepadButton: true, GamepadPose: true, Geolocation: true, Position: true, GeolocationPosition: true, Headers: true, HTMLHyperlinkElementUtils: true, IdleDeadline: true, ImageBitmap: true, ImageBitmapRenderingContext: true, ImageCapture: true, ImageData: true, InputDeviceCapabilities: true, IntersectionObserver: true, IntersectionObserverEntry: true, InterventionReport: true, KeyframeEffect: true, KeyframeEffectReadOnly: true, MediaCapabilities: true, MediaCapabilitiesInfo: true, MediaDeviceInfo: true, MediaError: true, MediaKeyStatusMap: true, MediaKeySystemAccess: true, MediaKeys: true, MediaKeysPolicy: true, MediaMetadata: true, MediaSession: true, MediaSettingsRange: true, MemoryInfo: true, MessageChannel: true, Metadata: true, MutationObserver: true, WebKitMutationObserver: true, MutationRecord: true, NavigationPreloadManager: true, Navigator: true, NavigatorAutomationInformation: true, NavigatorConcurrentHardware: true, NavigatorCookies: true, NavigatorUserMediaError: true, NodeFilter: true, NodeIterator: true, NonDocumentTypeChildNode: true, NonElementParentNode: true, NoncedElement: true, OffscreenCanvasRenderingContext2D: true, OverconstrainedError: true, PaintRenderingContext2D: true, PaintSize: true, PaintWorkletGlobalScope: true, PasswordCredential: true, Path2D: true, PaymentAddress: true, PaymentInstruments: true, PaymentManager: true, PaymentResponse: true, PerformanceEntry: true, PerformanceLongTaskTiming: true, PerformanceMark: true, PerformanceMeasure: true, PerformanceNavigation: true, PerformanceNavigationTiming: true, PerformanceObserver: true, PerformanceObserverEntryList: true, PerformancePaintTiming: true, PerformanceResourceTiming: true, PerformanceServerTiming: true, PerformanceTiming: true, Permissions: true, PhotoCapabilities: true, PositionError: true, GeolocationPositionError: true, Presentation: true, PresentationReceiver: true, PublicKeyCredential: true, PushManager: true, PushMessageData: true, PushSubscription: true, PushSubscriptionOptions: true, Range: true, RelatedApplication: true, ReportBody: true, ReportingObserver: true, ResizeObserver: true, ResizeObserverEntry: true, RTCCertificate: true, RTCIceCandidate: true, mozRTCIceCandidate: true, RTCLegacyStatsReport: true, RTCRtpContributingSource: true, RTCRtpReceiver: true, RTCRtpSender: true, RTCSessionDescription: true, mozRTCSessionDescription: true, RTCStatsResponse: true, Screen: true, ScrollState: true, ScrollTimeline: true, Selection: true, SharedArrayBuffer: true, SpeechRecognitionAlternative: true, SpeechSynthesisVoice: true, StaticRange: true, StorageManager: true, StyleMedia: true, StylePropertyMap: true, StylePropertyMapReadonly: true, SyncManager: true, TaskAttributionTiming: true, TextDetector: true, TextMetrics: true, TrackDefault: true, TreeWalker: true, TrustedHTML: true, TrustedScriptURL: true, TrustedURL: true, UnderlyingSourceBase: true, URLSearchParams: true, VRCoordinateSystem: true, VRDisplayCapabilities: true, VREyeParameters: true, VRFrameData: true, VRFrameOfReference: true, VRPose: true, VRStageBounds: true, VRStageBoundsPoint: true, VRStageParameters: true, ValidityState: true, VideoPlaybackQuality: true, VideoTrack: true, VTTRegion: true, WindowClient: true, WorkletAnimation: true, WorkletGlobalScope: true, XPathEvaluator: true, XPathExpression: true, XPathNSResolver: true, XPathResult: true, XMLSerializer: true, XSLTProcessor: true, Bluetooth: true, BluetoothCharacteristicProperties: true, BluetoothRemoteGATTServer: true, BluetoothRemoteGATTService: true, BluetoothUUID: true, BudgetService: true, Cache: true, DOMFileSystemSync: true, DirectoryEntrySync: true, DirectoryReaderSync: true, EntrySync: true, FileEntrySync: true, FileReaderSync: true, FileWriterSync: true, HTMLAllCollection: true, Mojo: true, MojoHandle: true, MojoWatcher: true, NFC: true, PagePopupController: true, Report: true, Request: true, Response: true, SubtleCrypto: true, USBAlternateInterface: true, USBConfiguration: true, USBDevice: true, USBEndpoint: true, USBInTransferResult: true, USBInterface: true, USBIsochronousInTransferPacket: true, USBIsochronousInTransferResult: true, USBIsochronousOutTransferPacket: true, USBIsochronousOutTransferResult: true, USBOutTransferResult: true, WorkerLocation: true, WorkerNavigator: true, Worklet: true, IDBCursor: true, IDBCursorWithValue: true, IDBFactory: true, IDBIndex: true, IDBKeyRange: true, IDBObjectStore: true, IDBObservation: true, IDBObserver: true, IDBObserverChanges: true, SVGAngle: true, SVGAnimatedAngle: true, SVGAnimatedBoolean: true, SVGAnimatedEnumeration: true, SVGAnimatedInteger: true, SVGAnimatedLength: true, SVGAnimatedLengthList: true, SVGAnimatedNumber: true, SVGAnimatedNumberList: true, SVGAnimatedPreserveAspectRatio: true, SVGAnimatedRect: true, SVGAnimatedString: true, SVGAnimatedTransformList: true, SVGMatrix: true, SVGPoint: true, SVGPreserveAspectRatio: true, SVGRect: true, SVGUnitTypes: true, AudioListener: true, AudioParam: true, AudioTrack: true, AudioWorkletGlobalScope: true, AudioWorkletProcessor: true, PeriodicWave: true, WebGLActiveInfo: true, ANGLEInstancedArrays: true, ANGLE_instanced_arrays: true, WebGLBuffer: true, WebGLCanvas: true, WebGLColorBufferFloat: true, WebGLCompressedTextureASTC: true, WebGLCompressedTextureATC: true, WEBGL_compressed_texture_atc: true, WebGLCompressedTextureETC1: true, WEBGL_compressed_texture_etc1: true, WebGLCompressedTextureETC: true, WebGLCompressedTexturePVRTC: true, WEBGL_compressed_texture_pvrtc: true, WebGLCompressedTextureS3TC: true, WEBGL_compressed_texture_s3tc: true, WebGLCompressedTextureS3TCsRGB: true, WebGLDebugRendererInfo: true, WEBGL_debug_renderer_info: true, WebGLDebugShaders: true, WEBGL_debug_shaders: true, WebGLDepthTexture: true, WEBGL_depth_texture: true, WebGLDrawBuffers: true, WEBGL_draw_buffers: true, EXTsRGB: true, EXT_sRGB: true, EXTBlendMinMax: true, EXT_blend_minmax: true, EXTColorBufferFloat: true, EXTColorBufferHalfFloat: true, EXTDisjointTimerQuery: true, EXTDisjointTimerQueryWebGL2: true, EXTFragDepth: true, EXT_frag_depth: true, EXTShaderTextureLOD: true, EXT_shader_texture_lod: true, EXTTextureFilterAnisotropic: true, EXT_texture_filter_anisotropic: true, WebGLFramebuffer: true, WebGLGetBufferSubDataAsync: true, WebGLLoseContext: true, WebGLExtensionLoseContext: true, WEBGL_lose_context: true, OESElementIndexUint: true, OES_element_index_uint: true, OESStandardDerivatives: true, OES_standard_derivatives: true, OESTextureFloat: true, OES_texture_float: true, OESTextureFloatLinear: true, OES_texture_float_linear: true, OESTextureHalfFloat: true, OES_texture_half_float: true, OESTextureHalfFloatLinear: true, OES_texture_half_float_linear: true, OESVertexArrayObject: true, OES_vertex_array_object: true, WebGLProgram: true, WebGLQuery: true, WebGLRenderbuffer: true, WebGLRenderingContext: true, WebGL2RenderingContext: true, WebGLSampler: true, WebGLShader: true, WebGLShaderPrecisionFormat: true, WebGLSync: true, WebGLTexture: true, WebGLTimerQueryEXT: true, WebGLTransformFeedback: true, WebGLUniformLocation: true, WebGLVertexArrayObject: true, WebGLVertexArrayObjectOES: true, WebGL2RenderingContextBase: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLButtonElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLDivElement: true, HTMLEmbedElement: true, HTMLFieldSetElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLImageElement: true, HTMLInputElement: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLOutputElement: true, HTMLParagraphElement: true, HTMLParamElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLScriptElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLSpanElement: true, HTMLStyleElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTextAreaElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, AccessibleNodeList: true, HTMLAnchorElement: true, HTMLAreaElement: true, HTMLBaseElement: true, Blob: false, HTMLBodyElement: true, Comment: true, ProcessingInstruction: true, CharacterData: false, CSSPerspective: true, CSSCharsetRule: true, CSSConditionRule: true, CSSFontFaceRule: true, CSSGroupingRule: true, CSSImportRule: true, CSSKeyframeRule: true, MozCSSKeyframeRule: true, WebKitCSSKeyframeRule: true, CSSKeyframesRule: true, MozCSSKeyframesRule: true, WebKitCSSKeyframesRule: true, CSSMediaRule: true, CSSNamespaceRule: true, CSSPageRule: true, CSSRule: true, CSSStyleRule: true, CSSSupportsRule: true, CSSViewportRule: true, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, CSSImageValue: true, CSSKeywordValue: true, CSSNumericValue: true, CSSPositionValue: true, CSSResourceValue: true, CSSUnitValue: true, CSSURLImageValue: true, CSSStyleValue: false, CSSMatrixComponent: true, CSSRotation: true, CSSScale: true, CSSSkew: true, CSSTranslation: true, CSSTransformComponent: false, CSSTransformValue: true, CSSUnparsedValue: true, DataTransferItemList: true, XMLDocument: true, Document: false, DOMException: true, DOMImplementation: true, ClientRectList: true, DOMRectList: true, DOMRectReadOnly: false, DOMStringList: true, DOMTokenList: true, MathMLElement: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGScriptElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, Element: false, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CompositionEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, Event: true, InputEvent: true, SubmitEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FocusEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, KeyboardEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MessageEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MouseEvent: true, DragEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PointerEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, ProgressEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, SyncEvent: true, TextEvent: true, TouchEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, UIEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, WheelEvent: true, MojoInterfaceRequestEvent: true, ResourceProgressEvent: true, USBConnectionEvent: true, IDBVersionChangeEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, AbsoluteOrientationSensor: true, Accelerometer: true, AccessibleNode: true, AmbientLightSensor: true, Animation: true, ApplicationCache: true, DOMApplicationCache: true, OfflineResourceList: true, BackgroundFetchRegistration: true, BatteryManager: true, BroadcastChannel: true, CanvasCaptureMediaStreamTrack: true, DedicatedWorkerGlobalScope: true, EventSource: true, FileReader: true, FontFaceSet: true, Gyroscope: true, XMLHttpRequest: true, XMLHttpRequestEventTarget: true, XMLHttpRequestUpload: true, LinearAccelerationSensor: true, Magnetometer: true, MediaDevices: true, MediaKeySession: true, MediaQueryList: true, MediaRecorder: true, MediaSource: true, MediaStream: true, MediaStreamTrack: true, MessagePort: true, MIDIAccess: true, MIDIInput: true, MIDIOutput: true, MIDIPort: true, NetworkInformation: true, Notification: true, OffscreenCanvas: true, OrientationSensor: true, PaymentRequest: true, Performance: true, PermissionStatus: true, PresentationAvailability: true, PresentationConnection: true, PresentationConnectionList: true, PresentationRequest: true, RelativeOrientationSensor: true, RemotePlayback: true, RTCDataChannel: true, DataChannel: true, RTCDTMFSender: true, RTCPeerConnection: true, webkitRTCPeerConnection: true, mozRTCPeerConnection: true, ScreenOrientation: true, Sensor: true, ServiceWorker: true, ServiceWorkerContainer: true, ServiceWorkerGlobalScope: true, ServiceWorkerRegistration: true, SharedWorker: true, SharedWorkerGlobalScope: true, SpeechRecognition: true, webkitSpeechRecognition: true, SpeechSynthesis: true, SpeechSynthesisUtterance: true, VR: true, VRDevice: true, VRDisplay: true, VRSession: true, VisualViewport: true, WebSocket: true, Window: true, DOMWindow: true, Worker: true, WorkerGlobalScope: true, WorkerPerformance: true, BluetoothDevice: true, BluetoothRemoteGATTCharacteristic: true, Clipboard: true, MojoInterfaceInterceptor: true, USB: true, IDBDatabase: true, IDBOpenDBRequest: true, IDBVersionChangeRequest: true, IDBRequest: true, IDBTransaction: true, AnalyserNode: true, RealtimeAnalyserNode: true, AudioBufferSourceNode: true, AudioDestinationNode: true, AudioNode: true, AudioScheduledSourceNode: true, AudioWorkletNode: true, BiquadFilterNode: true, ChannelMergerNode: true, AudioChannelMerger: true, ChannelSplitterNode: true, AudioChannelSplitter: true, ConstantSourceNode: true, ConvolverNode: true, DelayNode: true, DynamicsCompressorNode: true, GainNode: true, AudioGainNode: true, IIRFilterNode: true, MediaElementAudioSourceNode: true, MediaStreamAudioDestinationNode: true, MediaStreamAudioSourceNode: true, OscillatorNode: true, Oscillator: true, PannerNode: true, AudioPannerNode: true, webkitAudioPannerNode: true, ScriptProcessorNode: true, JavaScriptAudioNode: true, StereoPannerNode: true, WaveShaperNode: true, EventTarget: false, File: true, FileList: true, FileWriter: true, HTMLFormElement: true, Gamepad: true, History: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, HTMLDocument: true, Location: true, MediaList: true, MIDIInputMap: true, MIDIOutputMap: true, MimeType: true, MimeTypeArray: true, DocumentFragment: true, ShadowRoot: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, Plugin: true, PluginArray: true, RTCStatsReport: true, HTMLSelectElement: true, SourceBuffer: true, SourceBufferList: true, SpeechGrammar: true, SpeechGrammarList: true, SpeechRecognitionResult: true, Storage: true, CSSStyleSheet: true, StyleSheet: true, HTMLTemplateElement: true, CDATASection: true, Text: true, TextTrack: true, TextTrackCue: true, VTTCue: true, TextTrackCueList: true, TextTrackList: true, TimeRanges: true, Touch: true, TouchList: true, TrackDefaultList: true, URL: true, VideoTrackList: true, Attr: true, CSSRuleList: true, ClientRect: true, DOMRect: true, GamepadList: true, NamedNodeMap: true, MozNamedAttrMap: true, SpeechRecognitionResultList: true, StyleSheetList: true, SVGLength: true, SVGLengthList: true, SVGNumber: true, SVGNumberList: true, SVGPointList: true, SVGStringList: true, SVGTransform: true, SVGTransformList: true, AudioBuffer: true, AudioParamMap: true, AudioTrackList: true, AudioContext: true, webkitAudioContext: true, BaseAudioContext: false, OfflineAudioContext: true});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
    A._SourceBufferList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
    A._TextTrackList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
  })();
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$3$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$3$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$2$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$2$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$3$6 = function(a, b, c, d, e, f) {
    return this(a, b, c, d, e, f);
  };
  Function.prototype.call$2$5 = function(a, b, c, d, e) {
    return this(a, b, c, d, e);
  };
  Function.prototype.call$1$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$5 = function(a, b, c, d, e) {
    return this(a, b, c, d, e);
  };
  Function.prototype.call$1$0 = function() {
    return this();
  };
  Function.prototype.call$2$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$1$2 = function(a, b) {
    return this(a, b);
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i) {
        scripts[i].removeEventListener("load", onLoad, false);
      }
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].addEventListener("load", onLoad, false);
    }
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function") {
      dartMainRunner(callMain, []);
    } else {
      callMain([]);
    }
  });
})();

//# sourceMappingURL=main.dart.js.map
